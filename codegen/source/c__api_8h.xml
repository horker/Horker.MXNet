<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="c__api_8h" kind="file" language="C++">
    <compoundname>c_api.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="imagenet__inference_8cpp" local="yes">incubator-mxnet/cpp-package/example/inference/imagenet_inference.cpp</includedby>
    <includedby refid="test__kvstore_8cpp" local="yes">incubator-mxnet/cpp-package/example/test_kvstore.cpp</includedby>
    <includedby refid="test__ndarray__copy_8cpp" local="yes">incubator-mxnet/cpp-package/example/test_ndarray_copy.cpp</includedby>
    <includedby refid="cpp-package_2include_2mxnet-cpp_2base_8h" local="yes">incubator-mxnet/cpp-package/include/mxnet-cpp/base.h</includedby>
    <includedby refid="libinfo_8h" local="yes">incubator-mxnet/include/mxnet/libinfo.h</includedby>
    <includedby refid="c__api__test_8h" local="no">incubator-mxnet/include/mxnet/c_api_test.h</includedby>
    <includedby refid="include_2mxnet_2executor_8h" local="yes">incubator-mxnet/include/mxnet/executor.h</includedby>
    <includedby refid="imperative_8h" local="no">incubator-mxnet/include/mxnet/imperative.h</includedby>
    <includedby refid="cv__api_8h" local="no">incubator-mxnet/plugin/opencv/cv_api.h</includedby>
    <includedby refid="c__api__common_8h" local="no">incubator-mxnet/src/c_api/c_api_common.h</includedby>
    <includedby refid="_r-package_2src_2base_8h" local="no">incubator-mxnet/R-package/src/base.h</includedby>
    <includedby refid="_r-package_2src_2executor_8h" local="no">incubator-mxnet/R-package/src/executor.h</includedby>
    <includedby refid="_r-package_2src_2symbol_8h" local="no">incubator-mxnet/R-package/src/symbol.h</includedby>
    <includedby refid="_r-package_2src_2ndarray_8h" local="no">incubator-mxnet/R-package/src/ndarray.h</includedby>
    <includedby refid="_r-package_2src_2io_8h" local="no">incubator-mxnet/R-package/src/io.h</includedby>
    <includedby refid="_r-package_2src_2kvstore_8h" local="no">incubator-mxnet/R-package/src/kvstore.h</includedby>
    <includedby refid="org__apache__mxnet__init__native__c__api_8cc" local="no">incubator-mxnet/scala-package/init-native/src/main/native/org_apache_mxnet_init_native_c_api.cc</includedby>
    <includedby refid="org__apache__mxnet__native__c__api_8cc" local="no">incubator-mxnet/scala-package/native/src/main/native/org_apache_mxnet_native_c_api.cc</includedby>
    <includedby refid="c__api_8cc" local="yes">incubator-mxnet/src/c_api/c_api.cc</includedby>
    <includedby refid="custom-inl_8h" local="no">incubator-mxnet/src/operator/custom/custom-inl.h</includedby>
    <includedby refid="c__api__executor_8cc" local="no">incubator-mxnet/src/c_api/c_api_executor.cc</includedby>
    <includedby refid="c__api__function_8cc" local="no">incubator-mxnet/src/c_api/c_api_function.cc</includedby>
    <includedby refid="c__api__ndarray_8cc" local="no">incubator-mxnet/src/c_api/c_api_ndarray.cc</includedby>
    <includedby refid="c__api__symbolic_8cc" local="yes">incubator-mxnet/src/c_api/c_api_symbolic.cc</includedby>
    <includedby refid="kvstore__dist__server_8h" local="no">incubator-mxnet/src/kvstore/kvstore_dist_server.h</includedby>
    <includedby refid="tvm__bridge_8cc" local="no">incubator-mxnet/src/nnvm/tvm_bridge.cc</includedby>
    <includedby refid="native__op-inl_8h" local="no">incubator-mxnet/src/operator/custom/native_op-inl.h</includedby>
    <includedby refid="ndarray__op-inl_8h" local="no">incubator-mxnet/src/operator/custom/ndarray_op-inl.h</includedby>
    <includedby refid="threaded__engine__test_8cc" local="no">incubator-mxnet/tests/cpp/engine/threaded_engine_test.cc</includedby>
    <incdepgraph>
      <node id="37416">
        <label>stdbool.h</label>
      </node>
      <node id="37414">
        <label>stdint.h</label>
      </node>
      <node id="37415">
        <label>stddef.h</label>
      </node>
      <node id="37413">
        <label>incubator-mxnet/include/mxnet/c_api.h</label>
        <link refid="c__api_8h"/>
        <childnode refid="37414" relation="include">
        </childnode>
        <childnode refid="37415" relation="include">
        </childnode>
        <childnode refid="37416" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="37597">
        <label>incubator-mxnet/tests/cpp/include/test_legacy_op.h</label>
        <link refid="test__legacy__op_8h_source"/>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37598" relation="include">
        </childnode>
      </node>
      <node id="37513">
        <label>incubator-mxnet/src/operator/nn/moments-inl.h</label>
        <link refid="moments-inl_8h"/>
        <childnode refid="37514" relation="include">
        </childnode>
        <childnode refid="37516" relation="include">
        </childnode>
      </node>
      <node id="37491">
        <label>incubator-mxnet/include/mxnet/operator_util.h</label>
        <link refid="operator__util_8h"/>
        <childnode refid="37492" relation="include">
        </childnode>
        <childnode refid="37504" relation="include">
        </childnode>
        <childnode refid="37505" relation="include">
        </childnode>
        <childnode refid="37549" relation="include">
        </childnode>
        <childnode refid="37561" relation="include">
        </childnode>
        <childnode refid="37560" relation="include">
        </childnode>
        <childnode refid="37590" relation="include">
        </childnode>
        <childnode refid="37681" relation="include">
        </childnode>
        <childnode refid="37471" relation="include">
        </childnode>
        <childnode refid="37614" relation="include">
        </childnode>
        <childnode refid="37650" relation="include">
        </childnode>
        <childnode refid="37655" relation="include">
        </childnode>
        <childnode refid="37617" relation="include">
        </childnode>
        <childnode refid="37620" relation="include">
        </childnode>
        <childnode refid="37682" relation="include">
        </childnode>
        <childnode refid="37683" relation="include">
        </childnode>
        <childnode refid="37476" relation="include">
        </childnode>
        <childnode refid="37580" relation="include">
        </childnode>
        <childnode refid="37628" relation="include">
        </childnode>
        <childnode refid="37612" relation="include">
        </childnode>
        <childnode refid="37630" relation="include">
        </childnode>
        <childnode refid="37631" relation="include">
        </childnode>
        <childnode refid="37633" relation="include">
        </childnode>
        <childnode refid="37685" relation="include">
        </childnode>
        <childnode refid="37478" relation="include">
        </childnode>
        <childnode refid="37637" relation="include">
        </childnode>
        <childnode refid="37660" relation="include">
        </childnode>
        <childnode refid="37686" relation="include">
        </childnode>
        <childnode refid="37664" relation="include">
        </childnode>
        <childnode refid="37498" relation="include">
        </childnode>
        <childnode refid="37639" relation="include">
        </childnode>
        <childnode refid="37693" relation="include">
        </childnode>
        <childnode refid="37526" relation="include">
        </childnode>
        <childnode refid="37528" relation="include">
        </childnode>
        <childnode refid="37531" relation="include">
        </childnode>
        <childnode refid="37534" relation="include">
        </childnode>
        <childnode refid="37536" relation="include">
        </childnode>
        <childnode refid="37669" relation="include">
        </childnode>
        <childnode refid="37537" relation="include">
        </childnode>
        <childnode refid="37671" relation="include">
        </childnode>
        <childnode refid="37673" relation="include">
        </childnode>
        <childnode refid="37694" relation="include">
        </childnode>
        <childnode refid="37695" relation="include">
        </childnode>
        <childnode refid="37642" relation="include">
        </childnode>
        <childnode refid="37675" relation="include">
        </childnode>
        <childnode refid="37644" relation="include">
        </childnode>
        <childnode refid="37677" relation="include">
        </childnode>
        <childnode refid="37646" relation="include">
        </childnode>
        <childnode refid="37679" relation="include">
        </childnode>
      </node>
      <node id="37546">
        <label>incubator-mxnet/src/operator/tensor/diag_op.cc</label>
        <link refid="diag__op_8cc"/>
      </node>
      <node id="37492">
        <label>incubator-mxnet/src/operator/tensor/matrix_op-inl.h</label>
        <link refid="matrix__op-inl_8h"/>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37494" relation="include">
        </childnode>
        <childnode refid="37495" relation="include">
        </childnode>
        <childnode refid="37497" relation="include">
        </childnode>
        <childnode refid="37501" relation="include">
        </childnode>
        <childnode refid="37503" relation="include">
        </childnode>
      </node>
      <node id="37537">
        <label>incubator-mxnet/src/operator/random/pdf_op.h</label>
        <link refid="pdf__op_8h"/>
        <childnode refid="37538" relation="include">
        </childnode>
      </node>
      <node id="37897">
        <label>incubator-mxnet/src/storage/storage_manager.h</label>
        <link refid="storage__manager_8h"/>
        <childnode refid="37898" relation="include">
        </childnode>
        <childnode refid="37899" relation="include">
        </childnode>
        <childnode refid="37861" relation="include">
        </childnode>
        <childnode refid="37854" relation="include">
        </childnode>
      </node>
      <node id="37472">
        <label>incubator-mxnet/amalgamation/mxnet_predict0.cc</label>
        <link refid="mxnet__predict0_8cc_source"/>
      </node>
      <node id="37881">
        <label>incubator-mxnet/src/io/iter_sparse_batchloader.h</label>
        <link refid="iter__sparse__batchloader_8h"/>
        <childnode refid="37879" relation="include">
        </childnode>
      </node>
      <node id="37699">
        <label>incubator-mxnet/plugin/caffe/caffe_loss-inl.h</label>
        <link refid="caffe__loss-inl_8h"/>
        <childnode refid="37700" relation="include">
        </childnode>
      </node>
      <node id="37588">
        <label>incubator-mxnet/src/operator/tensor/init_op.cc</label>
        <link refid="init__op_8cc"/>
      </node>
      <node id="37817">
        <label>incubator-mxnet/src/operator/swapaxis-inl.h</label>
        <link refid="swapaxis-inl_8h"/>
        <childnode refid="37818" relation="include">
        </childnode>
      </node>
      <node id="37521">
        <label>incubator-mxnet/src/operator/nn/mkldnn/mkldnn_softmax.cc</label>
        <link refid="mkldnn__softmax_8cc"/>
      </node>
      <node id="37511">
        <label>incubator-mxnet/src/operator/nnpack/nnpack_fully_connected-inl.h</label>
        <link refid="nnpack__fully__connected-inl_8h"/>
      </node>
      <node id="37533">
        <label>incubator-mxnet/src/operator/quantization/quantize_v2.cc</label>
        <link refid="quantize__v2_8cc_source"/>
      </node>
      <node id="37524">
        <label>incubator-mxnet/src/operator/numpy/np_broadcast_reduce_op_value.cc</label>
        <link refid="np__broadcast__reduce__op__value_8cc_source"/>
      </node>
      <node id="37767">
        <label>incubator-mxnet/src/operator/grid_generator.cc</label>
        <link refid="grid__generator_8cc"/>
      </node>
      <node id="37457">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/symbol.h</label>
        <link refid="cpp-package_2include_2mxnet-cpp_2symbol_8h_source"/>
        <childnode refid="37458" relation="include">
        </childnode>
        <childnode refid="37422" relation="include">
        </childnode>
        <childnode refid="37448" relation="include">
        </childnode>
        <childnode refid="37459" relation="include">
        </childnode>
        <childnode refid="37443" relation="include">
        </childnode>
      </node>
      <node id="37572">
        <label>incubator-mxnet/src/operator/tensor/elemwise_unary_op_trig.cc</label>
        <link refid="elemwise__unary__op__trig_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37746">
        <label>incubator-mxnet/src/operator/contrib/multibox_target.cc</label>
        <link refid="multibox__target_8cc"/>
      </node>
      <node id="37607">
        <label>incubator-mxnet/src/ndarray/ndarray_function-inl.h</label>
        <link refid="ndarray__function-inl_8h"/>
        <childnode refid="37565" relation="include">
        </childnode>
      </node>
      <node id="37835">
        <label>incubator-mxnet/src/imperative/cached_op.h</label>
        <link refid="cached__op_8h_source"/>
        <childnode refid="37471" relation="include">
        </childnode>
        <childnode refid="37473" relation="include">
        </childnode>
        <childnode refid="37474" relation="include">
        </childnode>
        <childnode refid="37475" relation="include">
        </childnode>
        <childnode refid="37477" relation="include">
        </childnode>
        <childnode refid="37648" relation="include">
        </childnode>
        <childnode refid="37649" relation="include">
        </childnode>
      </node>
      <node id="37667">
        <label>incubator-mxnet/src/operator/nn/pooling.cc</label>
        <link refid="pooling_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37936">
        <label>incubator-mxnet/R-package/src/kvstore.h</label>
        <link refid="_r-package_2src_2kvstore_8h_source"/>
        <childnode refid="37932" relation="include">
        </childnode>
        <childnode refid="37928" relation="include">
        </childnode>
      </node>
      <node id="37904">
        <label>incubator-mxnet/plugin/caffe/caffe_blob.h</label>
        <link refid="caffe__blob_8h"/>
        <childnode refid="37905" relation="include">
        </childnode>
        <childnode refid="37698" relation="include">
        </childnode>
        <childnode refid="37699" relation="include">
        </childnode>
        <childnode refid="37701" relation="include">
        </childnode>
      </node>
      <node id="37828">
        <label>incubator-mxnet/src/operator/contrib/nn/deformable_im2col.h</label>
        <link refid="deformable__im2col_8h"/>
        <childnode refid="37683" relation="include">
        </childnode>
      </node>
      <node id="37480">
        <label>incubator-mxnet/tests/cpp/include/test_core_op.h</label>
        <link refid="test__core__op_8h_source"/>
        <childnode refid="37481" relation="include">
        </childnode>
        <childnode refid="37482" relation="include">
        </childnode>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37484" relation="include">
        </childnode>
        <childnode refid="37485" relation="include">
        </childnode>
        <childnode refid="37486" relation="include">
        </childnode>
      </node>
      <node id="37833">
        <label>incubator-mxnet/include/mxnet/graph_attr_types.h</label>
        <link refid="graph__attr__types_8h"/>
        <childnode refid="37834" relation="include">
        </childnode>
        <childnode refid="37837" relation="include">
        </childnode>
        <childnode refid="37819" relation="include">
        </childnode>
        <childnode refid="37821" relation="include">
        </childnode>
        <childnode refid="37719" relation="include">
        </childnode>
      </node>
      <node id="37908">
        <label>incubator-mxnet/plugin/torch/torch_base.cc</label>
        <link refid="torch__base_8cc"/>
      </node>
      <node id="37438">
        <label>incubator-mxnet/cpp-package/example/feature_extract/feature_extract.cpp</label>
        <link refid="feature__extract_8cpp_source"/>
      </node>
      <node id="37649">
        <label>incubator-mxnet/src/operator/subgraph/default_subgraph_property_v2.cc</label>
        <link refid="default__subgraph__property__v2_8cc_source"/>
      </node>
      <node id="37474">
        <label>incubator-mxnet/src/imperative/imperative.cc</label>
        <link refid="imperative_8cc_source"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37462">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/shape.h</label>
        <link refid="shape_8h"/>
        <childnode refid="37449" relation="include">
        </childnode>
        <childnode refid="37442" relation="include">
        </childnode>
      </node>
      <node id="37920">
        <label>incubator-mxnet/tests/cpp/test_main.cc</label>
        <link refid="test__main_8cc"/>
      </node>
      <node id="37782">
        <label>incubator-mxnet/src/operator/sequence_op_common.h</label>
        <link refid="sequence__op__common_8h"/>
        <childnode refid="37664" relation="include">
        </childnode>
        <childnode refid="37783" relation="include">
        </childnode>
        <childnode refid="37785" relation="include">
        </childnode>
      </node>
      <node id="37477">
        <label>incubator-mxnet/src/operator/subgraph_op_common.h</label>
        <link refid="subgraph__op__common_8h_source"/>
        <childnode refid="37476" relation="include">
        </childnode>
        <childnode refid="37478" relation="include">
        </childnode>
        <childnode refid="37479" relation="include">
        </childnode>
      </node>
      <node id="37583">
        <label>incubator-mxnet/src/operator/nn/softmax_activation.cc</label>
        <link refid="softmax__activation_8cc_source"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37880">
        <label>incubator-mxnet/src/io/iter_batchloader.h</label>
        <link refid="iter__batchloader_8h"/>
        <childnode refid="37839" relation="include">
        </childnode>
        <childnode refid="37877" relation="include">
        </childnode>
        <childnode refid="37840" relation="include">
        </childnode>
        <childnode refid="37841" relation="include">
        </childnode>
        <childnode refid="37881" relation="include">
        </childnode>
      </node>
      <node id="37689">
        <label>incubator-mxnet/src/operator/nn/cudnn/cudnn_convolution-inl.h</label>
        <link refid="cudnn__convolution-inl_8h"/>
      </node>
      <node id="37618">
        <label>incubator-mxnet/src/operator/contrib/adamw.cc</label>
        <link refid="adamw_8cc_source"/>
      </node>
      <node id="37800">
        <label>incubator-mxnet/src/operator/nn/mkldnn/mkldnn_act.cc</label>
        <link refid="mkldnn__act_8cc"/>
      </node>
      <node id="37742">
        <label>incubator-mxnet/src/operator/contrib/multibox_detection.cc</label>
        <link refid="multibox__detection_8cc"/>
      </node>
      <node id="37713">
        <label>incubator-mxnet/src/operator/channel_op_common.h</label>
        <link refid="channel__op__common_8h"/>
        <childnode refid="37492" relation="include">
        </childnode>
        <childnode refid="37506" relation="include">
        </childnode>
        <childnode refid="37714" relation="include">
        </childnode>
      </node>
      <node id="37429">
        <label>incubator-mxnet/cpp-package/example/inception_bn.cpp</label>
        <link refid="inception__bn_8cpp_source"/>
      </node>
      <node id="37834">
        <label>incubator-mxnet/include/mxnet/imperative.h</label>
        <link refid="imperative_8h_source"/>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37710" relation="include">
        </childnode>
        <childnode refid="37590" relation="include">
        </childnode>
        <childnode refid="37468" relation="include">
        </childnode>
        <childnode refid="37469" relation="include">
        </childnode>
        <childnode refid="37711" relation="include">
        </childnode>
        <childnode refid="37471" relation="include">
        </childnode>
        <childnode refid="37470" relation="include">
        </childnode>
        <childnode refid="37835" relation="include">
        </childnode>
        <childnode refid="37717" relation="include">
        </childnode>
        <childnode refid="37719" relation="include">
        </childnode>
        <childnode refid="37494" relation="include">
        </childnode>
        <childnode refid="37836" relation="include">
        </childnode>
      </node>
      <node id="37877">
        <label>incubator-mxnet/src/io/iter_csv.cc</label>
        <link refid="iter__csv_8cc"/>
      </node>
      <node id="37440">
        <label>incubator-mxnet/cpp-package/example/test_optimizer.cpp</label>
        <link refid="test__optimizer_8cpp_source"/>
      </node>
      <node id="37528">
        <label>incubator-mxnet/src/operator/quantization/quantize-inl.h</label>
        <link refid="quantize-inl_8h"/>
        <childnode refid="37529" relation="include">
        </childnode>
        <childnode refid="37530" relation="include">
        </childnode>
      </node>
      <node id="37532">
        <label>incubator-mxnet/src/operator/quantization/quantize_graph_pass.cc</label>
        <link refid="quantize__graph__pass_8cc_source"/>
      </node>
      <node id="37743">
        <label>incubator-mxnet/src/operator/contrib/multibox_prior-inl.h</label>
        <link refid="multibox__prior-inl_8h"/>
        <childnode refid="37744" relation="include">
        </childnode>
      </node>
      <node id="37463">
        <label>incubator-mxnet/include/mxnet/libinfo.h</label>
        <link refid="libinfo_8h"/>
        <childnode refid="37464" relation="include">
        </childnode>
        <childnode refid="37921" relation="include">
        </childnode>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37915" relation="include">
        </childnode>
        <childnode refid="37922" relation="include">
        </childnode>
      </node>
      <node id="37500">
        <label>incubator-mxnet/src/operator/numpy/np_tensordot_op.cc</label>
        <link refid="np__tensordot__op_8cc"/>
      </node>
      <node id="37445">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/monitor.hpp</label>
        <link refid="monitor_8hpp"/>
        <childnode refid="37424" relation="include">
        </childnode>
      </node>
      <node id="37725">
        <label>incubator-mxnet/src/operator/bilinear_sampler.cc</label>
        <link refid="bilinear__sampler_8cc"/>
      </node>
      <node id="37599">
        <label>incubator-mxnet/tests/cpp/include/test_op_runner.h</label>
        <link refid="test__op__runner_8h"/>
        <childnode refid="37597" relation="include">
        </childnode>
        <childnode refid="37482" relation="include">
        </childnode>
        <childnode refid="37484" relation="include">
        </childnode>
        <childnode refid="37485" relation="include">
        </childnode>
        <childnode refid="37486" relation="include">
        </childnode>
        <childnode refid="37598" relation="include">
        </childnode>
      </node>
      <node id="37701">
        <label>incubator-mxnet/plugin/caffe/caffe_op-inl.h</label>
        <link refid="caffe__op-inl_8h"/>
        <childnode refid="37702" relation="include">
        </childnode>
      </node>
      <node id="37508">
        <label>incubator-mxnet/src/operator/quantization/quantized_concat.cc</label>
        <link refid="quantized__concat_8cc"/>
      </node>
      <node id="37891">
        <label>incubator-mxnet/src/kvstore/kvstore_utils.h</label>
        <link refid="kvstore__utils_8h"/>
        <childnode refid="37602" relation="include">
        </childnode>
        <childnode refid="37606" relation="include">
        </childnode>
        <childnode refid="37603" relation="include">
        </childnode>
        <childnode refid="37859" relation="include">
        </childnode>
      </node>
      <node id="37815">
        <label>incubator-mxnet/src/operator/svm_output-inl.h</label>
        <link refid="svm__output-inl_8h"/>
        <childnode refid="37816" relation="include">
        </childnode>
      </node>
      <node id="37724">
        <label>incubator-mxnet/src/operator/bilinear_sampler-inl.h</label>
        <link refid="bilinear__sampler-inl_8h"/>
        <childnode refid="37725" relation="include">
        </childnode>
        <childnode refid="37726" relation="include">
        </childnode>
      </node>
      <node id="37771">
        <label>incubator-mxnet/src/operator/instance_norm-inl.h</label>
        <link refid="instance__norm-inl_8h"/>
        <childnode refid="37772" relation="include">
        </childnode>
      </node>
      <node id="37426">
        <label>incubator-mxnet/cpp-package/example/alexnet.cpp</label>
        <link refid="alexnet_8cpp_source"/>
      </node>
      <node id="37652">
        <label>incubator-mxnet/src/operator/tensor/amp_cast.h</label>
        <link refid="amp__cast_8h"/>
        <childnode refid="37653" relation="include">
        </childnode>
        <childnode refid="37654" relation="include">
        </childnode>
      </node>
      <node id="37801">
        <label>incubator-mxnet/src/operator/nn/mkldnn/mkldnn_sum.cc</label>
        <link refid="mkldnn__sum_8cc"/>
      </node>
      <node id="37820">
        <label>incubator-mxnet/src/common/exec_utils.h</label>
        <link refid="exec__utils_8h"/>
        <childnode refid="37471" relation="include">
        </childnode>
        <childnode refid="37470" relation="include">
        </childnode>
        <childnode refid="37821" relation="include">
        </childnode>
        <childnode refid="37487" relation="include">
        </childnode>
        <childnode refid="37719" relation="include">
        </childnode>
      </node>
      <node id="37665">
        <label>incubator-mxnet/src/operator/nn/ctc_loss.cc</label>
        <link refid="ctc__loss_8cc"/>
      </node>
      <node id="37681">
        <label>incubator-mxnet/src/operator/tensor/broadcast_reduce-inl.h</label>
        <link refid="broadcast__reduce-inl_8h"/>
        <childnode refid="37549" relation="include">
        </childnode>
      </node>
      <node id="37899">
        <label>incubator-mxnet/src/storage/naive_storage_manager.h</label>
        <link refid="naive__storage__manager_8h"/>
        <childnode refid="37854" relation="include">
        </childnode>
      </node>
      <node id="37709">
        <label>incubator-mxnet/plugin/warpctc/warpctc.cc</label>
        <link refid="warpctc_8cc"/>
      </node>
      <node id="37552">
        <label>incubator-mxnet/src/operator/nn/dropout-inl.h</label>
        <link refid="dropout-inl_8h"/>
        <childnode refid="37553" relation="include">
        </childnode>
      </node>
      <node id="37805">
        <label>incubator-mxnet/src/operator/pooling_v1.cc</label>
        <link refid="pooling__v1_8cc"/>
      </node>
      <node id="37898">
        <label>incubator-mxnet/src/storage/cpu_shared_storage_manager.h</label>
        <link refid="cpu__shared__storage__manager_8h_source"/>
        <childnode refid="37854" relation="include">
        </childnode>
      </node>
      <node id="37670">
        <label>incubator-mxnet/src/operator/random/multisample_op.cc</label>
        <link refid="multisample__op_8cc"/>
      </node>
      <node id="37432">
        <label>incubator-mxnet/cpp-package/example/mlp.cpp</label>
        <link refid="mlp_8cpp_source"/>
      </node>
      <node id="37562">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_op-inl.h</label>
        <link refid="elemwise__binary__op-inl_8h"/>
        <childnode refid="37563" relation="include">
        </childnode>
        <childnode refid="37565" relation="include">
        </childnode>
        <childnode refid="37566" relation="include">
        </childnode>
        <childnode refid="37567" relation="include">
        </childnode>
        <childnode refid="37568" relation="include">
        </childnode>
        <childnode refid="37569" relation="include">
        </childnode>
        <childnode refid="37570" relation="include">
        </childnode>
        <childnode refid="37571" relation="include">
        </childnode>
        <childnode refid="37572" relation="include">
        </childnode>
      </node>
      <node id="37584">
        <label>incubator-mxnet/src/operator/numpy/np_init_op.cc</label>
        <link refid="np__init__op_8cc"/>
      </node>
      <node id="37874">
        <label>incubator-mxnet/include/mxnet/io.h</label>
        <link refid="include_2mxnet_2io_8h_source"/>
        <childnode refid="37875" relation="include">
        </childnode>
        <childnode refid="37876" relation="include">
        </childnode>
        <childnode refid="37882" relation="include">
        </childnode>
        <childnode refid="37839" relation="include">
        </childnode>
        <childnode refid="37838" relation="include">
        </childnode>
        <childnode refid="37880" relation="include">
        </childnode>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37883" relation="include">
        </childnode>
        <childnode refid="37877" relation="include">
        </childnode>
        <childnode refid="37840" relation="include">
        </childnode>
        <childnode refid="37841" relation="include">
        </childnode>
        <childnode refid="37857" relation="include">
        </childnode>
        <childnode refid="37879" relation="include">
        </childnode>
        <childnode refid="37878" relation="include">
        </childnode>
        <childnode refid="37884" relation="include">
        </childnode>
        <childnode refid="37881" relation="include">
        </childnode>
        <childnode refid="37858" relation="include">
        </childnode>
        <childnode refid="37683" relation="include">
        </childnode>
        <childnode refid="37476" relation="include">
        </childnode>
        <childnode refid="37477" relation="include">
        </childnode>
        <childnode refid="37478" relation="include">
        </childnode>
        <childnode refid="37753" relation="include">
        </childnode>
        <childnode refid="37686" relation="include">
        </childnode>
      </node>
      <node id="37910">
        <label>incubator-mxnet/src/operator/nn/pool_utils.h</label>
        <link refid="pool__utils_8h_source"/>
        <childnode refid="37830" relation="include">
        </childnode>
      </node>
      <node id="37843">
        <label>incubator-mxnet/src/profiler/custom_op_profiler.h</label>
        <link refid="custom__op__profiler_8h_source"/>
        <childnode refid="37710" relation="include">
        </childnode>
        <childnode refid="37844" relation="include">
        </childnode>
        <childnode refid="37845" relation="include">
        </childnode>
      </node>
      <node id="37559">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_broadcast_op_logic.cc</label>
        <link refid="elemwise__binary__broadcast__op__logic_8cc"/>
      </node>
      <node id="37763">
        <label>incubator-mxnet/src/operator/custom/native_op.cc</label>
        <link refid="native__op_8cc"/>
      </node>
      <node id="37611">
        <label>incubator-mxnet/src/operator/contrib/bilinear_resize.cc</label>
        <link refid="bilinear__resize_8cc"/>
      </node>
      <node id="37795">
        <label>incubator-mxnet/src/operator/nn/softmax_activation-inl.h</label>
        <link refid="softmax__activation-inl_8h"/>
        <childnode refid="37796" relation="include">
        </childnode>
        <childnode refid="37583" relation="include">
        </childnode>
      </node>
      <node id="37682">
        <label>incubator-mxnet/src/operator/contrib/bounding_box-inl.h</label>
        <link refid="bounding__box-inl_8h"/>
        <childnode refid="37656" relation="include">
        </childnode>
      </node>
      <node id="37752">
        <label>incubator-mxnet/src/operator/contrib/sync_batch_norm.cc</label>
        <link refid="sync__batch__norm_8cc"/>
      </node>
      <node id="37677">
        <label>incubator-mxnet/src/operator/tensor/la_op.h</label>
        <link refid="la__op_8h"/>
        <childnode refid="37678" relation="include">
        </childnode>
      </node>
      <node id="37466">
        <label>incubator-mxnet/include/mxnet/ndarray.h</label>
        <link refid="include_2mxnet_2ndarray_8h_source"/>
        <childnode refid="37467" relation="include">
        </childnode>
        <childnode refid="37489" relation="include">
        </childnode>
        <childnode refid="37834" relation="include">
        </childnode>
        <childnode refid="37874" relation="include">
        </childnode>
        <childnode refid="37885" relation="include">
        </childnode>
        <childnode refid="37886" relation="include">
        </childnode>
        <childnode refid="37876" relation="include">
        </childnode>
        <childnode refid="37703" relation="include">
        </childnode>
        <childnode refid="37837" relation="include">
        </childnode>
        <childnode refid="37869" relation="include">
        </childnode>
        <childnode refid="37838" relation="include">
        </childnode>
        <childnode refid="37888" relation="include">
        </childnode>
        <childnode refid="37890" relation="include">
        </childnode>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37716" relation="include">
        </childnode>
        <childnode refid="37591" relation="include">
        </childnode>
        <childnode refid="37469" relation="include">
        </childnode>
        <childnode refid="37819" relation="include">
        </childnode>
        <childnode refid="37711" relation="include">
        </childnode>
        <childnode refid="37488" relation="include">
        </childnode>
        <childnode refid="37592" relation="include">
        </childnode>
        <childnode refid="37650" relation="include">
        </childnode>
        <childnode refid="37878" relation="include">
        </childnode>
        <childnode refid="37884" relation="include">
        </childnode>
        <childnode refid="37602" relation="include">
        </childnode>
        <childnode refid="37891" relation="include">
        </childnode>
        <childnode refid="37606" relation="include">
        </childnode>
        <childnode refid="37494" relation="include">
        </childnode>
        <childnode refid="37824" relation="include">
        </childnode>
        <childnode refid="37825" relation="include">
        </childnode>
        <childnode refid="37892" relation="include">
        </childnode>
        <childnode refid="37608" relation="include">
        </childnode>
        <childnode refid="37610" relation="include">
        </childnode>
        <childnode refid="37622" relation="include">
        </childnode>
        <childnode refid="37683" relation="include">
        </childnode>
        <childnode refid="37624" relation="include">
        </childnode>
        <childnode refid="37476" relation="include">
        </childnode>
        <childnode refid="37478" relation="include">
        </childnode>
        <childnode refid="37753" relation="include">
        </childnode>
        <childnode refid="37657" relation="include">
        </childnode>
        <childnode refid="37765" relation="include">
        </childnode>
        <childnode refid="37686" relation="include">
        </childnode>
        <childnode refid="37688" relation="include">
        </childnode>
        <childnode refid="37693" relation="include">
        </childnode>
        <childnode refid="37595" relation="include">
        </childnode>
        <childnode refid="37600" relation="include">
        </childnode>
      </node>
      <node id="37783">
        <label>incubator-mxnet/src/operator/sequence_last-inl.h</label>
        <link refid="sequence__last-inl_8h"/>
        <childnode refid="37784" relation="include">
        </childnode>
      </node>
      <node id="37676">
        <label>incubator-mxnet/src/operator/tensor/histogram.cc</label>
        <link refid="histogram_8cc"/>
      </node>
      <node id="37615">
        <label>incubator-mxnet/src/common/utils.cc</label>
        <link refid="utils_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37487">
        <label>incubator-mxnet/src/executor/graph_executor.cc</label>
        <link refid="graph__executor_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37939">
        <label>incubator-mxnet/scala-package/init-native/src/main/native/org_apache_mxnet_init_native_c_api.cc</label>
        <link refid="org__apache__mxnet__init__native__c__api_8cc_source"/>
      </node>
      <node id="37502">
        <label>incubator-mxnet/src/operator/numpy/np_matrix_op.cc</label>
        <link refid="np__matrix__op_8cc"/>
      </node>
      <node id="37882">
        <label>incubator-mxnet/src/io/image_iter_common.h</label>
        <link refid="image__iter__common_8h"/>
        <childnode refid="37876" relation="include">
        </childnode>
        <childnode refid="37838" relation="include">
        </childnode>
        <childnode refid="37880" relation="include">
        </childnode>
        <childnode refid="37883" relation="include">
        </childnode>
        <childnode refid="37840" relation="include">
        </childnode>
        <childnode refid="37841" relation="include">
        </childnode>
        <childnode refid="37857" relation="include">
        </childnode>
        <childnode refid="37878" relation="include">
        </childnode>
        <childnode refid="37881" relation="include">
        </childnode>
      </node>
      <node id="37424">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/MxNetCpp.h</label>
        <link refid="_mx_net_cpp_8h"/>
        <childnode refid="37425" relation="include">
        </childnode>
        <childnode refid="37426" relation="include">
        </childnode>
        <childnode refid="37427" relation="include">
        </childnode>
        <childnode refid="37438" relation="include">
        </childnode>
        <childnode refid="37428" relation="include">
        </childnode>
        <childnode refid="37429" relation="include">
        </childnode>
        <childnode refid="37418" relation="include">
        </childnode>
        <childnode refid="37439" relation="include">
        </childnode>
        <childnode refid="37430" relation="include">
        </childnode>
        <childnode refid="37431" relation="include">
        </childnode>
        <childnode refid="37432" relation="include">
        </childnode>
        <childnode refid="37433" relation="include">
        </childnode>
        <childnode refid="37434" relation="include">
        </childnode>
        <childnode refid="37435" relation="include">
        </childnode>
        <childnode refid="37436" relation="include">
        </childnode>
        <childnode refid="37419" relation="include">
        </childnode>
        <childnode refid="37420" relation="include">
        </childnode>
        <childnode refid="37440" relation="include">
        </childnode>
        <childnode refid="37441" relation="include">
        </childnode>
        <childnode refid="37437" relation="include">
        </childnode>
        <childnode refid="37442" relation="include">
        </childnode>
      </node>
      <node id="37758">
        <label>incubator-mxnet/src/operator/crop.cc</label>
        <link refid="crop_8cc_source"/>
      </node>
      <node id="37421">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/base.h</label>
        <link refid="cpp-package_2include_2mxnet-cpp_2base_8h_source"/>
        <childnode refid="37422" relation="include">
        </childnode>
        <childnode refid="37446" relation="include">
        </childnode>
        <childnode refid="37448" relation="include">
        </childnode>
        <childnode refid="37444" relation="include">
        </childnode>
        <childnode refid="37449" relation="include">
        </childnode>
        <childnode refid="37461" relation="include">
        </childnode>
        <childnode refid="37442" relation="include">
        </childnode>
        <childnode refid="37459" relation="include">
        </childnode>
        <childnode refid="37460" relation="include">
        </childnode>
        <childnode refid="37455" relation="include">
        </childnode>
        <childnode refid="37462" relation="include">
        </childnode>
        <childnode refid="37457" relation="include">
        </childnode>
      </node>
      <node id="37538">
        <label>incubator-mxnet/src/operator/random/pdf_op.cc</label>
        <link refid="pdf__op_8cc"/>
      </node>
      <node id="37627">
        <label>incubator-mxnet/src/operator/contrib/index_array.cc</label>
        <link refid="index__array_8cc_source"/>
      </node>
      <node id="37548">
        <label>incubator-mxnet/src/operator/tensor/square_sum.cc</label>
        <link refid="square__sum_8cc"/>
      </node>
      <node id="37855">
        <label>incubator-mxnet/src/io/image_aug_default.cc</label>
        <link refid="image__aug__default_8cc"/>
      </node>
      <node id="37764">
        <label>incubator-mxnet/src/operator/custom/ndarray_op-inl.h</label>
        <link refid="ndarray__op-inl_8h_source"/>
        <childnode refid="37765" relation="include">
        </childnode>
      </node>
      <node id="37923">
        <label>incubator-mxnet/include/mxnet/c_api_test.h</label>
        <link refid="c__api__test_8h"/>
        <childnode refid="37871" relation="include">
        </childnode>
      </node>
      <node id="37534">
        <label>incubator-mxnet/src/operator/quantization/quantized_flatten-inl.h</label>
        <link refid="quantized__flatten-inl_8h"/>
        <childnode refid="37535" relation="include">
        </childnode>
      </node>
      <node id="37435">
        <label>incubator-mxnet/cpp-package/example/mlp_gpu.cpp</label>
        <link refid="mlp__gpu_8cpp_source"/>
      </node>
      <node id="37777">
        <label>incubator-mxnet/src/operator/nn/activation-inl.h</label>
        <link refid="activation-inl_8h"/>
        <childnode refid="37582" relation="include">
        </childnode>
        <childnode refid="37778" relation="include">
        </childnode>
        <childnode refid="37668" relation="include">
        </childnode>
      </node>
      <node id="37822">
        <label>incubator-mxnet/src/executor/attach_op_resource_pass.cc</label>
        <link refid="attach__op__resource__pass_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37705">
        <label>incubator-mxnet/plugin/torch/torch_criterion.cc</label>
        <link refid="torch__criterion_8cc_source"/>
      </node>
      <node id="37574">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_op_logic.cc</label>
        <link refid="elemwise__binary__op__logic_8cc"/>
      </node>
      <node id="37823">
        <label>incubator-mxnet/src/executor/inplace_addto_detect_pass.cc</label>
        <link refid="inplace__addto__detect__pass_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37447">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/io.hpp</label>
        <link refid="io_8hpp_source"/>
        <childnode refid="37424" relation="include">
        </childnode>
      </node>
      <node id="37471">
        <label>incubator-mxnet/src/c_api/c_api_ndarray.cc</label>
        <link refid="c__api__ndarray_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37454">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/ndarray.hpp</label>
        <link refid="ndarray_8hpp"/>
        <childnode refid="37424" relation="include">
        </childnode>
      </node>
      <node id="37885">
        <label>incubator-mxnet/src/kvstore/gradient_compression.h</label>
        <link refid="gradient__compression_8h"/>
        <childnode refid="37886" relation="include">
        </childnode>
        <childnode refid="37602" relation="include">
        </childnode>
        <childnode refid="37606" relation="include">
        </childnode>
        <childnode refid="37604" relation="include">
        </childnode>
      </node>
      <node id="37831">
        <label>incubator-mxnet/src/operator/nnpack/nnpack_convolution-inl.h</label>
        <link refid="nnpack__convolution-inl_8h"/>
      </node>
      <node id="37825">
        <label>incubator-mxnet/src/nnvm/legacy_op_util.cc</label>
        <link refid="legacy__op__util_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37935">
        <label>incubator-mxnet/R-package/src/im2rec.cc</label>
        <link refid="_r-package_2src_2im2rec_8cc_source"/>
      </node>
      <node id="37921">
        <label>incubator-mxnet/src/common/cuda_utils.h</label>
        <link refid="cuda__utils_8h"/>
        <childnode refid="37703" relation="include">
        </childnode>
        <childnode refid="37718" relation="include">
        </childnode>
        <childnode refid="37913" relation="include">
        </childnode>
        <childnode refid="37846" relation="include">
        </childnode>
        <childnode refid="37864" relation="include">
        </childnode>
        <childnode refid="37778" relation="include">
        </childnode>
        <childnode refid="37687" relation="include">
        </childnode>
        <childnode refid="37689" relation="include">
        </childnode>
        <childnode refid="37690" relation="include">
        </childnode>
        <childnode refid="37691" relation="include">
        </childnode>
        <childnode refid="37860" relation="include">
        </childnode>
        <childnode refid="37900" relation="include">
        </childnode>
        <childnode refid="37861" relation="include">
        </childnode>
      </node>
      <node id="37876">
        <label>incubator-mxnet/src/io/iter_prefetcher.h</label>
        <link refid="iter__prefetcher_8h"/>
        <childnode refid="37698" relation="include">
        </childnode>
        <childnode refid="37839" relation="include">
        </childnode>
        <childnode refid="37877" relation="include">
        </childnode>
        <childnode refid="37840" relation="include">
        </childnode>
        <childnode refid="37841" relation="include">
        </childnode>
        <childnode refid="37878" relation="include">
        </childnode>
        <childnode refid="37858" relation="include">
        </childnode>
      </node>
      <node id="37554">
        <label>incubator-mxnet/src/operator/numpy/np_elemwise_broadcast_op.cc</label>
        <link refid="np__elemwise__broadcast__op_8cc_source"/>
      </node>
      <node id="37675">
        <label>incubator-mxnet/src/operator/tensor/histogram-inl.h</label>
        <link refid="histogram-inl_8h"/>
        <childnode refid="37676" relation="include">
        </childnode>
      </node>
      <node id="37929">
        <label>incubator-mxnet/R-package/src/ndarray.h</label>
        <link refid="_r-package_2src_2ndarray_8h_source"/>
        <childnode refid="37926" relation="include">
        </childnode>
        <childnode refid="37930" relation="include">
        </childnode>
        <childnode refid="37931" relation="include">
        </childnode>
        <childnode refid="37932" relation="include">
        </childnode>
        <childnode refid="37928" relation="include">
        </childnode>
        <childnode refid="37933" relation="include">
        </childnode>
      </node>
      <node id="37518">
        <label>incubator-mxnet/src/operator/nn/layer_norm.cc</label>
        <link refid="layer__norm_8cc"/>
      </node>
      <node id="37903">
        <label>incubator-mxnet/include/mxnet/tensor_blob.h</label>
        <link refid="tensor__blob_8h"/>
        <childnode refid="37904" relation="include">
        </childnode>
        <childnode refid="37875" relation="include">
        </childnode>
        <childnode refid="37482" relation="include">
        </childnode>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37484" relation="include">
        </childnode>
        <childnode refid="37485" relation="include">
        </childnode>
        <childnode refid="37486" relation="include">
        </childnode>
        <childnode refid="37836" relation="include">
        </childnode>
        <childnode refid="37598" relation="include">
        </childnode>
        <childnode refid="37906" relation="include">
        </childnode>
      </node>
      <node id="37836">
        <label>incubator-mxnet/tests/cpp/operator/runner/core_op_runner_test.cc</label>
        <link refid="core__op__runner__test_8cc_source"/>
      </node>
      <node id="37680">
        <label>incubator-mxnet/src/operator/tensor/ravel.cc</label>
        <link refid="ravel_8cc"/>
      </node>
      <node id="37571">
        <label>incubator-mxnet/src/operator/tensor/elemwise_unary_op_pow.cc</label>
        <link refid="elemwise__unary__op__pow_8cc"/>
      </node>
      <node id="37811">
        <label>incubator-mxnet/src/operator/sequence_mask-inl.h</label>
        <link refid="sequence__mask-inl_8h_source"/>
        <childnode refid="37812" relation="include">
        </childnode>
      </node>
      <node id="37444">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/monitor.h</label>
        <link refid="monitor_8h"/>
        <childnode refid="37445" relation="include">
        </childnode>
      </node>
      <node id="37912">
        <label>incubator-mxnet/src/base.cc</label>
        <link refid="src_2base_8cc_source"/>
      </node>
      <node id="37605">
        <label>incubator-mxnet/src/kvstore/kvstore.cc</label>
        <link refid="src_2kvstore_2kvstore_8cc_source"/>
      </node>
      <node id="37476">
        <label>incubator-mxnet/src/operator/contrib/dgl_graph.cc</label>
        <link refid="dgl__graph_8cc_source"/>
      </node>
      <node id="37586">
        <label>incubator-mxnet/src/operator/quantization/quantized_elemwise_add.cc</label>
        <link refid="quantized__elemwise__add_8cc"/>
      </node>
      <node id="37794">
        <label>incubator-mxnet/src/operator/quantization/quantized_pooling.cc</label>
        <link refid="quantized__pooling_8cc"/>
      </node>
      <node id="37716">
        <label>incubator-mxnet/src/operator/tensor/cast_storage-inl.h</label>
        <link refid="cast__storage-inl_8h"/>
        <childnode refid="37560" relation="include">
        </childnode>
        <childnode refid="37615" relation="include">
        </childnode>
        <childnode refid="37587" relation="include">
        </childnode>
        <childnode refid="37578" relation="include">
        </childnode>
      </node>
      <node id="37453">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/metric.h</label>
        <link refid="metric_8h_source"/>
        <childnode refid="37424" relation="include">
        </childnode>
      </node>
      <node id="37651">
        <label>incubator-mxnet/src/operator/tensor/elemwise_sum.h</label>
        <link refid="elemwise__sum_8h"/>
        <childnode refid="37565" relation="include">
        </childnode>
        <childnode refid="37613" relation="include">
        </childnode>
      </node>
      <node id="37641">
        <label>incubator-mxnet/src/operator/random/unique_sample_op.cc</label>
        <link refid="unique__sample__op_8cc_source"/>
      </node>
      <node id="37722">
        <label>incubator-mxnet/src/operator/batch_norm_v1-inl.h</label>
        <link refid="batch__norm__v1-inl_8h"/>
        <childnode refid="37723" relation="include">
        </childnode>
      </node>
      <node id="37731">
        <label>incubator-mxnet/src/operator/contrib/deformable_psroi_pooling.cc</label>
        <link refid="deformable__psroi__pooling_8cc"/>
      </node>
      <node id="37590">
        <label>incubator-mxnet/src/operator/tensor/init_op.h</label>
        <link refid="init__op_8h"/>
        <childnode refid="37591" relation="include">
        </childnode>
        <childnode refid="37561" relation="include">
        </childnode>
        <childnode refid="37492" relation="include">
        </childnode>
        <childnode refid="37614" relation="include">
        </childnode>
        <childnode refid="37563" relation="include">
        </childnode>
        <childnode refid="37494" relation="include">
        </childnode>
        <childnode refid="37617" relation="include">
        </childnode>
        <childnode refid="37620" relation="include">
        </childnode>
        <childnode refid="37622" relation="include">
        </childnode>
        <childnode refid="37624" relation="include">
        </childnode>
        <childnode refid="37625" relation="include">
        </childnode>
        <childnode refid="37626" relation="include">
        </childnode>
        <childnode refid="37628" relation="include">
        </childnode>
        <childnode refid="37630" relation="include">
        </childnode>
        <childnode refid="37631" relation="include">
        </childnode>
        <childnode refid="37633" relation="include">
        </childnode>
        <childnode refid="37635" relation="include">
        </childnode>
        <childnode refid="37637" relation="include">
        </childnode>
        <childnode refid="37639" relation="include">
        </childnode>
        <childnode refid="37584" relation="include">
        </childnode>
        <childnode refid="37556" relation="include">
        </childnode>
        <childnode refid="37638" relation="include">
        </childnode>
        <childnode refid="37641" relation="include">
        </childnode>
        <childnode refid="37642" relation="include">
        </childnode>
        <childnode refid="37644" relation="include">
        </childnode>
        <childnode refid="37588" relation="include">
        </childnode>
        <childnode refid="37547" relation="include">
        </childnode>
      </node>
      <node id="37603">
        <label>incubator-mxnet/src/kvstore/kvstore_local.h</label>
        <link refid="kvstore__local_8h"/>
        <childnode refid="37604" relation="include">
        </childnode>
        <childnode refid="37605" relation="include">
        </childnode>
        <childnode refid="37564" relation="include">
        </childnode>
      </node>
      <node id="37772">
        <label>incubator-mxnet/src/operator/instance_norm.cc</label>
        <link refid="instance__norm_8cc"/>
      </node>
      <node id="37696">
        <label>incubator-mxnet/plugin/caffe/caffe_common.h</label>
        <link refid="caffe__common_8h"/>
        <childnode refid="37697" relation="include">
        </childnode>
        <childnode refid="37698" relation="include">
        </childnode>
        <childnode refid="37699" relation="include">
        </childnode>
        <childnode refid="37701" relation="include">
        </childnode>
      </node>
      <node id="37496">
        <label>incubator-mxnet/src/operator/image/crop.cc</label>
        <link refid="image_2crop_8cc_source"/>
      </node>
      <node id="37708">
        <label>incubator-mxnet/plugin/warpctc/warpctc-inl.h</label>
        <link refid="warpctc-inl_8h"/>
        <childnode refid="37709" relation="include">
        </childnode>
      </node>
      <node id="37517">
        <label>incubator-mxnet/src/operator/nn/layer_norm-inl.h</label>
        <link refid="layer__norm-inl_8h"/>
        <childnode refid="37518" relation="include">
        </childnode>
      </node>
      <node id="37849">
        <label>incubator-mxnet/src/profiler/aggregate_stats.h</label>
        <link refid="aggregate__stats_8h_source"/>
        <childnode refid="37842" relation="include">
        </childnode>
      </node>
      <node id="37610">
        <label>incubator-mxnet/src/operator/contrib/bilinear_resize-inl.h</label>
        <link refid="bilinear__resize-inl_8h"/>
        <childnode refid="37611" relation="include">
        </childnode>
      </node>
      <node id="37671">
        <label>incubator-mxnet/src/operator/random/sample_multinomial_op.h</label>
        <link refid="sample__multinomial__op_8h"/>
        <childnode refid="37672" relation="include">
        </childnode>
      </node>
      <node id="37893">
        <label>incubator-mxnet/include/mxnet/resource.h</label>
        <link refid="resource_8h"/>
        <childnode refid="37490" relation="include">
        </childnode>
        <childnode refid="37489" relation="include">
        </childnode>
        <childnode refid="37591" relation="include">
        </childnode>
        <childnode refid="37822" relation="include">
        </childnode>
        <childnode refid="37891" relation="include">
        </childnode>
        <childnode refid="37494" relation="include">
        </childnode>
        <childnode refid="37860" relation="include">
        </childnode>
      </node>
      <node id="37748">
        <label>incubator-mxnet/src/operator/contrib/proposal.cc</label>
        <link refid="proposal_8cc"/>
      </node>
      <node id="37744">
        <label>incubator-mxnet/src/operator/contrib/multibox_prior.cc</label>
        <link refid="multibox__prior_8cc"/>
      </node>
      <node id="37793">
        <label>incubator-mxnet/src/operator/nnpack/nnpack_pooling-inl.h</label>
        <link refid="nnpack__pooling-inl_8h"/>
      </node>
      <node id="37878">
        <label>incubator-mxnet/src/io/iter_sparse_prefetcher.h</label>
        <link refid="iter__sparse__prefetcher_8h"/>
        <childnode refid="37879" relation="include">
        </childnode>
      </node>
      <node id="37883">
        <label>incubator-mxnet/src/io/io.cc</label>
        <link refid="src_2io_2io_8cc_source"/>
      </node>
      <node id="37868">
        <label>incubator-mxnet/src/c_api/c_api_common.h</label>
        <link refid="c__api__common_8h_source"/>
        <childnode refid="37869" relation="include">
        </childnode>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37870" relation="include">
        </childnode>
        <childnode refid="37468" relation="include">
        </childnode>
        <childnode refid="37711" relation="include">
        </childnode>
        <childnode refid="37471" relation="include">
        </childnode>
        <childnode refid="37470" relation="include">
        </childnode>
        <childnode refid="37850" relation="include">
        </childnode>
        <childnode refid="37717" relation="include">
        </childnode>
        <childnode refid="37871" relation="include">
        </childnode>
        <childnode refid="37488" relation="include">
        </childnode>
        <childnode refid="37824" relation="include">
        </childnode>
      </node>
      <node id="37678">
        <label>incubator-mxnet/src/operator/tensor/la_op.cc</label>
        <link refid="la__op_8cc"/>
      </node>
      <node id="37616">
        <label>incubator-mxnet/src/operator/tensor/sparse_retain.cc</label>
        <link refid="sparse__retain_8cc"/>
      </node>
      <node id="37688">
        <label>incubator-mxnet/src/operator/nn/cudnn/cudnn_algoreg.cc</label>
        <link refid="cudnn__algoreg_8cc"/>
      </node>
      <node id="37697">
        <label>incubator-mxnet/plugin/caffe/caffe_common.cc</label>
        <link refid="caffe__common_8cc_source"/>
      </node>
      <node id="37730">
        <label>incubator-mxnet/src/operator/contrib/deformable_psroi_pooling-inl.h</label>
        <link refid="deformable__psroi__pooling-inl_8h"/>
        <childnode refid="37731" relation="include">
        </childnode>
      </node>
      <node id="37875">
        <label>incubator-mxnet/src/io/inst_vector.h</label>
        <link refid="inst__vector_8h"/>
        <childnode refid="37698" relation="include">
        </childnode>
        <childnode refid="37876" relation="include">
        </childnode>
        <childnode refid="37839" relation="include">
        </childnode>
        <childnode refid="37880" relation="include">
        </childnode>
        <childnode refid="37840" relation="include">
        </childnode>
        <childnode refid="37841" relation="include">
        </childnode>
        <childnode refid="37857" relation="include">
        </childnode>
        <childnode refid="37878" relation="include">
        </childnode>
        <childnode refid="37881" relation="include">
        </childnode>
      </node>
      <node id="37821">
        <label>incubator-mxnet/src/executor/attach_op_execs_pass.cc</label>
        <link refid="attach__op__execs__pass_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37895">
        <label>incubator-mxnet/src/engine/engine_impl.h</label>
        <link refid="engine__impl_8h"/>
        <childnode refid="37894" relation="include">
        </childnode>
        <childnode refid="37844" relation="include">
        </childnode>
        <childnode refid="37845" relation="include">
        </childnode>
      </node>
      <node id="37909">
        <label>incubator-mxnet/src/operator/mshadow_op.h</label>
        <link refid="mshadow__op_8h"/>
        <childnode refid="37705" relation="include">
        </childnode>
        <childnode refid="37707" relation="include">
        </childnode>
        <childnode refid="37709" relation="include">
        </childnode>
        <childnode refid="37492" relation="include">
        </childnode>
        <childnode refid="37505" relation="include">
        </childnode>
        <childnode refid="37549" relation="include">
        </childnode>
        <childnode refid="37561" relation="include">
        </childnode>
        <childnode refid="37560" relation="include">
        </childnode>
        <childnode refid="37591" relation="include">
        </childnode>
        <childnode refid="37590" relation="include">
        </childnode>
        <childnode refid="37681" relation="include">
        </childnode>
        <childnode refid="37614" relation="include">
        </childnode>
        <childnode refid="37651" relation="include">
        </childnode>
        <childnode refid="37652" relation="include">
        </childnode>
        <childnode refid="37722" relation="include">
        </childnode>
        <childnode refid="37655" relation="include">
        </childnode>
        <childnode refid="37617" relation="include">
        </childnode>
        <childnode refid="37608" relation="include">
        </childnode>
        <childnode refid="37620" relation="include">
        </childnode>
        <childnode refid="37610" relation="include">
        </childnode>
        <childnode refid="37622" relation="include">
        </childnode>
        <childnode refid="37727" relation="include">
        </childnode>
        <childnode refid="37682" relation="include">
        </childnode>
        <childnode refid="37730" relation="include">
        </childnode>
        <childnode refid="37624" relation="include">
        </childnode>
        <childnode refid="37732" relation="include">
        </childnode>
        <childnode refid="37580" relation="include">
        </childnode>
        <childnode refid="37734" relation="include">
        </childnode>
        <childnode refid="37735" relation="include">
        </childnode>
        <childnode refid="37626" relation="include">
        </childnode>
        <childnode refid="37628" relation="include">
        </childnode>
        <childnode refid="37612" relation="include">
        </childnode>
        <childnode refid="37739" relation="include">
        </childnode>
        <childnode refid="37745" relation="include">
        </childnode>
        <childnode refid="37746" relation="include">
        </childnode>
        <childnode refid="37630" relation="include">
        </childnode>
        <childnode refid="37631" relation="include">
        </childnode>
        <childnode refid="37747" relation="include">
        </childnode>
        <childnode refid="37749" relation="include">
        </childnode>
        <childnode refid="37633" relation="include">
        </childnode>
        <childnode refid="37635" relation="include">
        </childnode>
        <childnode refid="37751" relation="include">
        </childnode>
        <childnode refid="37685" relation="include">
        </childnode>
        <childnode refid="37755" relation="include">
        </childnode>
        <childnode refid="37756" relation="include">
        </childnode>
        <childnode refid="37766" relation="include">
        </childnode>
        <childnode refid="37768" relation="include">
        </childnode>
        <childnode refid="37771" relation="include">
        </childnode>
        <childnode refid="37773" relation="include">
        </childnode>
        <childnode refid="37550" relation="include">
        </childnode>
        <childnode refid="37637" relation="include">
        </childnode>
        <childnode refid="37660" relation="include">
        </childnode>
        <childnode refid="37775" relation="include">
        </childnode>
        <childnode refid="37777" relation="include">
        </childnode>
        <childnode refid="37582" relation="include">
        </childnode>
        <childnode refid="37779" relation="include">
        </childnode>
        <childnode refid="37664" relation="include">
        </childnode>
        <childnode refid="37910" relation="include">
        </childnode>
        <childnode refid="37830" relation="include">
        </childnode>
        <childnode refid="37552" relation="include">
        </childnode>
        <childnode refid="37514" relation="include">
        </childnode>
        <childnode refid="37517" relation="include">
        </childnode>
        <childnode refid="37797" relation="include">
        </childnode>
        <childnode refid="37583" relation="include">
        </childnode>
        <childnode refid="37639" relation="include">
        </childnode>
        <childnode refid="37556" relation="include">
        </childnode>
        <childnode refid="37802" relation="include">
        </childnode>
        <childnode refid="37526" relation="include">
        </childnode>
        <childnode refid="37528" relation="include">
        </childnode>
        <childnode refid="37531" relation="include">
        </childnode>
        <childnode refid="37534" relation="include">
        </childnode>
        <childnode refid="37536" relation="include">
        </childnode>
        <childnode refid="37669" relation="include">
        </childnode>
        <childnode refid="37537" relation="include">
        </childnode>
        <childnode refid="37671" relation="include">
        </childnode>
        <childnode refid="37695" relation="include">
        </childnode>
        <childnode refid="37808" relation="include">
        </childnode>
        <childnode refid="37809" relation="include">
        </childnode>
        <childnode refid="37783" relation="include">
        </childnode>
        <childnode refid="37811" relation="include">
        </childnode>
        <childnode refid="37785" relation="include">
        </childnode>
        <childnode refid="37815" relation="include">
        </childnode>
        <childnode refid="37816" relation="include">
        </childnode>
        <childnode refid="37642" relation="include">
        </childnode>
        <childnode refid="37675" relation="include">
        </childnode>
        <childnode refid="37644" relation="include">
        </childnode>
        <childnode refid="37677" relation="include">
        </childnode>
        <childnode refid="37646" relation="include">
        </childnode>
        <childnode refid="37679" relation="include">
        </childnode>
      </node>
      <node id="37486">
        <label>incubator-mxnet/tests/cpp/operator/fully_conn_perf.cc</label>
        <link refid="fully__conn__perf_8cc"/>
      </node>
      <node id="37449">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/ndarray.h</label>
        <link refid="cpp-package_2include_2mxnet-cpp_2ndarray_8h_source"/>
        <childnode refid="37450" relation="include">
        </childnode>
        <childnode refid="37446" relation="include">
        </childnode>
        <childnode refid="37451" relation="include">
        </childnode>
        <childnode refid="37453" relation="include">
        </childnode>
        <childnode refid="37448" relation="include">
        </childnode>
        <childnode refid="37444" relation="include">
        </childnode>
        <childnode refid="37454" relation="include">
        </childnode>
        <childnode refid="37455" relation="include">
        </childnode>
        <childnode refid="37457" relation="include">
        </childnode>
      </node>
      <node id="37506">
        <label>incubator-mxnet/src/operator/nn/concat-inl.h</label>
        <link refid="concat-inl_8h"/>
        <childnode refid="37507" relation="include">
        </childnode>
        <childnode refid="37501" relation="include">
        </childnode>
        <childnode refid="37508" relation="include">
        </childnode>
      </node>
      <node id="37824">
        <label>incubator-mxnet/src/nnvm/legacy_json_util.cc</label>
        <link refid="legacy__json__util_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37741">
        <label>incubator-mxnet/src/operator/contrib/multibox_detection-inl.h</label>
        <link refid="multibox__detection-inl_8h"/>
        <childnode refid="37742" relation="include">
        </childnode>
      </node>
      <node id="37582">
        <label>incubator-mxnet/src/operator/nn/activation.cc</label>
        <link refid="activation_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37434">
        <label>incubator-mxnet/cpp-package/example/mlp_csv.cpp</label>
        <link refid="mlp__csv_8cpp_source"/>
      </node>
      <node id="37932">
        <label>incubator-mxnet/R-package/src/kvstore.cc</label>
        <link refid="_r-package_2src_2kvstore_8cc_source"/>
      </node>
      <node id="37544">
        <label>incubator-mxnet/src/operator/tensor/broadcast_reduce_sum_value.cc</label>
        <link refid="broadcast__reduce__sum__value_8cc"/>
      </node>
      <node id="37850">
        <label>incubator-mxnet/src/c_api/c_api_profile.cc</label>
        <link refid="c__api__profile_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37577">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_scalar_op_logic.cc</label>
        <link refid="elemwise__binary__scalar__op__logic_8cc"/>
      </node>
      <node id="37551">
        <label>incubator-mxnet/src/operator/leaky_relu.cc</label>
        <link refid="leaky__relu_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37842">
        <label>incubator-mxnet/src/profiler/profiler.h</label>
        <link refid="profiler_8h"/>
        <childnode refid="37843" relation="include">
        </childnode>
        <childnode refid="37849" relation="include">
        </childnode>
        <childnode refid="37850" relation="include">
        </childnode>
        <childnode refid="37844" relation="include">
        </childnode>
        <childnode refid="37845" relation="include">
        </childnode>
        <childnode refid="37487" relation="include">
        </childnode>
        <childnode refid="37473" relation="include">
        </childnode>
        <childnode refid="37563" relation="include">
        </childnode>
        <childnode refid="37851" relation="include">
        </childnode>
        <childnode refid="37852" relation="include">
        </childnode>
        <childnode refid="37853" relation="include">
        </childnode>
      </node>
      <node id="37816">
        <label>incubator-mxnet/src/operator/svm_output.cc</label>
        <link refid="svm__output_8cc"/>
      </node>
      <node id="37706">
        <label>incubator-mxnet/plugin/torch/torch_module-inl.h</label>
        <link refid="torch__module-inl_8h"/>
        <childnode refid="37707" relation="include">
        </childnode>
      </node>
      <node id="37914">
        <label>incubator-mxnet/src/engine/thread_pool.h</label>
        <link refid="thread__pool_8h_source"/>
        <childnode refid="37847" relation="include">
        </childnode>
        <childnode refid="37848" relation="include">
        </childnode>
      </node>
      <node id="37896">
        <label>incubator-mxnet/include/mxnet/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="37466" relation="include">
        </childnode>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37592" relation="include">
        </childnode>
        <childnode refid="37845" relation="include">
        </childnode>
        <childnode refid="37689" relation="include">
        </childnode>
        <childnode refid="37690" relation="include">
        </childnode>
        <childnode refid="37806" relation="include">
        </childnode>
        <childnode refid="37853" relation="include">
        </childnode>
        <childnode refid="37860" relation="include">
        </childnode>
        <childnode refid="37897" relation="include">
        </childnode>
        <childnode refid="37900" relation="include">
        </childnode>
        <childnode refid="37861" relation="include">
        </childnode>
        <childnode refid="37854" relation="include">
        </childnode>
        <childnode refid="37601" relation="include">
        </childnode>
      </node>
      <node id="37840">
        <label>incubator-mxnet/src/io/iter_image_det_recordio.cc</label>
        <link refid="iter__image__det__recordio_8cc_source"/>
      </node>
      <node id="37499">
        <label>incubator-mxnet/src/operator/numpy/np_dot.cc</label>
        <link refid="np__dot_8cc"/>
      </node>
      <node id="37427">
        <label>incubator-mxnet/cpp-package/example/charRNN.cpp</label>
        <link refid="char_r_n_n_8cpp_source"/>
      </node>
      <node id="37473">
        <label>incubator-mxnet/src/imperative/cached_op.cc</label>
        <link refid="cached__op_8cc_source"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37747">
        <label>incubator-mxnet/src/operator/contrib/proposal-inl.h</label>
        <link refid="proposal-inl_8h"/>
        <childnode refid="37748" relation="include">
        </childnode>
      </node>
      <node id="37738">
        <label>incubator-mxnet/tests/cpp/operator/krprod_test.cc</label>
        <link refid="krprod__test_8cc"/>
      </node>
      <node id="37587">
        <label>incubator-mxnet/src/operator/tensor/cast_storage.cc</label>
        <link refid="cast__storage_8cc"/>
      </node>
      <node id="37737">
        <label>incubator-mxnet/src/operator/contrib/krprod.h</label>
        <link refid="krprod_8h"/>
        <childnode refid="37612" relation="include">
        </childnode>
        <childnode refid="37738" relation="include">
        </childnode>
      </node>
      <node id="37595">
        <label>incubator-mxnet/tests/cpp/engine/threaded_engine_test.cc</label>
        <link refid="threaded__engine__test_8cc"/>
      </node>
      <node id="37797">
        <label>incubator-mxnet/src/operator/nn/lrn-inl.h</label>
        <link refid="lrn-inl_8h"/>
        <childnode refid="37798" relation="include">
        </childnode>
        <childnode refid="37799" relation="include">
        </childnode>
      </node>
      <node id="37751">
        <label>incubator-mxnet/src/operator/contrib/sync_batch_norm-inl.h</label>
        <link refid="sync__batch__norm-inl_8h"/>
        <childnode refid="37752" relation="include">
        </childnode>
      </node>
      <node id="37695">
        <label>incubator-mxnet/src/operator/regression_output-inl.h</label>
        <link refid="regression__output-inl_8h_source"/>
        <childnode refid="37674" relation="include">
        </childnode>
      </node>
      <node id="37481">
        <label>incubator-mxnet/tests/cpp/include/test_tune.h</label>
        <link refid="test__tune_8h"/>
      </node>
      <node id="37830">
        <label>incubator-mxnet/src/operator/nn/pool.h</label>
        <link refid="pool_8h"/>
        <childnode refid="37791" relation="include">
        </childnode>
      </node>
      <node id="37535">
        <label>incubator-mxnet/src/operator/quantization/quantized_flatten.cc</label>
        <link refid="quantized__flatten_8cc"/>
      </node>
      <node id="37663">
        <label>incubator-mxnet/src/operator/nn/convolution.cc</label>
        <link refid="convolution_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37622">
        <label>incubator-mxnet/src/operator/contrib/boolean_mask-inl.h</label>
        <link refid="boolean__mask-inl_8h"/>
        <childnode refid="37623" relation="include">
        </childnode>
      </node>
      <node id="37723">
        <label>incubator-mxnet/src/operator/batch_norm_v1.cc</label>
        <link refid="batch__norm__v1_8cc"/>
      </node>
      <node id="37503">
        <label>incubator-mxnet/src/operator/tensor/matrix_op.cc</label>
        <link refid="matrix__op_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37799">
        <label>incubator-mxnet/src/operator/nn/lrn.cc</label>
        <link refid="lrn_8cc"/>
      </node>
      <node id="37419">
        <label>incubator-mxnet/cpp-package/example/test_kvstore.cpp</label>
        <link refid="test__kvstore_8cpp_source"/>
      </node>
      <node id="37668">
        <label>incubator-mxnet/src/operator/quantization/quantized_activation.cc</label>
        <link refid="quantized__activation_8cc"/>
      </node>
      <node id="37791">
        <label>incubator-mxnet/src/operator/nn/pooling-inl.h</label>
        <link refid="pooling-inl_8h"/>
        <childnode refid="37792" relation="include">
        </childnode>
        <childnode refid="37667" relation="include">
        </childnode>
        <childnode refid="37793" relation="include">
        </childnode>
        <childnode refid="37794" relation="include">
        </childnode>
      </node>
      <node id="37862">
        <label>incubator-mxnet/src/operator/mxnet_op.h</label>
        <link refid="mxnet__op_8h"/>
        <childnode refid="37837" relation="include">
        </childnode>
        <childnode refid="37504" relation="include">
        </childnode>
        <childnode refid="37492" relation="include">
        </childnode>
        <childnode refid="37561" relation="include">
        </childnode>
        <childnode refid="37716" relation="include">
        </childnode>
        <childnode refid="37560" relation="include">
        </childnode>
        <childnode refid="37590" relation="include">
        </childnode>
        <childnode refid="37505" relation="include">
        </childnode>
        <childnode refid="37614" relation="include">
        </childnode>
        <childnode refid="37720" relation="include">
        </childnode>
        <childnode refid="37863" relation="include">
        </childnode>
        <childnode refid="37562" relation="include">
        </childnode>
        <childnode refid="37565" relation="include">
        </childnode>
        <childnode refid="37651" relation="include">
        </childnode>
        <childnode refid="37652" relation="include">
        </childnode>
        <childnode refid="37655" relation="include">
        </childnode>
        <childnode refid="37617" relation="include">
        </childnode>
        <childnode refid="37608" relation="include">
        </childnode>
        <childnode refid="37620" relation="include">
        </childnode>
        <childnode refid="37610" relation="include">
        </childnode>
        <childnode refid="37622" relation="include">
        </childnode>
        <childnode refid="37727" relation="include">
        </childnode>
        <childnode refid="37682" relation="include">
        </childnode>
        <childnode refid="37827" relation="include">
        </childnode>
        <childnode refid="37828" relation="include">
        </childnode>
        <childnode refid="37864" relation="include">
        </childnode>
        <childnode refid="37624" relation="include">
        </childnode>
        <childnode refid="37734" relation="include">
        </childnode>
        <childnode refid="37628" relation="include">
        </childnode>
        <childnode refid="37612" relation="include">
        </childnode>
        <childnode refid="37630" relation="include">
        </childnode>
        <childnode refid="37631" relation="include">
        </childnode>
        <childnode refid="37633" relation="include">
        </childnode>
        <childnode refid="37685" relation="include">
        </childnode>
        <childnode refid="37495" relation="include">
        </childnode>
        <childnode refid="37770" relation="include">
        </childnode>
        <childnode refid="37637" relation="include">
        </childnode>
        <childnode refid="37777" relation="include">
        </childnode>
        <childnode refid="37779" relation="include">
        </childnode>
        <childnode refid="37830" relation="include">
        </childnode>
        <childnode refid="37552" relation="include">
        </childnode>
        <childnode refid="37514" relation="include">
        </childnode>
        <childnode refid="37517" relation="include">
        </childnode>
        <childnode refid="37519" relation="include">
        </childnode>
        <childnode refid="37639" relation="include">
        </childnode>
        <childnode refid="37867" relation="include">
        </childnode>
        <childnode refid="37556" relation="include">
        </childnode>
        <childnode refid="37526" relation="include">
        </childnode>
        <childnode refid="37525" relation="include">
        </childnode>
        <childnode refid="37528" relation="include">
        </childnode>
        <childnode refid="37531" relation="include">
        </childnode>
        <childnode refid="37534" relation="include">
        </childnode>
        <childnode refid="37536" relation="include">
        </childnode>
        <childnode refid="37669" relation="include">
        </childnode>
        <childnode refid="37537" relation="include">
        </childnode>
        <childnode refid="37671" relation="include">
        </childnode>
        <childnode refid="37694" relation="include">
        </childnode>
        <childnode refid="37695" relation="include">
        </childnode>
        <childnode refid="37785" relation="include">
        </childnode>
        <childnode refid="37642" relation="include">
        </childnode>
        <childnode refid="37545" relation="include">
        </childnode>
        <childnode refid="37675" relation="include">
        </childnode>
        <childnode refid="37644" relation="include">
        </childnode>
        <childnode refid="37677" relation="include">
        </childnode>
        <childnode refid="37679" relation="include">
        </childnode>
        <childnode refid="37547" relation="include">
        </childnode>
      </node>
      <node id="37498">
        <label>incubator-mxnet/src/operator/numpy/np_dot-inl.h</label>
        <link refid="np__dot-inl_8h"/>
        <childnode refid="37499" relation="include">
        </childnode>
      </node>
      <node id="37461">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/op_map.h</label>
        <link refid="op__map_8h"/>
        <childnode refid="37459" relation="include">
        </childnode>
        <childnode refid="37460" relation="include">
        </childnode>
        <childnode refid="37455" relation="include">
        </childnode>
        <childnode refid="37456" relation="include">
        </childnode>
        <childnode refid="37457" relation="include">
        </childnode>
      </node>
      <node id="37446">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/io.h</label>
        <link refid="cpp-package_2include_2mxnet-cpp_2io_8h_source"/>
        <childnode refid="37447" relation="include">
        </childnode>
      </node>
      <node id="37488">
        <label>incubator-mxnet/src/c_api/c_predict_api.cc</label>
        <link refid="c__predict__api_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37685">
        <label>incubator-mxnet/src/operator/contrib/transformer-inl.h</label>
        <link refid="transformer-inl_8h"/>
        <childnode refid="37581" relation="include">
        </childnode>
      </node>
      <node id="37826">
        <label>incubator-mxnet/src/operator/tensor/util/tensor_util-inl.h</label>
        <link refid="tensor__util-inl_8h"/>
        <childnode refid="37617" relation="include">
        </childnode>
        <childnode refid="37620" relation="include">
        </childnode>
        <childnode refid="37631" relation="include">
        </childnode>
        <childnode refid="37639" relation="include">
        </childnode>
        <childnode refid="37675" relation="include">
        </childnode>
        <childnode refid="37644" relation="include">
        </childnode>
      </node>
      <node id="37674">
        <label>incubator-mxnet/src/operator/regression_output.cc</label>
        <link refid="regression__output_8cc_source"/>
      </node>
      <node id="37784">
        <label>incubator-mxnet/src/operator/sequence_last.cc</label>
        <link refid="sequence__last_8cc"/>
      </node>
      <node id="37768">
        <label>incubator-mxnet/src/operator/identity_attach_KL_sparse_reg-inl.h</label>
        <link refid="identity__attach___k_l__sparse__reg-inl_8h_source"/>
        <childnode refid="37769" relation="include">
        </childnode>
      </node>
      <node id="37838">
        <label>incubator-mxnet/src/io/iter_normalize.h</label>
        <link refid="iter__normalize_8h"/>
        <childnode refid="37839" relation="include">
        </childnode>
        <childnode refid="37840" relation="include">
        </childnode>
        <childnode refid="37841" relation="include">
        </childnode>
      </node>
      <node id="37690">
        <label>incubator-mxnet/src/operator/nn/cudnn/cudnn_deconvolution-inl.h</label>
        <link refid="cudnn__deconvolution-inl_8h"/>
      </node>
      <node id="37700">
        <label>incubator-mxnet/plugin/caffe/caffe_loss.cc</label>
        <link refid="caffe__loss_8cc"/>
      </node>
      <node id="37601">
        <label>incubator-mxnet/tests/cpp/storage/storage_test.cc</label>
        <link refid="storage__test_8cc"/>
      </node>
      <node id="37448">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/model.h</label>
        <link refid="model_8h"/>
      </node>
      <node id="37937">
        <label>incubator-mxnet/R-package/src/symbol.cc</label>
        <link refid="symbol_8cc"/>
      </node>
      <node id="37510">
        <label>incubator-mxnet/src/operator/nn/fully_connected.cc</label>
        <link refid="fully__connected_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37781">
        <label>incubator-mxnet/src/operator/quantization/quantized_batch_norm.cc</label>
        <link refid="quantized__batch__norm_8cc"/>
      </node>
      <node id="37624">
        <label>incubator-mxnet/src/operator/contrib/dgl_graph-inl.h</label>
        <link refid="dgl__graph-inl_8h_source"/>
        <childnode refid="37476" relation="include">
        </childnode>
      </node>
      <node id="37804">
        <label>incubator-mxnet/src/operator/pooling_v1-inl.h</label>
        <link refid="pooling__v1-inl_8h"/>
        <childnode refid="37805" relation="include">
        </childnode>
      </node>
      <node id="37761">
        <label>incubator-mxnet/src/operator/spatial_transformer.cc</label>
        <link refid="spatial__transformer_8cc"/>
      </node>
      <node id="37482">
        <label>incubator-mxnet/tests/cpp/operator/activation_perf.cc</label>
        <link refid="activation__perf_8cc"/>
      </node>
      <node id="37726">
        <label>incubator-mxnet/src/operator/cudnn_bilinear_sampler-inl.h</label>
        <link refid="cudnn__bilinear__sampler-inl_8h"/>
      </node>
      <node id="37901">
        <label>incubator-mxnet/include/mxnet/random_generator.h</label>
        <link refid="random__generator_8h"/>
        <childnode refid="37893" relation="include">
        </childnode>
        <childnode refid="37550" relation="include">
        </childnode>
        <childnode refid="37860" relation="include">
        </childnode>
      </node>
      <node id="37866">
        <label>incubator-mxnet/src/operator/tensor/la_op-inl.h</label>
        <link refid="la__op-inl_8h"/>
        <childnode refid="37678" relation="include">
        </childnode>
      </node>
      <node id="37536">
        <label>incubator-mxnet/src/operator/quantization/requantize-inl.h</label>
        <link refid="requantize-inl_8h"/>
        <childnode refid="37530" relation="include">
        </childnode>
      </node>
      <node id="37809">
        <label>incubator-mxnet/src/operator/roi_pooling-inl.h</label>
        <link refid="roi__pooling-inl_8h"/>
        <childnode refid="37810" relation="include">
        </childnode>
      </node>
      <node id="37626">
        <label>incubator-mxnet/src/operator/contrib/index_array-inl.h</label>
        <link refid="index__array-inl_8h_source"/>
        <childnode refid="37627" relation="include">
        </childnode>
      </node>
      <node id="37759">
        <label>incubator-mxnet/src/operator/spatial_transformer-inl.h</label>
        <link refid="spatial__transformer-inl_8h"/>
        <childnode refid="37760" relation="include">
        </childnode>
        <childnode refid="37761" relation="include">
        </childnode>
      </node>
      <node id="37658">
        <label>incubator-mxnet/src/operator/image/image_random.cc</label>
        <link refid="image__random_8cc"/>
      </node>
      <node id="37560">
        <label>incubator-mxnet/src/operator/tensor/elemwise_unary_op.h</label>
        <link refid="elemwise__unary__op_8h_source"/>
        <childnode refid="37561" relation="include">
        </childnode>
        <childnode refid="37579" relation="include">
        </childnode>
        <childnode refid="37580" relation="include">
        </childnode>
        <childnode refid="37581" relation="include">
        </childnode>
        <childnode refid="37582" relation="include">
        </childnode>
        <childnode refid="37522" relation="include">
        </childnode>
        <childnode refid="37583" relation="include">
        </childnode>
        <childnode refid="37584" relation="include">
        </childnode>
        <childnode refid="37585" relation="include">
        </childnode>
        <childnode refid="37586" relation="include">
        </childnode>
        <childnode refid="37587" relation="include">
        </childnode>
        <childnode refid="37557" relation="include">
        </childnode>
        <childnode refid="37558" relation="include">
        </childnode>
        <childnode refid="37559" relation="include">
        </childnode>
        <childnode refid="37566" relation="include">
        </childnode>
        <childnode refid="37567" relation="include">
        </childnode>
        <childnode refid="37574" relation="include">
        </childnode>
        <childnode refid="37576" relation="include">
        </childnode>
        <childnode refid="37577" relation="include">
        </childnode>
        <childnode refid="37569" relation="include">
        </childnode>
        <childnode refid="37570" relation="include">
        </childnode>
        <childnode refid="37571" relation="include">
        </childnode>
        <childnode refid="37572" relation="include">
        </childnode>
        <childnode refid="37588" relation="include">
        </childnode>
        <childnode refid="37503" relation="include">
        </childnode>
        <childnode refid="37589" relation="include">
        </childnode>
      </node>
      <node id="37470">
        <label>incubator-mxnet/src/imperative/imperative_utils.h</label>
        <link refid="imperative__utils_8h_source"/>
        <childnode refid="37471" relation="include">
        </childnode>
        <childnode refid="37473" relation="include">
        </childnode>
        <childnode refid="37474" relation="include">
        </childnode>
        <childnode refid="37475" relation="include">
        </childnode>
        <childnode refid="37476" relation="include">
        </childnode>
        <childnode refid="37477" relation="include">
        </childnode>
        <childnode refid="37478" relation="include">
        </childnode>
        <childnode refid="37479" relation="include">
        </childnode>
        <childnode refid="37480" relation="include">
        </childnode>
      </node>
      <node id="37775">
        <label>incubator-mxnet/src/operator/make_loss-inl.h</label>
        <link refid="make__loss-inl_8h"/>
        <childnode refid="37776" relation="include">
        </childnode>
      </node>
      <node id="37863">
        <label>incubator-mxnet/src/kvstore/gradient_compression-inl.h</label>
        <link refid="gradient__compression-inl_8h"/>
        <childnode refid="37604" relation="include">
        </childnode>
      </node>
      <node id="37721">
        <label>incubator-mxnet/src/nnvm/plan_memory.cc</label>
        <link refid="plan__memory_8cc"/>
      </node>
      <node id="37578">
        <label>incubator-mxnet/src/operator/tensor/elemwise_scatter_op.h</label>
        <link refid="elemwise__scatter__op_8h"/>
        <childnode refid="37568" relation="include">
        </childnode>
      </node>
      <node id="37770">
        <label>incubator-mxnet/src/operator/image/image_random-inl.h</label>
        <link refid="image__random-inl_8h"/>
        <childnode refid="37658" relation="include">
        </childnode>
      </node>
      <node id="37529">
        <label>incubator-mxnet/src/operator/quantization/quantize.cc</label>
        <link refid="quantize_8cc"/>
      </node>
      <node id="37475">
        <label>incubator-mxnet/src/imperative/imperative_utils.cc</label>
        <link refid="imperative__utils_8cc_source"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37467">
        <label>incubator-mxnet/include/mxnet/executor.h</label>
        <link refid="include_2mxnet_2executor_8h_source"/>
        <childnode refid="37468" relation="include">
        </childnode>
        <childnode refid="37469" relation="include">
        </childnode>
        <childnode refid="37470" relation="include">
        </childnode>
        <childnode refid="37488" relation="include">
        </childnode>
      </node>
      <node id="37643">
        <label>incubator-mxnet/src/operator/tensor/control_flow_op.cc</label>
        <link refid="control__flow__op_8cc"/>
      </node>
      <node id="37905">
        <label>incubator-mxnet/plugin/caffe/caffe_blob.cc</label>
        <link refid="caffe__blob_8cc"/>
      </node>
      <node id="37802">
        <label>incubator-mxnet/src/operator/pad-inl.h</label>
        <link refid="pad-inl_8h"/>
        <childnode refid="37803" relation="include">
        </childnode>
      </node>
      <node id="37637">
        <label>incubator-mxnet/src/operator/random/sample_op.h</label>
        <link refid="sample__op_8h"/>
        <childnode refid="37550" relation="include">
        </childnode>
        <childnode refid="37638" relation="include">
        </childnode>
      </node>
      <node id="37632">
        <label>incubator-mxnet/src/operator/contrib/optimizer_op.cc</label>
        <link refid="contrib_2optimizer__op_8cc_source"/>
      </node>
      <node id="37568">
        <label>incubator-mxnet/src/operator/tensor/elemwise_scatter_op.cc</label>
        <link refid="elemwise__scatter__op_8cc"/>
      </node>
      <node id="37561">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_op.h</label>
        <link refid="elemwise__binary__op_8h"/>
        <childnode refid="37549" relation="include">
        </childnode>
        <childnode refid="37562" relation="include">
        </childnode>
        <childnode refid="37522" relation="include">
        </childnode>
        <childnode refid="37498" relation="include">
        </childnode>
        <childnode refid="37557" relation="include">
        </childnode>
        <childnode refid="37558" relation="include">
        </childnode>
        <childnode refid="37559" relation="include">
        </childnode>
        <childnode refid="37573" relation="include">
        </childnode>
        <childnode refid="37574" relation="include">
        </childnode>
        <childnode refid="37575" relation="include">
        </childnode>
        <childnode refid="37576" relation="include">
        </childnode>
        <childnode refid="37577" relation="include">
        </childnode>
        <childnode refid="37578" relation="include">
        </childnode>
      </node>
      <node id="37639">
        <label>incubator-mxnet/src/operator/tensor/dot-inl.h</label>
        <link refid="dot-inl_8h"/>
        <childnode refid="37498" relation="include">
        </childnode>
        <childnode refid="37640" relation="include">
        </childnode>
      </node>
      <node id="37563">
        <label>incubator-mxnet/src/kvstore/kvstore_dist_server.h</label>
        <link refid="kvstore__dist__server_8h_source"/>
        <childnode refid="37564" relation="include">
        </childnode>
      </node>
      <node id="37890">
        <label>incubator-mxnet/scala-package/native/src/main/native/org_apache_mxnet_native_c_api.cc</label>
        <link refid="org__apache__mxnet__native__c__api_8cc"/>
      </node>
      <node id="37541">
        <label>incubator-mxnet/src/operator/tensor/broadcast_reduce_op_index.cc</label>
        <link refid="broadcast__reduce__op__index_8cc"/>
      </node>
      <node id="37792">
        <label>incubator-mxnet/src/operator/nn/cudnn/cudnn_pooling-inl.h</label>
        <link refid="cudnn__pooling-inl_8h"/>
      </node>
      <node id="37760">
        <label>incubator-mxnet/src/operator/cudnn_spatial_transformer-inl.h</label>
        <link refid="cudnn__spatial__transformer-inl_8h"/>
      </node>
      <node id="37425">
        <label>incubator-mxnet/cpp-package/example/utils.h</label>
        <link refid="cpp-package_2example_2utils_8h_source"/>
        <childnode refid="37426" relation="include">
        </childnode>
        <childnode refid="37427" relation="include">
        </childnode>
        <childnode refid="37428" relation="include">
        </childnode>
        <childnode refid="37429" relation="include">
        </childnode>
        <childnode refid="37430" relation="include">
        </childnode>
        <childnode refid="37431" relation="include">
        </childnode>
        <childnode refid="37432" relation="include">
        </childnode>
        <childnode refid="37433" relation="include">
        </childnode>
        <childnode refid="37434" relation="include">
        </childnode>
        <childnode refid="37435" relation="include">
        </childnode>
        <childnode refid="37436" relation="include">
        </childnode>
        <childnode refid="37437" relation="include">
        </childnode>
      </node>
      <node id="37813">
        <label>incubator-mxnet/src/operator/softmax_output-inl.h</label>
        <link refid="softmax__output-inl_8h"/>
        <childnode refid="37814" relation="include">
        </childnode>
      </node>
      <node id="37819">
        <label>incubator-mxnet/src/executor/exec_pass.h</label>
        <link refid="exec__pass_8h"/>
        <childnode refid="37469" relation="include">
        </childnode>
        <childnode refid="37820" relation="include">
        </childnode>
        <childnode refid="37470" relation="include">
        </childnode>
        <childnode refid="37717" relation="include">
        </childnode>
        <childnode refid="37488" relation="include">
        </childnode>
        <childnode refid="37821" relation="include">
        </childnode>
        <childnode refid="37822" relation="include">
        </childnode>
        <childnode refid="37487" relation="include">
        </childnode>
        <childnode refid="37719" relation="include">
        </childnode>
        <childnode refid="37823" relation="include">
        </childnode>
        <childnode refid="37473" relation="include">
        </childnode>
        <childnode refid="37647" relation="include">
        </childnode>
        <childnode refid="37483" relation="include">
        </childnode>
      </node>
      <node id="37501">
        <label>incubator-mxnet/src/operator/numpy/np_matrix_op-inl.h</label>
        <link refid="np__matrix__op-inl_8h"/>
        <childnode refid="37502" relation="include">
        </childnode>
      </node>
      <node id="37739">
        <label>incubator-mxnet/src/operator/contrib/multi_proposal-inl.h</label>
        <link refid="multi__proposal-inl_8h"/>
        <childnode refid="37740" relation="include">
        </childnode>
      </node>
      <node id="37619">
        <label>incubator-mxnet/src/operator/optimizer_op.cc</label>
        <link refid="optimizer__op_8cc_source"/>
      </node>
      <node id="37620">
        <label>incubator-mxnet/src/operator/contrib/all_finite-inl.h</label>
        <link refid="all__finite-inl_8h"/>
        <childnode refid="37621" relation="include">
        </childnode>
      </node>
      <node id="37745">
        <label>incubator-mxnet/src/operator/contrib/multibox_target-inl.h</label>
        <link refid="multibox__target-inl_8h"/>
        <childnode refid="37746" relation="include">
        </childnode>
      </node>
      <node id="37602">
        <label>incubator-mxnet/src/kvstore/comm.h</label>
        <link refid="comm_8h_source"/>
        <childnode refid="37603" relation="include">
        </childnode>
      </node>
      <node id="37919">
        <label>incubator-mxnet/tests/cpp/misc/base.cc</label>
        <link refid="tests_2cpp_2misc_2base_8cc_source"/>
      </node>
      <node id="37431">
        <label>incubator-mxnet/cpp-package/example/lenet_with_mxdataiter.cpp</label>
        <link refid="lenet__with__mxdataiter_8cpp_source"/>
      </node>
      <node id="37629">
        <label>incubator-mxnet/src/operator/contrib/index_copy.cc</label>
        <link refid="index__copy_8cc"/>
      </node>
      <node id="37756">
        <label>incubator-mxnet/src/operator/correlation.cc</label>
        <link refid="correlation_8cc"/>
      </node>
      <node id="37522">
        <label>incubator-mxnet/src/operator/nn/softmax.cc</label>
        <link refid="softmax_8cc"/>
      </node>
      <node id="37505">
        <label>incubator-mxnet/src/operator/tensor/broadcast_reduce_op.h</label>
        <link refid="broadcast__reduce__op_8h"/>
        <childnode refid="37492" relation="include">
        </childnode>
        <childnode refid="37506" relation="include">
        </childnode>
        <childnode refid="37509" relation="include">
        </childnode>
        <childnode refid="37513" relation="include">
        </childnode>
        <childnode refid="37514" relation="include">
        </childnode>
        <childnode refid="37517" relation="include">
        </childnode>
        <childnode refid="37519" relation="include">
        </childnode>
        <childnode refid="37523" relation="include">
        </childnode>
        <childnode refid="37498" relation="include">
        </childnode>
        <childnode refid="37525" relation="include">
        </childnode>
        <childnode refid="37531" relation="include">
        </childnode>
        <childnode refid="37536" relation="include">
        </childnode>
        <childnode refid="37537" relation="include">
        </childnode>
        <childnode refid="37539" relation="include">
        </childnode>
        <childnode refid="37540" relation="include">
        </childnode>
        <childnode refid="37541" relation="include">
        </childnode>
        <childnode refid="37542" relation="include">
        </childnode>
        <childnode refid="37543" relation="include">
        </childnode>
        <childnode refid="37544" relation="include">
        </childnode>
        <childnode refid="37545" relation="include">
        </childnode>
        <childnode refid="37547" relation="include">
        </childnode>
      </node>
      <node id="37630">
        <label>incubator-mxnet/src/operator/contrib/nnz.cc</label>
        <link refid="nnz_8cc"/>
      </node>
      <node id="37553">
        <label>incubator-mxnet/src/operator/nn/dropout.cc</label>
        <link refid="dropout_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37484">
        <label>incubator-mxnet/tests/cpp/operator/coreop_perf.cc</label>
        <link refid="coreop__perf_8cc_source"/>
      </node>
      <node id="37570">
        <label>incubator-mxnet/src/operator/tensor/elemwise_unary_op_logexp.cc</label>
        <link refid="elemwise__unary__op__logexp_8cc"/>
      </node>
      <node id="37543">
        <label>incubator-mxnet/src/operator/tensor/broadcast_reduce_prod_value.cc</label>
        <link refid="broadcast__reduce__prod__value_8cc"/>
      </node>
      <node id="37933">
        <label>incubator-mxnet/R-package/src/ndarray.cc</label>
        <link refid="_r-package_2src_2ndarray_8cc_source"/>
      </node>
      <node id="37894">
        <label>incubator-mxnet/src/engine/engine.cc</label>
        <link refid="engine_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37789">
        <label>incubator-mxnet/src/operator/nn/upsampling-inl.h</label>
        <link refid="upsampling-inl_8h"/>
        <childnode refid="37790" relation="include">
        </childnode>
      </node>
      <node id="37889">
        <label>incubator-mxnet/plugin/torch/torch_function.cc</label>
        <link refid="torch__function_8cc_source"/>
      </node>
      <node id="37780">
        <label>incubator-mxnet/src/operator/nn/cudnn/cudnn_batch_norm-inl.h</label>
        <link refid="cudnn__batch__norm-inl_8h"/>
        <childnode refid="37666" relation="include">
        </childnode>
      </node>
      <node id="37788">
        <label>incubator-mxnet/src/operator/nn/deconvolution.cc</label>
        <link refid="deconvolution_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37717">
        <label>incubator-mxnet/src/c_api/c_api_symbolic.cc</label>
        <link refid="c__api__symbolic_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37644">
        <label>incubator-mxnet/src/operator/tensor/indexing_op.h</label>
        <link refid="indexing__op_8h"/>
        <childnode refid="37645" relation="include">
        </childnode>
        <childnode refid="37646" relation="include">
        </childnode>
      </node>
      <node id="37856">
        <label>incubator-mxnet/src/io/image_det_aug_default.cc</label>
        <link refid="image__det__aug__default_8cc"/>
      </node>
      <node id="37592">
        <label>incubator-mxnet/tests/cpp/include/test_util.h</label>
        <link refid="test__util_8h"/>
        <childnode refid="37593" relation="include">
        </childnode>
        <childnode refid="37594" relation="include">
        </childnode>
        <childnode refid="37595" relation="include">
        </childnode>
        <childnode refid="37596" relation="include">
        </childnode>
        <childnode refid="37600" relation="include">
        </childnode>
        <childnode refid="37481" relation="include">
        </childnode>
        <childnode refid="37601" relation="include">
        </childnode>
      </node>
      <node id="37456">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/optimizer.hpp</label>
        <link refid="optimizer_8hpp"/>
        <childnode refid="37424" relation="include">
        </childnode>
      </node>
      <node id="37757">
        <label>incubator-mxnet/src/operator/crop-inl.h</label>
        <link refid="crop-inl_8h_source"/>
        <childnode refid="37758" relation="include">
        </childnode>
      </node>
      <node id="37464">
        <label>incubator-mxnet/include/mxnet/base.h</label>
        <link refid="include_2mxnet_2base_8h_source"/>
        <childnode refid="37465" relation="include">
        </childnode>
        <childnode refid="37467" relation="include">
        </childnode>
        <childnode refid="37466" relation="include">
        </childnode>
        <childnode refid="37896" relation="include">
        </childnode>
        <childnode refid="37490" relation="include">
        </childnode>
        <childnode refid="37893" relation="include">
        </childnode>
        <childnode refid="37901" relation="include">
        </childnode>
        <childnode refid="37489" relation="include">
        </childnode>
        <childnode refid="37874" relation="include">
        </childnode>
        <childnode refid="37491" relation="include">
        </childnode>
        <childnode refid="37902" relation="include">
        </childnode>
        <childnode refid="37903" relation="include">
        </childnode>
        <childnode refid="37875" relation="include">
        </childnode>
        <childnode refid="37876" relation="include">
        </childnode>
        <childnode refid="37703" relation="include">
        </childnode>
        <childnode refid="37862" relation="include">
        </childnode>
        <childnode refid="37869" relation="include">
        </childnode>
        <childnode refid="37868" relation="include">
        </childnode>
        <childnode refid="37838" relation="include">
        </childnode>
        <childnode refid="37880" relation="include">
        </childnode>
        <childnode refid="37907" relation="include">
        </childnode>
        <childnode refid="37909" relation="include">
        </childnode>
        <childnode refid="37911" relation="include">
        </childnode>
        <childnode refid="37888" relation="include">
        </childnode>
        <childnode refid="37912" relation="include">
        </childnode>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37591" relation="include">
        </childnode>
        <childnode refid="37590" relation="include">
        </childnode>
        <childnode refid="37468" relation="include">
        </childnode>
        <childnode refid="37469" relation="include">
        </childnode>
        <childnode refid="37819" relation="include">
        </childnode>
        <childnode refid="37711" relation="include">
        </childnode>
        <childnode refid="37471" relation="include">
        </childnode>
        <childnode refid="37717" relation="include">
        </childnode>
        <childnode refid="37913" relation="include">
        </childnode>
        <childnode refid="37914" relation="include">
        </childnode>
        <childnode refid="37821" relation="include">
        </childnode>
        <childnode refid="37487" relation="include">
        </childnode>
        <childnode refid="37823" relation="include">
        </childnode>
        <childnode refid="37855" relation="include">
        </childnode>
        <childnode refid="37856" relation="include">
        </childnode>
        <childnode refid="37720" relation="include">
        </childnode>
        <childnode refid="37878" relation="include">
        </childnode>
        <childnode refid="37881" relation="include">
        </childnode>
        <childnode refid="37858" relation="include">
        </childnode>
        <childnode refid="37915" relation="include">
        </childnode>
        <childnode refid="37494" relation="include">
        </childnode>
        <childnode refid="37653" relation="include">
        </childnode>
        <childnode refid="37916" relation="include">
        </childnode>
        <childnode refid="37824" relation="include">
        </childnode>
        <childnode refid="37825" relation="include">
        </childnode>
        <childnode refid="37917" relation="include">
        </childnode>
        <childnode refid="37721" relation="include">
        </childnode>
        <childnode refid="37826" relation="include">
        </childnode>
        <childnode refid="37683" relation="include">
        </childnode>
        <childnode refid="37827" relation="include">
        </childnode>
        <childnode refid="37828" relation="include">
        </childnode>
        <childnode refid="37476" relation="include">
        </childnode>
        <childnode refid="37477" relation="include">
        </childnode>
        <childnode refid="37741" relation="include">
        </childnode>
        <childnode refid="37743" relation="include">
        </childnode>
        <childnode refid="37745" relation="include">
        </childnode>
        <childnode refid="37581" relation="include">
        </childnode>
        <childnode refid="37478" relation="include">
        </childnode>
        <childnode refid="37753" relation="include">
        </childnode>
        <childnode refid="37657" relation="include">
        </childnode>
        <childnode refid="37765" relation="include">
        </childnode>
        <childnode refid="37495" relation="include">
        </childnode>
        <childnode refid="37496" relation="include">
        </childnode>
        <childnode refid="37770" relation="include">
        </childnode>
        <childnode refid="37658" relation="include">
        </childnode>
        <childnode refid="37659" relation="include">
        </childnode>
        <childnode refid="37686" relation="include">
        </childnode>
        <childnode refid="37688" relation="include">
        </childnode>
        <childnode refid="37830" relation="include">
        </childnode>
        <childnode refid="37525" relation="include">
        </childnode>
        <childnode refid="37569" relation="include">
        </childnode>
        <childnode refid="37570" relation="include">
        </childnode>
        <childnode refid="37571" relation="include">
        </childnode>
        <childnode refid="37572" relation="include">
        </childnode>
        <childnode refid="37851" relation="include">
        </childnode>
        <childnode refid="37852" relation="include">
        </childnode>
        <childnode refid="37860" relation="include">
        </childnode>
        <childnode refid="37918" relation="include">
        </childnode>
        <childnode refid="37900" relation="include">
        </childnode>
        <childnode refid="37899" relation="include">
        </childnode>
        <childnode refid="37861" relation="include">
        </childnode>
        <childnode refid="37887" relation="include">
        </childnode>
        <childnode refid="37919" relation="include">
        </childnode>
        <childnode refid="37920" relation="include">
        </childnode>
      </node>
      <node id="37650">
        <label>incubator-mxnet/src/io/image_io.cc</label>
        <link refid="image__io_8cc_source"/>
      </node>
      <node id="37625">
        <label>incubator-mxnet/src/operator/contrib/hawkes_ll.cc</label>
        <link refid="hawkes__ll_8cc"/>
      </node>
      <node id="37832">
        <label>incubator-mxnet/src/operator/operator.cc</label>
        <link refid="operator_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37430">
        <label>incubator-mxnet/cpp-package/example/lenet.cpp</label>
        <link refid="lenet_8cpp_source"/>
      </node>
      <node id="37750">
        <label>incubator-mxnet/src/operator/contrib/psroi_pooling.cc</label>
        <link refid="psroi__pooling_8cc"/>
      </node>
      <node id="37580">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_scalar_op.h</label>
        <link refid="elemwise__binary__scalar__op_8h"/>
        <childnode refid="37579" relation="include">
        </childnode>
        <childnode refid="37554" relation="include">
        </childnode>
        <childnode refid="37555" relation="include">
        </childnode>
        <childnode refid="37575" relation="include">
        </childnode>
        <childnode refid="37576" relation="include">
        </childnode>
        <childnode refid="37577" relation="include">
        </childnode>
        <childnode refid="37568" relation="include">
        </childnode>
        <childnode refid="37578" relation="include">
        </childnode>
      </node>
      <node id="37829">
        <label>incubator-mxnet/src/operator/cross_device_copy.cc</label>
        <link refid="cross__device__copy_8cc"/>
      </node>
      <node id="37798">
        <label>incubator-mxnet/src/operator/cudnn_lrn-inl.h</label>
        <link refid="cudnn__lrn-inl_8h"/>
      </node>
      <node id="37879">
        <label>incubator-mxnet/src/io/iter_libsvm.cc</label>
        <link refid="iter__libsvm_8cc"/>
      </node>
      <node id="37679">
        <label>incubator-mxnet/src/operator/tensor/ravel.h</label>
        <link refid="ravel_8h"/>
        <childnode refid="37680" relation="include">
        </childnode>
      </node>
      <node id="37573">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_op.cc</label>
        <link refid="elemwise__binary__op_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37859">
        <label>incubator-mxnet/src/kvstore/kvstore_utils.cc</label>
        <link refid="kvstore__utils_8cc"/>
      </node>
      <node id="37441">
        <label>incubator-mxnet/cpp-package/example/test_regress_label.cpp</label>
        <link refid="test__regress__label_8cpp_source"/>
      </node>
      <node id="37692">
        <label>incubator-mxnet/src/operator/quantization/quantized_conv.cc</label>
        <link refid="quantized__conv_8cc"/>
      </node>
      <node id="37686">
        <label>incubator-mxnet/src/operator/nn/convolution-inl.h</label>
        <link refid="convolution-inl_8h"/>
        <childnode refid="37663" relation="include">
        </childnode>
        <childnode refid="37687" relation="include">
        </childnode>
        <childnode refid="37689" relation="include">
        </childnode>
        <childnode refid="37691" relation="include">
        </childnode>
        <childnode refid="37692" relation="include">
        </childnode>
      </node>
      <node id="37617">
        <label>incubator-mxnet/src/operator/optimizer_op-inl.h</label>
        <link refid="optimizer__op-inl_8h_source"/>
        <childnode refid="37618" relation="include">
        </childnode>
        <childnode refid="37619" relation="include">
        </childnode>
      </node>
      <node id="37928">
        <label>incubator-mxnet/R-package/src/mxnet.cc</label>
        <link refid="mxnet_8cc"/>
      </node>
      <node id="37803">
        <label>incubator-mxnet/src/operator/pad.cc</label>
        <link refid="pad_8cc"/>
      </node>
      <node id="37459">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/operator.h</label>
        <link refid="cpp-package_2include_2mxnet-cpp_2operator_8h_source"/>
        <childnode refid="37454" relation="include">
        </childnode>
        <childnode refid="37442" relation="include">
        </childnode>
        <childnode refid="37460" relation="include">
        </childnode>
      </node>
      <node id="37515">
        <label>incubator-mxnet/src/operator/nn/group_norm.cc</label>
        <link refid="group__norm_8cc"/>
      </node>
      <node id="37698">
        <label>incubator-mxnet/plugin/caffe/caffe_data_iter.cc</label>
        <link refid="caffe__data__iter_8cc"/>
      </node>
      <node id="37892">
        <label>incubator-mxnet/src/nnvm/tvm_bridge.cc</label>
        <link refid="tvm__bridge_8cc"/>
      </node>
      <node id="37531">
        <label>incubator-mxnet/src/operator/quantization/quantize_v2-inl.h</label>
        <link refid="quantize__v2-inl_8h"/>
        <childnode refid="37532" relation="include">
        </childnode>
        <childnode refid="37533" relation="include">
        </childnode>
      </node>
      <node id="37594">
        <label>incubator-mxnet/tests/cpp/engine/engine_shutdown_test.cc</label>
        <link refid="engine__shutdown__test_8cc"/>
      </node>
      <node id="37638">
        <label>incubator-mxnet/src/operator/random/sample_op.cc</label>
        <link refid="sample__op_8cc"/>
      </node>
      <node id="37443">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/symbol.hpp</label>
        <link refid="symbol_8hpp"/>
        <childnode refid="37424" relation="include">
        </childnode>
      </node>
      <node id="37749">
        <label>incubator-mxnet/src/operator/contrib/psroi_pooling-inl.h</label>
        <link refid="psroi__pooling-inl_8h"/>
        <childnode refid="37750" relation="include">
        </childnode>
      </node>
      <node id="37812">
        <label>incubator-mxnet/src/operator/sequence_mask.cc</label>
        <link refid="sequence__mask_8cc"/>
      </node>
      <node id="37848">
        <label>incubator-mxnet/src/engine/threaded_engine_pooled.cc</label>
        <link refid="threaded__engine__pooled_8cc"/>
      </node>
      <node id="37915">
        <label>incubator-mxnet/src/libinfo.cc</label>
        <link refid="libinfo_8cc"/>
      </node>
      <node id="37539">
        <label>incubator-mxnet/src/operator/tensor/broadcast_reduce_minmax_value.cc</label>
        <link refid="broadcast__reduce__minmax__value_8cc"/>
      </node>
      <node id="37727">
        <label>incubator-mxnet/src/operator/contrib/bounding_box-common.h</label>
        <link refid="bounding__box-common_8h"/>
        <childnode refid="37682" relation="include">
        </childnode>
      </node>
      <node id="37735">
        <label>incubator-mxnet/src/operator/contrib/ifft-inl.h</label>
        <link refid="ifft-inl_8h"/>
        <childnode refid="37736" relation="include">
        </childnode>
      </node>
      <node id="37507">
        <label>incubator-mxnet/src/operator/nn/concat.cc</label>
        <link refid="concat_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37557">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_broadcast_op_basic.cc</label>
        <link refid="elemwise__binary__broadcast__op__basic_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37581">
        <label>incubator-mxnet/src/operator/contrib/transformer.cc</label>
        <link refid="transformer_8cc"/>
      </node>
      <node id="37924">
        <label>incubator-mxnet/plugin/opencv/cv_api.h</label>
        <link refid="cv__api_8h"/>
        <childnode refid="37869" relation="include">
        </childnode>
      </node>
      <node id="37907">
        <label>incubator-mxnet/plugin/torch/torch_base.h</label>
        <link refid="torch__base_8h"/>
        <childnode refid="37908" relation="include">
        </childnode>
        <childnode refid="37704" relation="include">
        </childnode>
        <childnode refid="37888" relation="include">
        </childnode>
        <childnode refid="37706" relation="include">
        </childnode>
      </node>
      <node id="37790">
        <label>incubator-mxnet/src/operator/nn/upsampling.cc</label>
        <link refid="upsampling_8cc_source"/>
      </node>
      <node id="37776">
        <label>incubator-mxnet/src/operator/make_loss.cc</label>
        <link refid="make__loss_8cc"/>
      </node>
      <node id="37497">
        <label>incubator-mxnet/src/operator/numpy/np_tensordot_op-inl.h</label>
        <link refid="np__tensordot__op-inl_8h"/>
        <childnode refid="37498" relation="include">
        </childnode>
        <childnode refid="37500" relation="include">
        </childnode>
      </node>
      <node id="37566">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_op_basic.cc</label>
        <link refid="elemwise__binary__op__basic_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37642">
        <label>incubator-mxnet/src/operator/tensor/control_flow_op.h</label>
        <link refid="control__flow__op_8h"/>
        <childnode refid="37643" relation="include">
        </childnode>
      </node>
      <node id="37555">
        <label>incubator-mxnet/src/operator/numpy/np_true_divide.cc</label>
        <link refid="np__true__divide_8cc"/>
      </node>
      <node id="37545">
        <label>incubator-mxnet/src/operator/tensor/diag_op-inl.h</label>
        <link refid="diag__op-inl_8h"/>
        <childnode refid="37546" relation="include">
        </childnode>
      </node>
      <node id="37672">
        <label>incubator-mxnet/src/operator/random/sample_multinomial_op.cc</label>
        <link refid="sample__multinomial__op_8cc_source"/>
      </node>
      <node id="37569">
        <label>incubator-mxnet/src/operator/tensor/elemwise_unary_op_basic.cc</label>
        <link refid="elemwise__unary__op__basic_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37867">
        <label>incubator-mxnet/src/operator/operator_tune-inl.h</label>
        <link refid="operator__tune-inl_8h_source"/>
        <childnode refid="37556" relation="include">
        </childnode>
      </node>
      <node id="37504">
        <label>incubator-mxnet/src/operator/elemwise_op_common.h</label>
        <link refid="elemwise__op__common_8h"/>
        <childnode refid="37492" relation="include">
        </childnode>
        <childnode refid="37505" relation="include">
        </childnode>
        <childnode refid="37549" relation="include">
        </childnode>
        <childnode refid="37560" relation="include">
        </childnode>
        <childnode refid="37590" relation="include">
        </childnode>
        <childnode refid="37614" relation="include">
        </childnode>
        <childnode refid="37647" relation="include">
        </childnode>
        <childnode refid="37650" relation="include">
        </childnode>
        <childnode refid="37651" relation="include">
        </childnode>
        <childnode refid="37652" relation="include">
        </childnode>
        <childnode refid="37655" relation="include">
        </childnode>
        <childnode refid="37617" relation="include">
        </childnode>
        <childnode refid="37609" relation="include">
        </childnode>
        <childnode refid="37620" relation="include">
        </childnode>
        <childnode refid="37611" relation="include">
        </childnode>
        <childnode refid="37622" relation="include">
        </childnode>
        <childnode refid="37656" relation="include">
        </childnode>
        <childnode refid="37476" relation="include">
        </childnode>
        <childnode refid="37580" relation="include">
        </childnode>
        <childnode refid="37628" relation="include">
        </childnode>
        <childnode refid="37612" relation="include">
        </childnode>
        <childnode refid="37630" relation="include">
        </childnode>
        <childnode refid="37631" relation="include">
        </childnode>
        <childnode refid="37632" relation="include">
        </childnode>
        <childnode refid="37633" relation="include">
        </childnode>
        <childnode refid="37478" relation="include">
        </childnode>
        <childnode refid="37657" relation="include">
        </childnode>
        <childnode refid="37496" relation="include">
        </childnode>
        <childnode refid="37658" relation="include">
        </childnode>
        <childnode refid="37659" relation="include">
        </childnode>
        <childnode refid="37637" relation="include">
        </childnode>
        <childnode refid="37660" relation="include">
        </childnode>
        <childnode refid="37662" relation="include">
        </childnode>
        <childnode refid="37663" relation="include">
        </childnode>
        <childnode refid="37664" relation="include">
        </childnode>
        <childnode refid="37666" relation="include">
        </childnode>
        <childnode refid="37509" relation="include">
        </childnode>
        <childnode refid="37515" relation="include">
        </childnode>
        <childnode refid="37518" relation="include">
        </childnode>
        <childnode refid="37667" relation="include">
        </childnode>
        <childnode refid="37639" relation="include">
        </childnode>
        <childnode refid="37619" relation="include">
        </childnode>
        <childnode refid="37526" relation="include">
        </childnode>
        <childnode refid="37528" relation="include">
        </childnode>
        <childnode refid="37531" relation="include">
        </childnode>
        <childnode refid="37668" relation="include">
        </childnode>
        <childnode refid="37534" relation="include">
        </childnode>
        <childnode refid="37536" relation="include">
        </childnode>
        <childnode refid="37669" relation="include">
        </childnode>
        <childnode refid="37537" relation="include">
        </childnode>
        <childnode refid="37671" relation="include">
        </childnode>
        <childnode refid="37673" relation="include">
        </childnode>
        <childnode refid="37674" relation="include">
        </childnode>
        <childnode refid="37587" relation="include">
        </childnode>
        <childnode refid="37642" relation="include">
        </childnode>
        <childnode refid="37545" relation="include">
        </childnode>
        <childnode refid="37675" relation="include">
        </childnode>
        <childnode refid="37644" relation="include">
        </childnode>
        <childnode refid="37677" relation="include">
        </childnode>
        <childnode refid="37646" relation="include">
        </childnode>
        <childnode refid="37679" relation="include">
        </childnode>
      </node>
      <node id="37450">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/initializer.h</label>
        <link refid="initializer_8h"/>
        <childnode refid="37418" relation="include">
        </childnode>
        <childnode refid="37424" relation="include">
        </childnode>
      </node>
      <node id="37766">
        <label>incubator-mxnet/src/operator/grid_generator-inl.h</label>
        <link refid="grid__generator-inl_8h"/>
        <childnode refid="37767" relation="include">
        </childnode>
      </node>
      <node id="37489">
        <label>incubator-mxnet/include/mxnet/op_attr_types.h</label>
        <link refid="op__attr__types_8h"/>
        <childnode refid="37490" relation="include">
        </childnode>
        <childnode refid="37833" relation="include">
        </childnode>
        <childnode refid="37834" relation="include">
        </childnode>
        <childnode refid="37703" relation="include">
        </childnode>
        <childnode refid="37837" relation="include">
        </childnode>
        <childnode refid="37862" relation="include">
        </childnode>
        <childnode refid="37868" relation="include">
        </childnode>
        <childnode refid="37504" relation="include">
        </childnode>
        <childnode refid="37549" relation="include">
        </childnode>
        <childnode refid="37561" relation="include">
        </childnode>
        <childnode refid="37590" relation="include">
        </childnode>
        <childnode refid="37471" relation="include">
        </childnode>
        <childnode refid="37821" relation="include">
        </childnode>
        <childnode refid="37822" relation="include">
        </childnode>
        <childnode refid="37719" relation="include">
        </childnode>
        <childnode refid="37823" relation="include">
        </childnode>
        <childnode refid="37650" relation="include">
        </childnode>
        <childnode refid="37824" relation="include">
        </childnode>
        <childnode refid="37825" relation="include">
        </childnode>
        <childnode refid="37655" relation="include">
        </childnode>
        <childnode refid="37617" relation="include">
        </childnode>
        <childnode refid="37620" relation="include">
        </childnode>
        <childnode refid="37872" relation="include">
        </childnode>
        <childnode refid="37865" relation="include">
        </childnode>
        <childnode refid="37864" relation="include">
        </childnode>
        <childnode refid="37477" relation="include">
        </childnode>
        <childnode refid="37612" relation="include">
        </childnode>
        <childnode refid="37631" relation="include">
        </childnode>
        <childnode refid="37686" relation="include">
        </childnode>
        <childnode refid="37553" relation="include">
        </childnode>
        <childnode refid="37532" relation="include">
        </childnode>
        <childnode refid="37668" relation="include">
        </childnode>
        <childnode refid="37781" relation="include">
        </childnode>
        <childnode refid="37535" relation="include">
        </childnode>
        <childnode refid="37794" relation="include">
        </childnode>
        <childnode refid="37873" relation="include">
        </childnode>
        <childnode refid="37596" relation="include">
        </childnode>
      </node>
      <node id="37844">
        <label>incubator-mxnet/src/engine/naive_engine.cc</label>
        <link refid="naive__engine_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37509">
        <label>incubator-mxnet/src/operator/nn/fully_connected-inl.h</label>
        <link refid="fully__connected-inl_8h_source"/>
        <childnode refid="37510" relation="include">
        </childnode>
        <childnode refid="37511" relation="include">
        </childnode>
        <childnode refid="37512" relation="include">
        </childnode>
      </node>
      <node id="37608">
        <label>incubator-mxnet/src/operator/contrib/adaptive_avg_pooling-inl.h</label>
        <link refid="adaptive__avg__pooling-inl_8h"/>
        <childnode refid="37609" relation="include">
        </childnode>
      </node>
      <node id="37900">
        <label>incubator-mxnet/src/storage/gpu_device_storage.h</label>
        <link refid="gpu__device__storage_8h"/>
        <childnode refid="37854" relation="include">
        </childnode>
      </node>
      <node id="37852">
        <label>incubator-mxnet/src/profiler/profiler.cc</label>
        <link refid="profiler_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37930">
        <label>incubator-mxnet/R-package/src/io.h</label>
        <link refid="_r-package_2src_2io_8h_source"/>
        <childnode refid="37931" relation="include">
        </childnode>
        <childnode refid="37928" relation="include">
        </childnode>
      </node>
      <node id="37452">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/kvstore.hpp</label>
        <link refid="kvstore_8hpp"/>
        <childnode refid="37424" relation="include">
        </childnode>
      </node>
      <node id="37614">
        <label>incubator-mxnet/src/operator/tensor/sparse_retain-inl.h</label>
        <link refid="sparse__retain-inl_8h"/>
        <childnode refid="37615" relation="include">
        </childnode>
        <childnode refid="37602" relation="include">
        </childnode>
        <childnode refid="37606" relation="include">
        </childnode>
        <childnode refid="37578" relation="include">
        </childnode>
        <childnode refid="37616" relation="include">
        </childnode>
      </node>
      <node id="37851">
        <label>incubator-mxnet/src/profiler/aggregate_stats.cc</label>
        <link refid="aggregate__stats_8cc_source"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37514">
        <label>incubator-mxnet/src/operator/nn/group_norm-inl.h</label>
        <link refid="group__norm-inl_8h"/>
        <childnode refid="37515" relation="include">
        </childnode>
      </node>
      <node id="37927">
        <label>incubator-mxnet/R-package/src/executor.h</label>
        <link refid="_r-package_2src_2executor_8h_source"/>
        <childnode refid="37926" relation="include">
        </childnode>
        <childnode refid="37928" relation="include">
        </childnode>
      </node>
      <node id="37922">
        <label>incubator-mxnet/tests/cpp/misc/libinfo_test.cc</label>
        <link refid="libinfo__test_8cc_source"/>
      </node>
      <node id="37540">
        <label>incubator-mxnet/src/operator/tensor/broadcast_reduce_norm_value.cc</label>
        <link refid="broadcast__reduce__norm__value_8cc"/>
      </node>
      <node id="37913">
        <label>incubator-mxnet/src/engine/stream_manager.h</label>
        <link refid="stream__manager_8h_source"/>
        <childnode refid="37848" relation="include">
        </childnode>
      </node>
      <node id="37664">
        <label>incubator-mxnet/src/operator/nn/ctc_loss-inl.h</label>
        <link refid="ctc__loss-inl_8h"/>
        <childnode refid="37665" relation="include">
        </childnode>
      </node>
      <node id="37634">
        <label>incubator-mxnet/src/operator/contrib/quadratic_op.cc</label>
        <link refid="quadratic__op_8cc"/>
      </node>
      <node id="37633">
        <label>incubator-mxnet/src/operator/contrib/quadratic_op-inl.h</label>
        <link refid="quadratic__op-inl_8h_source"/>
        <childnode refid="37634" relation="include">
        </childnode>
      </node>
      <node id="37806">
        <label>incubator-mxnet/src/operator/rnn-inl.h</label>
        <link refid="rnn-inl_8h"/>
        <childnode refid="37807" relation="include">
        </childnode>
      </node>
      <node id="37810">
        <label>incubator-mxnet/src/operator/roi_pooling.cc</label>
        <link refid="roi__pooling_8cc"/>
      </node>
      <node id="37740">
        <label>incubator-mxnet/src/operator/contrib/multi_proposal.cc</label>
        <link refid="multi__proposal_8cc"/>
      </node>
      <node id="37694">
        <label>incubator-mxnet/src/operator/random/unique_sample_op.h</label>
        <link refid="unique__sample__op_8h_source"/>
        <childnode refid="37641" relation="include">
        </childnode>
      </node>
      <node id="37657">
        <label>incubator-mxnet/src/operator/custom/custom.cc</label>
        <link refid="custom_8cc"/>
      </node>
      <node id="37549">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_broadcast_op.h</label>
        <link refid="elemwise__binary__broadcast__op_8h"/>
        <childnode refid="37505" relation="include">
        </childnode>
        <childnode refid="37550" relation="include">
        </childnode>
        <childnode refid="37552" relation="include">
        </childnode>
        <childnode refid="37554" relation="include">
        </childnode>
        <childnode refid="37555" relation="include">
        </childnode>
        <childnode refid="37556" relation="include">
        </childnode>
        <childnode refid="37557" relation="include">
        </childnode>
        <childnode refid="37558" relation="include">
        </childnode>
        <childnode refid="37559" relation="include">
        </childnode>
      </node>
      <node id="37418">
        <label>incubator-mxnet/cpp-package/example/inference/imagenet_inference.cpp</label>
        <link refid="imagenet__inference_8cpp_source"/>
      </node>
      <node id="37483">
        <label>incubator-mxnet/tests/cpp/operator/batchnorm_test.cc</label>
        <link refid="batchnorm__test_8cc"/>
      </node>
      <node id="37736">
        <label>incubator-mxnet/src/operator/contrib/ifft.cc</label>
        <link refid="ifft_8cc_source"/>
      </node>
      <node id="37485">
        <label>incubator-mxnet/tests/cpp/operator/dropout_perf.cc</label>
        <link refid="dropout__perf_8cc"/>
      </node>
      <node id="37621">
        <label>incubator-mxnet/src/operator/contrib/all_finite.cc</label>
        <link refid="all__finite_8cc"/>
      </node>
      <node id="37786">
        <label>incubator-mxnet/src/operator/sequence_reverse.cc</label>
        <link refid="sequence__reverse_8cc"/>
      </node>
      <node id="37653">
        <label>incubator-mxnet/src/nnvm/amp_infer_unknown.cc</label>
        <link refid="amp__infer__unknown_8cc_source"/>
      </node>
      <node id="37918">
        <label>incubator-mxnet/src/storage/cpu_device_storage.h</label>
        <link refid="cpu__device__storage_8h"/>
        <childnode refid="37854" relation="include">
        </childnode>
      </node>
      <node id="37640">
        <label>incubator-mxnet/src/operator/tensor/dot.cc</label>
        <link refid="dot_8cc"/>
      </node>
      <node id="37846">
        <label>incubator-mxnet/src/engine/threaded_engine.cc</label>
        <link refid="threaded__engine_8cc"/>
      </node>
      <node id="37593">
        <label>incubator-mxnet/src/common/tensor_inspector.h</label>
        <link refid="tensor__inspector_8h"/>
      </node>
      <node id="37576">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_scalar_op_extended.cc</label>
        <link refid="elemwise__binary__scalar__op__extended_8cc"/>
      </node>
      <node id="37704">
        <label>incubator-mxnet/plugin/torch/torch_criterion-inl.h</label>
        <link refid="torch__criterion-inl_8h_source"/>
        <childnode refid="37705" relation="include">
        </childnode>
      </node>
      <node id="37460">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/operator.hpp</label>
        <link refid="operator_8hpp"/>
        <childnode refid="37424" relation="include">
        </childnode>
      </node>
      <node id="37451">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/kvstore.h</label>
        <link refid="cpp-package_2include_2mxnet-cpp_2kvstore_8h_source"/>
        <childnode refid="37452" relation="include">
        </childnode>
      </node>
      <node id="37575">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_scalar_op_basic.cc</label>
        <link refid="elemwise__binary__scalar__op__basic_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37888">
        <label>incubator-mxnet/plugin/torch/torch_function.h</label>
        <link refid="torch__function_8h"/>
        <childnode refid="37889" relation="include">
        </childnode>
      </node>
      <node id="37887">
        <label>incubator-mxnet/tests/cpp/kvstore/gpu_topology_test.cc</label>
        <link refid="gpu__topology__test_8cc"/>
      </node>
      <node id="37655">
        <label>incubator-mxnet/src/operator/contrib/adamw-inl.h</label>
        <link refid="adamw-inl_8h_source"/>
        <childnode refid="37618" relation="include">
        </childnode>
      </node>
      <node id="37600">
        <label>incubator-mxnet/tests/cpp/include/test_ndarray_utils.h</label>
        <link refid="test__ndarray__utils_8h_source"/>
      </node>
      <node id="37714">
        <label>incubator-mxnet/src/operator/slice_channel-inl.h</label>
        <link refid="slice__channel-inl_8h"/>
        <childnode refid="37715" relation="include">
        </childnode>
      </node>
      <node id="37711">
        <label>incubator-mxnet/src/c_api/c_api_function.cc</label>
        <link refid="c__api__function_8cc_source"/>
      </node>
      <node id="37917">
        <label>incubator-mxnet/src/nnvm/low_precision_pass.cc</label>
        <link refid="low__precision__pass_8cc"/>
      </node>
      <node id="37931">
        <label>incubator-mxnet/R-package/src/io.cc</label>
        <link refid="_r-package_2src_2io_8cc_source"/>
      </node>
      <node id="37837">
        <label>incubator-mxnet/src/common/utils.h</label>
        <link refid="src_2common_2utils_8h_source"/>
        <childnode refid="37703" relation="include">
        </childnode>
        <childnode refid="37838" relation="include">
        </childnode>
        <childnode refid="37842" relation="include">
        </childnode>
        <childnode refid="37561" relation="include">
        </childnode>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37468" relation="include">
        </childnode>
        <childnode refid="37471" relation="include">
        </childnode>
        <childnode refid="37820" relation="include">
        </childnode>
        <childnode refid="37470" relation="include">
        </childnode>
        <childnode refid="37615" relation="include">
        </childnode>
        <childnode refid="37847" relation="include">
        </childnode>
        <childnode refid="37821" relation="include">
        </childnode>
        <childnode refid="37487" relation="include">
        </childnode>
        <childnode refid="37712" relation="include">
        </childnode>
        <childnode refid="37855" relation="include">
        </childnode>
        <childnode refid="37856" relation="include">
        </childnode>
        <childnode refid="37857" relation="include">
        </childnode>
        <childnode refid="37858" relation="include">
        </childnode>
        <childnode refid="37859" relation="include">
        </childnode>
        <childnode refid="37494" relation="include">
        </childnode>
        <childnode refid="37565" relation="include">
        </childnode>
        <childnode refid="37653" relation="include">
        </childnode>
        <childnode refid="37582" relation="include">
        </childnode>
        <childnode refid="37507" relation="include">
        </childnode>
        <childnode refid="37788" relation="include">
        </childnode>
        <childnode refid="37509" relation="include">
        </childnode>
        <childnode refid="37575" relation="include">
        </childnode>
        <childnode refid="37613" relation="include">
        </childnode>
        <childnode refid="37644" relation="include">
        </childnode>
        <childnode refid="37860" relation="include">
        </childnode>
        <childnode refid="37861" relation="include">
        </childnode>
      </node>
      <node id="37606">
        <label>incubator-mxnet/src/kvstore/comm_tree.h</label>
        <link refid="comm__tree_8h_source"/>
        <childnode refid="37603" relation="include">
        </childnode>
      </node>
      <node id="37613">
        <label>incubator-mxnet/src/operator/tensor/elemwise_sum.cc</label>
        <link refid="elemwise__sum_8cc"/>
      </node>
      <node id="37796">
        <label>incubator-mxnet/src/operator/nn/cudnn/cudnn_softmax_activation-inl.h</label>
        <link refid="cudnn__softmax__activation-inl_8h_source"/>
      </node>
      <node id="37567">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_op_extended.cc</label>
        <link refid="elemwise__binary__op__extended_8cc"/>
      </node>
      <node id="37754">
        <label>incubator-mxnet/src/operator/convolution_v1.cc</label>
        <link refid="convolution__v1_8cc"/>
      </node>
      <node id="37468">
        <label>incubator-mxnet/src/c_api/c_api_executor.cc</label>
        <link refid="c__api__executor_8cc"/>
      </node>
      <node id="37818">
        <label>incubator-mxnet/src/operator/swapaxis.cc</label>
        <link refid="swapaxis_8cc"/>
      </node>
      <node id="37661">
        <label>incubator-mxnet/src/operator/loss_binary_op.cc</label>
        <link refid="loss__binary__op_8cc"/>
      </node>
      <node id="37623">
        <label>incubator-mxnet/src/operator/contrib/boolean_mask.cc</label>
        <link refid="boolean__mask_8cc"/>
      </node>
      <node id="37660">
        <label>incubator-mxnet/src/operator/loss_binary_op-inl.h</label>
        <link refid="loss__binary__op-inl_8h"/>
        <childnode refid="37661" relation="include">
        </childnode>
      </node>
      <node id="37612">
        <label>incubator-mxnet/src/operator/contrib/krprod.cc</label>
        <link refid="krprod_8cc"/>
      </node>
      <node id="37648">
        <label>incubator-mxnet/src/operator/subgraph/default_subgraph_property.cc</label>
        <link refid="default__subgraph__property_8cc_source"/>
      </node>
      <node id="37911">
        <label>incubator-mxnet/src/operator/contrib/erfinv-inl.h</label>
        <link refid="erfinv-inl_8h_source"/>
        <childnode refid="37909" relation="include">
        </childnode>
      </node>
      <node id="37864">
        <label>incubator-mxnet/src/operator/linalg_impl.h</label>
        <link refid="linalg__impl_8h"/>
        <childnode refid="37865" relation="include">
        </childnode>
      </node>
      <node id="37631">
        <label>incubator-mxnet/src/operator/contrib/optimizer_op-inl.h</label>
        <link refid="contrib_2optimizer__op-inl_8h_source"/>
        <childnode refid="37632" relation="include">
        </childnode>
      </node>
      <node id="37925">
        <label>incubator-mxnet/R-package/src/base.h</label>
        <link refid="_r-package_2src_2base_8h_source"/>
        <childnode refid="37926" relation="include">
        </childnode>
        <childnode refid="37927" relation="include">
        </childnode>
        <childnode refid="37929" relation="include">
        </childnode>
        <childnode refid="37934" relation="include">
        </childnode>
        <childnode refid="37935" relation="include">
        </childnode>
        <childnode refid="37931" relation="include">
        </childnode>
        <childnode refid="37930" relation="include">
        </childnode>
        <childnode refid="37932" relation="include">
        </childnode>
        <childnode refid="37936" relation="include">
        </childnode>
        <childnode refid="37928" relation="include">
        </childnode>
        <childnode refid="37933" relation="include">
        </childnode>
        <childnode refid="37937" relation="include">
        </childnode>
      </node>
      <node id="37774">
        <label>incubator-mxnet/src/operator/l2_normalization.cc</label>
        <link refid="l2__normalization_8cc"/>
      </node>
      <node id="37512">
        <label>incubator-mxnet/src/operator/quantization/quantized_fully_connected.cc</label>
        <link refid="quantized__fully__connected_8cc"/>
      </node>
      <node id="37773">
        <label>incubator-mxnet/src/operator/l2_normalization-inl.h</label>
        <link refid="l2__normalization-inl_8h_source"/>
        <childnode refid="37774" relation="include">
        </childnode>
      </node>
      <node id="37847">
        <label>incubator-mxnet/src/engine/threaded_engine_perdevice.cc</label>
        <link refid="threaded__engine__perdevice_8cc"/>
      </node>
      <node id="37654">
        <label>incubator-mxnet/src/operator/tensor/amp_cast.cc</label>
        <link refid="amp__cast_8cc"/>
      </node>
      <node id="37478">
        <label>incubator-mxnet/src/operator/control_flow.cc</label>
        <link refid="control__flow_8cc_source"/>
      </node>
      <node id="37519">
        <label>incubator-mxnet/src/operator/nn/softmax-inl.h</label>
        <link refid="softmax-inl_8h"/>
        <childnode refid="37520" relation="include">
        </childnode>
        <childnode refid="37521" relation="include">
        </childnode>
        <childnode refid="37522" relation="include">
        </childnode>
      </node>
      <node id="37527">
        <label>incubator-mxnet/src/operator/quantization/dequantize.cc</label>
        <link refid="dequantize_8cc"/>
      </node>
      <node id="37861">
        <label>incubator-mxnet/src/storage/pooled_storage_manager.h</label>
        <link refid="pooled__storage__manager_8h"/>
        <childnode refid="37854" relation="include">
        </childnode>
      </node>
      <node id="37437">
        <label>incubator-mxnet/cpp-package/example/test_score.cpp</label>
        <link refid="test__score_8cpp_source"/>
      </node>
      <node id="37720">
        <label>incubator-mxnet/src/operator/image/resize-inl.h</label>
        <link refid="resize-inl_8h"/>
        <childnode refid="37650" relation="include">
        </childnode>
        <childnode refid="37495" relation="include">
        </childnode>
        <childnode refid="37659" relation="include">
        </childnode>
      </node>
      <node id="37729">
        <label>incubator-mxnet/src/operator/contrib/count_sketch.cc</label>
        <link refid="count__sketch_8cc"/>
      </node>
      <node id="37628">
        <label>incubator-mxnet/src/operator/contrib/index_copy-inl.h</label>
        <link refid="index__copy-inl_8h"/>
        <childnode refid="37629" relation="include">
        </childnode>
      </node>
      <node id="37728">
        <label>incubator-mxnet/src/operator/contrib/count_sketch-inl.h</label>
        <link refid="count__sketch-inl_8h"/>
        <childnode refid="37729" relation="include">
        </childnode>
      </node>
      <node id="37542">
        <label>incubator-mxnet/src/operator/tensor/broadcast_reduce_op_value.cc</label>
        <link refid="broadcast__reduce__op__value_8cc"/>
      </node>
      <node id="37598">
        <label>incubator-mxnet/tests/cpp/operator/slice_channel_perf.cc</label>
        <link refid="slice__channel__perf_8cc_source"/>
      </node>
      <node id="37662">
        <label>incubator-mxnet/src/operator/nn/batch_norm.cc</label>
        <link refid="batch__norm_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37525">
        <label>incubator-mxnet/src/operator/quantization/quantization_utils.h</label>
        <link refid="quantization__utils_8h_source"/>
        <childnode refid="37526" relation="include">
        </childnode>
        <childnode refid="37528" relation="include">
        </childnode>
        <childnode refid="37531" relation="include">
        </childnode>
        <childnode refid="37534" relation="include">
        </childnode>
        <childnode refid="37512" relation="include">
        </childnode>
        <childnode refid="37536" relation="include">
        </childnode>
      </node>
      <node id="37807">
        <label>incubator-mxnet/src/operator/rnn.cc</label>
        <link refid="rnn_8cc"/>
      </node>
      <node id="37609">
        <label>incubator-mxnet/src/operator/contrib/adaptive_avg_pooling.cc</label>
        <link refid="adaptive__avg__pooling_8cc"/>
      </node>
      <node id="37589">
        <label>incubator-mxnet/src/operator/tensor/ordering_op.cc</label>
        <link refid="ordering__op_8cc"/>
      </node>
      <node id="37673">
        <label>incubator-mxnet/src/operator/random/shuffle_op.cc</label>
        <link refid="shuffle__op_8cc"/>
      </node>
      <node id="37769">
        <label>incubator-mxnet/src/operator/identity_attach_KL_sparse_reg.cc</label>
        <link refid="identity__attach___k_l__sparse__reg_8cc"/>
      </node>
      <node id="37902">
        <label>incubator-mxnet/include/mxnet/rtc.h</label>
        <link refid="rtc_8h_source"/>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37718" relation="include">
        </childnode>
      </node>
      <node id="37423">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/executor.hpp</label>
        <link refid="executor_8hpp"/>
        <childnode refid="37424" relation="include">
        </childnode>
      </node>
      <node id="37647">
        <label>incubator-mxnet/src/operator/subgraph/common.h</label>
        <link refid="common_8h_source"/>
        <childnode refid="37473" relation="include">
        </childnode>
        <childnode refid="37648" relation="include">
        </childnode>
        <childnode refid="37649" relation="include">
        </childnode>
      </node>
      <node id="37865">
        <label>incubator-mxnet/src/operator/linalg.h</label>
        <link refid="linalg_8h"/>
        <childnode refid="37683" relation="include">
        </childnode>
        <childnode refid="37753" relation="include">
        </childnode>
        <childnode refid="37759" relation="include">
        </childnode>
        <childnode refid="37766" relation="include">
        </childnode>
        <childnode refid="37686" relation="include">
        </childnode>
        <childnode refid="37787" relation="include">
        </childnode>
        <childnode refid="37509" relation="include">
        </childnode>
        <childnode refid="37808" relation="include">
        </childnode>
        <childnode refid="37866" relation="include">
        </childnode>
      </node>
      <node id="37558">
        <label>incubator-mxnet/src/operator/tensor/elemwise_binary_broadcast_op_extended.cc</label>
        <link refid="elemwise__binary__broadcast__op__extended_8cc"/>
      </node>
      <node id="37841">
        <label>incubator-mxnet/src/io/iter_image_recordio.cc</label>
        <link refid="iter__image__recordio_8cc_source"/>
      </node>
      <node id="37455">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/optimizer.h</label>
        <link refid="optimizer_8h"/>
        <childnode refid="37423" relation="include">
        </childnode>
        <childnode refid="37452" relation="include">
        </childnode>
        <childnode refid="37456" relation="include">
        </childnode>
      </node>
      <node id="37765">
        <label>incubator-mxnet/src/operator/custom/ndarray_op.cc</label>
        <link refid="ndarray__op_8cc"/>
      </node>
      <node id="37646">
        <label>incubator-mxnet/src/operator/tensor/ordering_op-inl.h</label>
        <link refid="ordering__op-inl_8h"/>
        <childnode refid="37589" relation="include">
        </childnode>
      </node>
      <node id="37870">
        <label>incubator-mxnet/src/c_api/c_api_error.cc</label>
        <link refid="c__api__error_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37604">
        <label>incubator-mxnet/src/kvstore/gradient_compression.cc</label>
        <link refid="gradient__compression_8cc"/>
      </node>
      <node id="37526">
        <label>incubator-mxnet/src/operator/quantization/dequantize-inl.h</label>
        <link refid="dequantize-inl_8h"/>
        <childnode refid="37527" relation="include">
        </childnode>
      </node>
      <node id="37906">
        <label>incubator-mxnet/tests/cpp/operator/tune/operator_tune_test.cc</label>
        <link refid="operator__tune__test_8cc_source"/>
      </node>
      <node id="37718">
        <label>incubator-mxnet/src/common/rtc.cc</label>
        <link refid="rtc_8cc_source"/>
      </node>
      <node id="37687">
        <label>incubator-mxnet/src/operator/nn/cudnn/cudnn_algoreg-inl.h</label>
        <link refid="cudnn__algoreg-inl_8h"/>
        <childnode refid="37688" relation="include">
        </childnode>
        <childnode refid="37689" relation="include">
        </childnode>
        <childnode refid="37690" relation="include">
        </childnode>
      </node>
      <node id="37417">
        <label>incubator-mxnet/include/mxnet/c_api.h</label>
        <link refid="c__api_8h"/>
        <childnode refid="37418" relation="include">
        </childnode>
        <childnode refid="37419" relation="include">
        </childnode>
        <childnode refid="37420" relation="include">
        </childnode>
        <childnode refid="37421" relation="include">
        </childnode>
        <childnode refid="37463" relation="include">
        </childnode>
        <childnode refid="37923" relation="include">
        </childnode>
        <childnode refid="37467" relation="include">
        </childnode>
        <childnode refid="37834" relation="include">
        </childnode>
        <childnode refid="37924" relation="include">
        </childnode>
        <childnode refid="37868" relation="include">
        </childnode>
        <childnode refid="37925" relation="include">
        </childnode>
        <childnode refid="37927" relation="include">
        </childnode>
        <childnode refid="37938" relation="include">
        </childnode>
        <childnode refid="37929" relation="include">
        </childnode>
        <childnode refid="37930" relation="include">
        </childnode>
        <childnode refid="37936" relation="include">
        </childnode>
        <childnode refid="37939" relation="include">
        </childnode>
        <childnode refid="37890" relation="include">
        </childnode>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37710" relation="include">
        </childnode>
        <childnode refid="37468" relation="include">
        </childnode>
        <childnode refid="37711" relation="include">
        </childnode>
        <childnode refid="37471" relation="include">
        </childnode>
        <childnode refid="37717" relation="include">
        </childnode>
        <childnode refid="37563" relation="include">
        </childnode>
        <childnode refid="37892" relation="include">
        </childnode>
        <childnode refid="37762" relation="include">
        </childnode>
        <childnode refid="37764" relation="include">
        </childnode>
        <childnode refid="37595" relation="include">
        </childnode>
      </node>
      <node id="37656">
        <label>incubator-mxnet/src/operator/contrib/bounding_box.cc</label>
        <link refid="bounding__box_8cc"/>
      </node>
      <node id="37814">
        <label>incubator-mxnet/src/operator/softmax_output.cc</label>
        <link refid="softmax__output_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37853">
        <label>incubator-mxnet/src/profiler/storage_profiler.h</label>
        <link refid="storage__profiler_8h_source"/>
        <childnode refid="37854" relation="include">
        </childnode>
      </node>
      <node id="37719">
        <label>incubator-mxnet/src/executor/infer_graph_attr_pass.cc</label>
        <link refid="infer__graph__attr__pass_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37779">
        <label>incubator-mxnet/src/operator/nn/batch_norm-inl.h</label>
        <link refid="batch__norm-inl_8h"/>
        <childnode refid="37662" relation="include">
        </childnode>
        <childnode refid="37780" relation="include">
        </childnode>
        <childnode refid="37781" relation="include">
        </childnode>
      </node>
      <node id="37547">
        <label>incubator-mxnet/src/operator/tensor/square_sum-inl.h</label>
        <link refid="square__sum-inl_8h"/>
        <childnode refid="37548" relation="include">
        </childnode>
      </node>
      <node id="37669">
        <label>incubator-mxnet/src/operator/random/multisample_op.h</label>
        <link refid="multisample__op_8h"/>
        <childnode refid="37670" relation="include">
        </childnode>
      </node>
      <node id="37753">
        <label>incubator-mxnet/src/operator/convolution_v1-inl.h</label>
        <link refid="convolution__v1-inl_8h"/>
        <childnode refid="37754" relation="include">
        </childnode>
      </node>
      <node id="37550">
        <label>incubator-mxnet/src/operator/leaky_relu-inl.h</label>
        <link refid="leaky__relu-inl_8h"/>
        <childnode refid="37551" relation="include">
        </childnode>
      </node>
      <node id="37666">
        <label>incubator-mxnet/src/operator/nn/cudnn/cudnn_batch_norm.cc</label>
        <link refid="cudnn__batch__norm_8cc"/>
      </node>
      <node id="37591">
        <label>incubator-mxnet/src/ndarray/ndarray_function.h</label>
        <link refid="ndarray__function_8h_source"/>
        <childnode refid="37560" relation="include">
        </childnode>
        <childnode refid="37592" relation="include">
        </childnode>
        <childnode refid="37602" relation="include">
        </childnode>
        <childnode refid="37606" relation="include">
        </childnode>
        <childnode refid="37603" relation="include">
        </childnode>
        <childnode refid="37494" relation="include">
        </childnode>
        <childnode refid="37607" relation="include">
        </childnode>
        <childnode refid="37565" relation="include">
        </childnode>
        <childnode refid="37608" relation="include">
        </childnode>
        <childnode refid="37610" relation="include">
        </childnode>
        <childnode refid="37612" relation="include">
        </childnode>
        <childnode refid="37613" relation="include">
        </childnode>
        <childnode refid="37596" relation="include">
        </childnode>
      </node>
      <node id="37635">
        <label>incubator-mxnet/src/operator/contrib/roi_align-inl.h</label>
        <link refid="roi__align-inl_8h"/>
        <childnode refid="37636" relation="include">
        </childnode>
      </node>
      <node id="37428">
        <label>incubator-mxnet/cpp-package/example/googlenet.cpp</label>
        <link refid="googlenet_8cpp_source"/>
      </node>
      <node id="37934">
        <label>incubator-mxnet/R-package/src/export.cc</label>
        <link refid="export_8cc"/>
      </node>
      <node id="37871">
        <label>incubator-mxnet/src/c_api/c_api_test.cc</label>
        <link refid="c__api__test_8cc"/>
      </node>
      <node id="37494">
        <label>incubator-mxnet/src/ndarray/ndarray.cc</label>
        <link refid="src_2ndarray_2ndarray_8cc_source"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37873">
        <label>incubator-mxnet/src/operator/subgraph/build_subgraph.cc</label>
        <link refid="build__subgraph_8cc"/>
      </node>
      <node id="37755">
        <label>incubator-mxnet/src/operator/correlation-inl.h</label>
        <link refid="correlation-inl_8h"/>
        <childnode refid="37756" relation="include">
        </childnode>
      </node>
      <node id="37530">
        <label>incubator-mxnet/src/operator/quantization/requantize.cc</label>
        <link refid="requantize_8cc"/>
      </node>
      <node id="37691">
        <label>incubator-mxnet/src/operator/nn/depthwise_convolution-inl.h</label>
        <link refid="depthwise__convolution-inl_8h"/>
      </node>
      <node id="37808">
        <label>incubator-mxnet/src/operator/rnn_impl.h</label>
        <link refid="rnn__impl_8h"/>
        <childnode refid="37806" relation="include">
        </childnode>
      </node>
      <node id="37732">
        <label>incubator-mxnet/src/operator/contrib/fft-inl.h</label>
        <link refid="fft-inl_8h"/>
        <childnode refid="37733" relation="include">
        </childnode>
      </node>
      <node id="37433">
        <label>incubator-mxnet/cpp-package/example/mlp_cpu.cpp</label>
        <link refid="mlp__cpu_8cpp_source"/>
      </node>
      <node id="37787">
        <label>incubator-mxnet/src/operator/nn/deconvolution-inl.h</label>
        <link refid="deconvolution-inl_8h"/>
        <childnode refid="37687" relation="include">
        </childnode>
        <childnode refid="37690" relation="include">
        </childnode>
        <childnode refid="37788" relation="include">
        </childnode>
        <childnode refid="37789" relation="include">
        </childnode>
        <childnode refid="37790" relation="include">
        </childnode>
      </node>
      <node id="37712">
        <label>incubator-mxnet/src/initialize.cc</label>
        <link refid="initialize_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37420">
        <label>incubator-mxnet/cpp-package/example/test_ndarray_copy.cpp</label>
        <link refid="test__ndarray__copy_8cpp_source"/>
      </node>
      <node id="37869">
        <label>incubator-mxnet/plugin/opencv/cv_api.cc</label>
        <link refid="cv__api_8cc_source"/>
      </node>
      <node id="37703">
        <label>incubator-mxnet/src/operator/operator_common.h</label>
        <link refid="operator__common_8h"/>
        <childnode refid="37699" relation="include">
        </childnode>
        <childnode refid="37701" relation="include">
        </childnode>
        <childnode refid="37704" relation="include">
        </childnode>
        <childnode refid="37706" relation="include">
        </childnode>
        <childnode refid="37708" relation="include">
        </childnode>
        <childnode refid="37710" relation="include">
        </childnode>
        <childnode refid="37504" relation="include">
        </childnode>
        <childnode refid="37713" relation="include">
        </childnode>
        <childnode refid="37716" relation="include">
        </childnode>
        <childnode refid="37549" relation="include">
        </childnode>
        <childnode refid="37681" relation="include">
        </childnode>
        <childnode refid="37711" relation="include">
        </childnode>
        <childnode refid="37470" relation="include">
        </childnode>
        <childnode refid="37717" relation="include">
        </childnode>
        <childnode refid="37488" relation="include">
        </childnode>
        <childnode refid="37718" relation="include">
        </childnode>
        <childnode refid="37487" relation="include">
        </childnode>
        <childnode refid="37719" relation="include">
        </childnode>
        <childnode refid="37473" relation="include">
        </childnode>
        <childnode refid="37475" relation="include">
        </childnode>
        <childnode refid="37720" relation="include">
        </childnode>
        <childnode refid="37651" relation="include">
        </childnode>
        <childnode refid="37652" relation="include">
        </childnode>
        <childnode refid="37721" relation="include">
        </childnode>
        <childnode refid="37722" relation="include">
        </childnode>
        <childnode refid="37724" relation="include">
        </childnode>
        <childnode refid="37655" relation="include">
        </childnode>
        <childnode refid="37617" relation="include">
        </childnode>
        <childnode refid="37608" relation="include">
        </childnode>
        <childnode refid="37620" relation="include">
        </childnode>
        <childnode refid="37610" relation="include">
        </childnode>
        <childnode refid="37622" relation="include">
        </childnode>
        <childnode refid="37727" relation="include">
        </childnode>
        <childnode refid="37682" relation="include">
        </childnode>
        <childnode refid="37728" relation="include">
        </childnode>
        <childnode refid="37683" relation="include">
        </childnode>
        <childnode refid="37730" relation="include">
        </childnode>
        <childnode refid="37624" relation="include">
        </childnode>
        <childnode refid="37732" relation="include">
        </childnode>
        <childnode refid="37734" relation="include">
        </childnode>
        <childnode refid="37735" relation="include">
        </childnode>
        <childnode refid="37612" relation="include">
        </childnode>
        <childnode refid="37737" relation="include">
        </childnode>
        <childnode refid="37739" relation="include">
        </childnode>
        <childnode refid="37741" relation="include">
        </childnode>
        <childnode refid="37743" relation="include">
        </childnode>
        <childnode refid="37745" relation="include">
        </childnode>
        <childnode refid="37631" relation="include">
        </childnode>
        <childnode refid="37747" relation="include">
        </childnode>
        <childnode refid="37749" relation="include">
        </childnode>
        <childnode refid="37633" relation="include">
        </childnode>
        <childnode refid="37751" relation="include">
        </childnode>
        <childnode refid="37478" relation="include">
        </childnode>
        <childnode refid="37753" relation="include">
        </childnode>
        <childnode refid="37755" relation="include">
        </childnode>
        <childnode refid="37757" relation="include">
        </childnode>
        <childnode refid="37759" relation="include">
        </childnode>
        <childnode refid="37657" relation="include">
        </childnode>
        <childnode refid="37762" relation="include">
        </childnode>
        <childnode refid="37764" relation="include">
        </childnode>
        <childnode refid="37766" relation="include">
        </childnode>
        <childnode refid="37768" relation="include">
        </childnode>
        <childnode refid="37495" relation="include">
        </childnode>
        <childnode refid="37496" relation="include">
        </childnode>
        <childnode refid="37770" relation="include">
        </childnode>
        <childnode refid="37658" relation="include">
        </childnode>
        <childnode refid="37659" relation="include">
        </childnode>
        <childnode refid="37771" relation="include">
        </childnode>
        <childnode refid="37773" relation="include">
        </childnode>
        <childnode refid="37550" relation="include">
        </childnode>
        <childnode refid="37775" relation="include">
        </childnode>
        <childnode refid="37777" relation="include">
        </childnode>
        <childnode refid="37582" relation="include">
        </childnode>
        <childnode refid="37779" relation="include">
        </childnode>
        <childnode refid="37662" relation="include">
        </childnode>
        <childnode refid="37506" relation="include">
        </childnode>
        <childnode refid="37686" relation="include">
        </childnode>
        <childnode refid="37663" relation="include">
        </childnode>
        <childnode refid="37782" relation="include">
        </childnode>
        <childnode refid="37664" relation="include">
        </childnode>
        <childnode refid="37787" relation="include">
        </childnode>
        <childnode refid="37791" relation="include">
        </childnode>
        <childnode refid="37795" relation="include">
        </childnode>
        <childnode refid="37788" relation="include">
        </childnode>
        <childnode refid="37553" relation="include">
        </childnode>
        <childnode refid="37509" relation="include">
        </childnode>
        <childnode refid="37514" relation="include">
        </childnode>
        <childnode refid="37517" relation="include">
        </childnode>
        <childnode refid="37797" relation="include">
        </childnode>
        <childnode refid="37799" relation="include">
        </childnode>
        <childnode refid="37800" relation="include">
        </childnode>
        <childnode refid="37519" relation="include">
        </childnode>
        <childnode refid="37801" relation="include">
        </childnode>
        <childnode refid="37522" relation="include">
        </childnode>
        <childnode refid="37789" relation="include">
        </childnode>
        <childnode refid="37693" relation="include">
        </childnode>
        <childnode refid="37802" relation="include">
        </childnode>
        <childnode refid="37804" relation="include">
        </childnode>
        <childnode refid="37669" relation="include">
        </childnode>
        <childnode refid="37537" relation="include">
        </childnode>
        <childnode refid="37671" relation="include">
        </childnode>
        <childnode refid="37694" relation="include">
        </childnode>
        <childnode refid="37695" relation="include">
        </childnode>
        <childnode refid="37806" relation="include">
        </childnode>
        <childnode refid="37808" relation="include">
        </childnode>
        <childnode refid="37809" relation="include">
        </childnode>
        <childnode refid="37783" relation="include">
        </childnode>
        <childnode refid="37811" relation="include">
        </childnode>
        <childnode refid="37785" relation="include">
        </childnode>
        <childnode refid="37714" relation="include">
        </childnode>
        <childnode refid="37813" relation="include">
        </childnode>
        <childnode refid="37479" relation="include">
        </childnode>
        <childnode refid="37815" relation="include">
        </childnode>
        <childnode refid="37817" relation="include">
        </childnode>
        <childnode refid="37642" relation="include">
        </childnode>
        <childnode refid="37545" relation="include">
        </childnode>
        <childnode refid="37675" relation="include">
        </childnode>
        <childnode refid="37644" relation="include">
        </childnode>
        <childnode refid="37677" relation="include">
        </childnode>
        <childnode refid="37679" relation="include">
        </childnode>
      </node>
      <node id="37858">
        <label>incubator-mxnet/src/io/iter_mnist.cc</label>
        <link refid="iter__mnist_8cc"/>
      </node>
      <node id="37645">
        <label>incubator-mxnet/src/operator/tensor/indexing_op.cc</label>
        <link refid="indexing__op_8cc"/>
      </node>
      <node id="37523">
        <label>incubator-mxnet/src/operator/numpy/np_broadcast_reduce_op.h</label>
        <link refid="np__broadcast__reduce__op_8h_source"/>
        <childnode refid="37524" relation="include">
        </childnode>
      </node>
      <node id="37458">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/contrib.h</label>
        <link refid="contrib_8h"/>
        <childnode refid="37424" relation="include">
        </childnode>
      </node>
      <node id="37860">
        <label>incubator-mxnet/src/resource.cc</label>
        <link refid="resource_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37707">
        <label>incubator-mxnet/plugin/torch/torch_module.cc</label>
        <link refid="torch__module_8cc_source"/>
      </node>
      <node id="37702">
        <label>incubator-mxnet/plugin/caffe/caffe_op.cc</label>
        <link refid="caffe__op_8cc"/>
      </node>
      <node id="37827">
        <label>incubator-mxnet/src/operator/nn/im2col.h</label>
        <link refid="im2col_8h"/>
        <childnode refid="37683" relation="include">
        </childnode>
        <childnode refid="37686" relation="include">
        </childnode>
      </node>
      <node id="37442">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/op_suppl.h</label>
        <link refid="op__suppl_8h"/>
        <childnode refid="37424" relation="include">
        </childnode>
        <childnode refid="37443" relation="include">
        </childnode>
      </node>
      <node id="37493">
        <label>incubator-mxnet/src/c_api/c_api.cc</label>
        <link refid="c__api_8cc"/>
      </node>
      <node id="37926">
        <label>incubator-mxnet/R-package/src/executor.cc</label>
        <link refid="executor_8cc_source"/>
      </node>
      <node id="37884">
        <label>incubator-mxnet/src/io/iter_sparse.h</label>
        <link refid="iter__sparse_8h"/>
        <childnode refid="37878" relation="include">
        </childnode>
        <childnode refid="37881" relation="include">
        </childnode>
      </node>
      <node id="37585">
        <label>incubator-mxnet/src/operator/quantization/quantized_elemwise_add-inl.h</label>
        <link refid="quantized__elemwise__add-inl_8h"/>
        <childnode refid="37586" relation="include">
        </childnode>
      </node>
      <node id="37683">
        <label>incubator-mxnet/src/operator/contrib/deformable_convolution-inl.h</label>
        <link refid="deformable__convolution-inl_8h"/>
        <childnode refid="37684" relation="include">
        </childnode>
      </node>
      <node id="37465">
        <label>incubator-mxnet/include/mxnet/engine.h</label>
        <link refid="engine_8h"/>
        <childnode refid="37466" relation="include">
        </childnode>
        <childnode refid="37893" relation="include">
        </childnode>
        <childnode refid="37489" relation="include">
        </childnode>
        <childnode refid="37837" relation="include">
        </childnode>
        <childnode refid="37862" relation="include">
        </childnode>
        <childnode refid="37894" relation="include">
        </childnode>
        <childnode refid="37895" relation="include">
        </childnode>
        <childnode refid="37712" relation="include">
        </childnode>
        <childnode refid="37564" relation="include">
        </childnode>
        <childnode refid="37892" relation="include">
        </childnode>
        <childnode refid="37693" relation="include">
        </childnode>
        <childnode refid="37860" relation="include">
        </childnode>
        <childnode refid="37595" relation="include">
        </childnode>
        <childnode refid="37600" relation="include">
        </childnode>
      </node>
      <node id="37469">
        <label>incubator-mxnet/src/executor/graph_executor.h</label>
        <link refid="graph__executor_8h"/>
        <childnode refid="37468" relation="include">
        </childnode>
        <childnode refid="37470" relation="include">
        </childnode>
        <childnode refid="37487" relation="include">
        </childnode>
      </node>
      <node id="37684">
        <label>incubator-mxnet/src/operator/contrib/deformable_convolution.cc</label>
        <link refid="deformable__convolution_8cc"/>
      </node>
      <node id="37579">
        <label>incubator-mxnet/src/operator/contrib/gradient_multiplier_op.cc</label>
        <link refid="gradient__multiplier__op_8cc"/>
      </node>
      <node id="37565">
        <label>incubator-mxnet/src/ndarray/ndarray_function.cc</label>
        <link refid="ndarray__function_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37495">
        <label>incubator-mxnet/src/operator/image/crop-inl.h</label>
        <link refid="image_2crop-inl_8h_source"/>
        <childnode refid="37496" relation="include">
        </childnode>
      </node>
      <node id="37916">
        <label>incubator-mxnet/src/nnvm/gradient.cc</label>
        <link refid="gradient_8cc_source"/>
      </node>
      <node id="37854">
        <label>incubator-mxnet/src/storage/storage.cc</label>
        <link refid="storage_8cc_source"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37778">
        <label>incubator-mxnet/src/operator/nn/cudnn/cudnn_activation-inl.h</label>
        <link refid="cudnn__activation-inl_8h"/>
      </node>
      <node id="37516">
        <label>incubator-mxnet/src/operator/nn/moments.cc</label>
        <link refid="moments_8cc"/>
      </node>
      <node id="37596">
        <label>incubator-mxnet/tests/cpp/include/test_op.h</label>
        <link refid="test__op_8h"/>
        <childnode refid="37480" relation="include">
        </childnode>
        <childnode refid="37597" relation="include">
        </childnode>
        <childnode refid="37599" relation="include">
        </childnode>
        <childnode refid="37600" relation="include">
        </childnode>
        <childnode refid="37481" relation="include">
        </childnode>
      </node>
      <node id="37556">
        <label>incubator-mxnet/src/operator/operator_tune.cc</label>
        <link refid="operator__tune_8cc_source"/>
      </node>
      <node id="37422">
        <label>incubator-mxnet/cpp-package/include/mxnet-cpp/executor.h</label>
        <link refid="cpp-package_2include_2mxnet-cpp_2executor_8h_source"/>
        <childnode refid="37423" relation="include">
        </childnode>
        <childnode refid="37444" relation="include">
        </childnode>
      </node>
      <node id="37715">
        <label>incubator-mxnet/src/operator/slice_channel.cc</label>
        <link refid="slice__channel_8cc"/>
      </node>
      <node id="37436">
        <label>incubator-mxnet/cpp-package/example/resnet.cpp</label>
        <link refid="resnet_8cpp_source"/>
      </node>
      <node id="37479">
        <label>incubator-mxnet/src/operator/subgraph_op_common.cc</label>
        <link refid="subgraph__op__common_8cc_source"/>
      </node>
      <node id="37439">
        <label>incubator-mxnet/cpp-package/example/inference/sentiment_analysis_rnn.cpp</label>
        <link refid="sentiment__analysis__rnn_8cpp_source"/>
      </node>
      <node id="37886">
        <label>incubator-mxnet/include/mxnet/kvstore.h</label>
        <link refid="include_2mxnet_2kvstore_8h_source"/>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37850" relation="include">
        </childnode>
        <childnode refid="37603" relation="include">
        </childnode>
        <childnode refid="37605" relation="include">
        </childnode>
        <childnode refid="37563" relation="include">
        </childnode>
        <childnode refid="37887" relation="include">
        </childnode>
      </node>
      <node id="37734">
        <label>incubator-mxnet/src/operator/contrib/hawkes_ll-inl.h</label>
        <link refid="hawkes__ll-inl_8h"/>
        <childnode refid="37625" relation="include">
        </childnode>
      </node>
      <node id="37938">
        <label>incubator-mxnet/R-package/src/symbol.h</label>
        <link refid="_r-package_2src_2symbol_8h_source"/>
        <childnode refid="37927" relation="include">
        </childnode>
        <childnode refid="37926" relation="include">
        </childnode>
        <childnode refid="37928" relation="include">
        </childnode>
        <childnode refid="37937" relation="include">
        </childnode>
      </node>
      <node id="37659">
        <label>incubator-mxnet/src/operator/image/resize.cc</label>
        <link refid="resize_8cc"/>
      </node>
      <node id="37785">
        <label>incubator-mxnet/src/operator/sequence_reverse-inl.h</label>
        <link refid="sequence__reverse-inl_8h_source"/>
        <childnode refid="37786" relation="include">
        </childnode>
      </node>
      <node id="37636">
        <label>incubator-mxnet/src/operator/contrib/roi_align.cc</label>
        <link refid="roi__align_8cc"/>
      </node>
      <node id="37857">
        <label>incubator-mxnet/src/io/iter_image_recordio_2.cc</label>
        <link refid="iter__image__recordio__2_8cc"/>
      </node>
      <node id="37733">
        <label>incubator-mxnet/src/operator/contrib/fft.cc</label>
        <link refid="fft_8cc_source"/>
      </node>
      <node id="37490">
        <label>incubator-mxnet/include/mxnet/operator.h</label>
        <link refid="include_2mxnet_2operator_8h_source"/>
        <childnode refid="37467" relation="include">
        </childnode>
        <childnode refid="37491" relation="include">
        </childnode>
        <childnode refid="37696" relation="include">
        </childnode>
        <childnode refid="37699" relation="include">
        </childnode>
        <childnode refid="37703" relation="include">
        </childnode>
        <childnode refid="37701" relation="include">
        </childnode>
        <childnode refid="37704" relation="include">
        </childnode>
        <childnode refid="37706" relation="include">
        </childnode>
        <childnode refid="37708" relation="include">
        </childnode>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37710" relation="include">
        </childnode>
        <childnode refid="37504" relation="include">
        </childnode>
        <childnode refid="37713" relation="include">
        </childnode>
        <childnode refid="37469" relation="include">
        </childnode>
        <childnode refid="37819" relation="include">
        </childnode>
        <childnode refid="37471" relation="include">
        </childnode>
        <childnode refid="37470" relation="include">
        </childnode>
        <childnode refid="37821" relation="include">
        </childnode>
        <childnode refid="37823" relation="include">
        </childnode>
        <childnode refid="37650" relation="include">
        </childnode>
        <childnode refid="37824" relation="include">
        </childnode>
        <childnode refid="37825" relation="include">
        </childnode>
        <childnode refid="37722" relation="include">
        </childnode>
        <childnode refid="37724" relation="include">
        </childnode>
        <childnode refid="37655" relation="include">
        </childnode>
        <childnode refid="37617" relation="include">
        </childnode>
        <childnode refid="37826" relation="include">
        </childnode>
        <childnode refid="37608" relation="include">
        </childnode>
        <childnode refid="37620" relation="include">
        </childnode>
        <childnode refid="37610" relation="include">
        </childnode>
        <childnode refid="37622" relation="include">
        </childnode>
        <childnode refid="37728" relation="include">
        </childnode>
        <childnode refid="37683" relation="include">
        </childnode>
        <childnode refid="37827" relation="include">
        </childnode>
        <childnode refid="37828" relation="include">
        </childnode>
        <childnode refid="37730" relation="include">
        </childnode>
        <childnode refid="37624" relation="include">
        </childnode>
        <childnode refid="37476" relation="include">
        </childnode>
        <childnode refid="37734" relation="include">
        </childnode>
        <childnode refid="37739" relation="include">
        </childnode>
        <childnode refid="37741" relation="include">
        </childnode>
        <childnode refid="37743" relation="include">
        </childnode>
        <childnode refid="37745" relation="include">
        </childnode>
        <childnode refid="37631" relation="include">
        </childnode>
        <childnode refid="37747" relation="include">
        </childnode>
        <childnode refid="37749" relation="include">
        </childnode>
        <childnode refid="37751" relation="include">
        </childnode>
        <childnode refid="37478" relation="include">
        </childnode>
        <childnode refid="37753" relation="include">
        </childnode>
        <childnode refid="37755" relation="include">
        </childnode>
        <childnode refid="37757" relation="include">
        </childnode>
        <childnode refid="37829" relation="include">
        </childnode>
        <childnode refid="37759" relation="include">
        </childnode>
        <childnode refid="37762" relation="include">
        </childnode>
        <childnode refid="37764" relation="include">
        </childnode>
        <childnode refid="37766" relation="include">
        </childnode>
        <childnode refid="37768" relation="include">
        </childnode>
        <childnode refid="37771" relation="include">
        </childnode>
        <childnode refid="37773" relation="include">
        </childnode>
        <childnode refid="37550" relation="include">
        </childnode>
        <childnode refid="37775" relation="include">
        </childnode>
        <childnode refid="37777" relation="include">
        </childnode>
        <childnode refid="37779" relation="include">
        </childnode>
        <childnode refid="37506" relation="include">
        </childnode>
        <childnode refid="37686" relation="include">
        </childnode>
        <childnode refid="37782" relation="include">
        </childnode>
        <childnode refid="37787" relation="include">
        </childnode>
        <childnode refid="37791" relation="include">
        </childnode>
        <childnode refid="37830" relation="include">
        </childnode>
        <childnode refid="37795" relation="include">
        </childnode>
        <childnode refid="37552" relation="include">
        </childnode>
        <childnode refid="37509" relation="include">
        </childnode>
        <childnode refid="37514" relation="include">
        </childnode>
        <childnode refid="37517" relation="include">
        </childnode>
        <childnode refid="37797" relation="include">
        </childnode>
        <childnode refid="37800" relation="include">
        </childnode>
        <childnode refid="37789" relation="include">
        </childnode>
        <childnode refid="37831" relation="include">
        </childnode>
        <childnode refid="37511" relation="include">
        </childnode>
        <childnode refid="37793" relation="include">
        </childnode>
        <childnode refid="37832" relation="include">
        </childnode>
        <childnode refid="37693" relation="include">
        </childnode>
        <childnode refid="37802" relation="include">
        </childnode>
        <childnode refid="37804" relation="include">
        </childnode>
        <childnode refid="37806" relation="include">
        </childnode>
        <childnode refid="37808" relation="include">
        </childnode>
        <childnode refid="37809" relation="include">
        </childnode>
        <childnode refid="37783" relation="include">
        </childnode>
        <childnode refid="37811" relation="include">
        </childnode>
        <childnode refid="37785" relation="include">
        </childnode>
        <childnode refid="37714" relation="include">
        </childnode>
        <childnode refid="37813" relation="include">
        </childnode>
        <childnode refid="37815" relation="include">
        </childnode>
        <childnode refid="37817" relation="include">
        </childnode>
        <childnode refid="37675" relation="include">
        </childnode>
        <childnode refid="37644" relation="include">
        </childnode>
        <childnode refid="37597" relation="include">
        </childnode>
      </node>
      <node id="37693">
        <label>incubator-mxnet/src/operator/operator_util.cc</label>
        <link refid="operator__util_8cc"/>
        <childnode refid="37472" relation="include">
        </childnode>
      </node>
      <node id="37564">
        <label>incubator-mxnet/src/kvstore/kvstore_dist.h</label>
        <link refid="kvstore__dist_8h"/>
      </node>
      <node id="37845">
        <label>incubator-mxnet/src/engine/threaded_engine.h</label>
        <link refid="threaded__engine_8h"/>
        <childnode refid="37846" relation="include">
        </childnode>
        <childnode refid="37847" relation="include">
        </childnode>
        <childnode refid="37848" relation="include">
        </childnode>
      </node>
      <node id="37839">
        <label>incubator-mxnet/plugin/sframe/iter_sframe.cc</label>
        <link refid="iter__sframe_8cc_source"/>
      </node>
      <node id="37520">
        <label>incubator-mxnet/src/operator/nn/mkldnn/mkldnn_copy.cc</label>
        <link refid="mkldnn__copy_8cc_source"/>
      </node>
      <node id="37872">
        <label>incubator-mxnet/src/operator/contrib/amp_graph_pass.cc</label>
        <link refid="amp__graph__pass_8cc"/>
      </node>
      <node id="37762">
        <label>incubator-mxnet/src/operator/custom/native_op-inl.h</label>
        <link refid="native__op-inl_8h"/>
        <childnode refid="37763" relation="include">
        </childnode>
      </node>
      <node id="37710">
        <label>incubator-mxnet/src/operator/custom/custom-inl.h</label>
        <link refid="custom-inl_8h_source"/>
        <childnode refid="37493" relation="include">
        </childnode>
        <childnode refid="37711" relation="include">
        </childnode>
        <childnode refid="37712" relation="include">
        </childnode>
        <childnode refid="37657" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_native_op_info" prot="public">NativeOpInfo</innerclass>
    <innerclass refid="struct_n_d_array_op_info" prot="public">NDArrayOpInfo</innerclass>
    <innerclass refid="struct_m_x_callback_list" prot="public">MXCallbackList</innerclass>
    <innerclass refid="struct_lib_feature" prot="public">LibFeature</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="c__api_8h_1a2380be5ab258c3657553d0cef62936fe" prot="public" static="no">
        <name>DEFAULT</name>
        <param><defname>x</defname></param>
        <briefdescription>
<para>Inhibit C++ name-mangling for MXNet functions. </para>
        </briefdescription>
        <detaileddescription>
<para>Keep the default value in C++ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="37" column="10" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="c__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" prot="public" static="no">
        <name>MXNET_DLL</name>
        <briefdescription>
<para>MXNET_DLL prefix for windows. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="54" column="10" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="c__api_8h_1aa2395b69772d66cb5c6c4cbe47749792" prot="public" static="no" strong="no">
        <type></type>
        <name>CustomOpCallbacks</name>
        <enumvalue id="c__api_8h_1aa2395b69772d66cb5c6c4cbe47749792a2d5d86c1a9bac7de4ceb1c641a4dce4a" prot="public">
          <name>kCustomOpDelete</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__api_8h_1aa2395b69772d66cb5c6c4cbe47749792a3189c8e5988867480e3ee81e262bba4e" prot="public">
          <name>kCustomOpForward</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__api_8h_1aa2395b69772d66cb5c6c4cbe47749792afe6891ef7e38df52ac25db00a2ef73c6" prot="public">
          <name>kCustomOpBackward</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="161" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="enum" id="c__api_8h_1a62d6b72cc6b3d920797c32ea8732cbba" prot="public" static="no" strong="no">
        <type></type>
        <name>CustomOpPropCallbacks</name>
        <enumvalue id="c__api_8h_1a62d6b72cc6b3d920797c32ea8732cbbaa16e932f1ac19d0846d5ec6d2077be6aa" prot="public">
          <name>kCustomOpPropDelete</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__api_8h_1a62d6b72cc6b3d920797c32ea8732cbbaab3c71c386f99a193c2b5d1ad3b306712" prot="public">
          <name>kCustomOpPropListArguments</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__api_8h_1a62d6b72cc6b3d920797c32ea8732cbbaa0a32388e902d5d81a88f62f3eabf56c3" prot="public">
          <name>kCustomOpPropListOutputs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__api_8h_1a62d6b72cc6b3d920797c32ea8732cbbaaabeb765165b4748e68c7f196bf8a1686" prot="public">
          <name>kCustomOpPropListAuxiliaryStates</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__api_8h_1a62d6b72cc6b3d920797c32ea8732cbbaaa23caa8f573176ff6985b550df9b2be2" prot="public">
          <name>kCustomOpPropInferShape</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__api_8h_1a62d6b72cc6b3d920797c32ea8732cbbaa3f2e3562346ac66f3af912db28cafd06" prot="public">
          <name>kCustomOpPropDeclareBackwardDependency</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__api_8h_1a62d6b72cc6b3d920797c32ea8732cbbaac97963c158fddf25e10fddd4d9ae7619" prot="public">
          <name>kCustomOpPropCreateOperator</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__api_8h_1a62d6b72cc6b3d920797c32ea8732cbbaa86fbe407e39ef10e916cd8872e28334d" prot="public">
          <name>kCustomOpPropInferType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__api_8h_1a62d6b72cc6b3d920797c32ea8732cbbaab0ba78a161b486d25c59bb459287d7d7" prot="public">
          <name>kCustomOpPropInferStorageType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__api_8h_1a62d6b72cc6b3d920797c32ea8732cbbaa88d6d6c06076db4699b743321ee13eb3" prot="public">
          <name>kCustomOpPropBackwardInferStorageType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="167" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="167" bodyend="178"/>
      </memberdef>
      <memberdef kind="enum" id="c__api_8h_1a717cd8414c58e4069503725ba4dfcb33" prot="public" static="no" strong="no">
        <type></type>
        <name>CustomFunctionCallbacks</name>
        <enumvalue id="c__api_8h_1a717cd8414c58e4069503725ba4dfcb33a215bf764504a913342cb45568f350757" prot="public">
          <name>kCustomFunctionBackward</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="c__api_8h_1a717cd8414c58e4069503725ba4dfcb33a4eb258b87107721a52d3677f4ab9d1dd" prot="public">
          <name>kCustomFunctionDelete</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="206" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="206" bodyend="209"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t mx_uint</definition>
        <argsstring></argsstring>
        <name>mx_uint</name>
        <briefdescription>
<para>manually define unsigned int </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="58" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a70a49df614c1dc766f462c828549aff3" prot="public" static="no">
        <type>int64_t</type>
        <definition>typedef int64_t mx_int64</definition>
        <argsstring></argsstring>
        <name>mx_int64</name>
        <briefdescription>
<para>manually define 64-bit int </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="60" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a4e709067707d9f90c534bd65494ae668" prot="public" static="no">
        <type>float</type>
        <definition>typedef float mx_float</definition>
        <argsstring></argsstring>
        <name>mx_float</name>
        <briefdescription>
<para>manually define float </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="62" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1ab15fcfeedbe50ea6db54a98b582d7eaf" prot="public" static="no">
        <type>int64_t</type>
        <definition>typedef int64_t dim_t</definition>
        <argsstring></argsstring>
        <name>dim_t</name>
        <briefdescription>
<para>data type to store dim size </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="64" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* NDArrayHandle</definition>
        <argsstring></argsstring>
        <name>NDArrayHandle</name>
        <briefdescription>
<para>handle to NDArray </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="69" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a197f06e1d873d34572b679532c268d35" prot="public" static="no">
        <type>const void *</type>
        <definition>typedef const void* FunctionHandle</definition>
        <argsstring></argsstring>
        <name>FunctionHandle</name>
        <briefdescription>
<para>handle to a mxnet narray function that changes NDArray </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="71" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1aa2e96133f49cfdc1095da6cd08afbce0" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* AtomicSymbolCreator</definition>
        <argsstring></argsstring>
        <name>AtomicSymbolCreator</name>
        <briefdescription>
<para>handle to a function that takes param and creates symbol </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="73" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1aac4a2be6e40b0869bcc390a573a7e489" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* CachedOpHandle</definition>
        <argsstring></argsstring>
        <name>CachedOpHandle</name>
        <briefdescription>
<para>handle to cached operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="75" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* SymbolHandle</definition>
        <argsstring></argsstring>
        <name>SymbolHandle</name>
        <briefdescription>
<para>handle to a symbol that can be bind as operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="77" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1aaccda72ea7a5439c715ff5007b9595b5" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* AtomicSymbolHandle</definition>
        <argsstring></argsstring>
        <name>AtomicSymbolHandle</name>
        <briefdescription>
<para>handle to a AtomicSymbol </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="79" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a6f224ee35892507405ced8429d874726" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* ExecutorHandle</definition>
        <argsstring></argsstring>
        <name>ExecutorHandle</name>
        <briefdescription>
<para>handle to an Executor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="81" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a0b9b13ccb06a6a4f05d211261fa883dd" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* DataIterCreator</definition>
        <argsstring></argsstring>
        <name>DataIterCreator</name>
        <briefdescription>
<para>handle a dataiter creator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="83" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1abce84fe05f55709d643bcfd0a4e4620b" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* DataIterHandle</definition>
        <argsstring></argsstring>
        <name>DataIterHandle</name>
        <briefdescription>
<para>handle to a DataIterator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="85" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* KVStoreHandle</definition>
        <argsstring></argsstring>
        <name>KVStoreHandle</name>
        <briefdescription>
<para>handle to KVStore </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="87" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a4cc6d9b5a408760fc893c0b568d6aeae" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* RecordIOHandle</definition>
        <argsstring></argsstring>
        <name>RecordIOHandle</name>
        <briefdescription>
<para>handle to RecordIO </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="89" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a58a159a7417ad988206970d46c4c7ee8" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* RtcHandle</definition>
        <argsstring></argsstring>
        <name>RtcHandle</name>
        <briefdescription>
<para>handle to MXRtc </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="91" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1aeef73e8188f1cf7f79a13517f5828693" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* CudaModuleHandle</definition>
        <argsstring></argsstring>
        <name>CudaModuleHandle</name>
        <briefdescription>
<para>handle to rtc cuda module </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="93" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a879a534941e7727cf9deea865c3144b0" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* CudaKernelHandle</definition>
        <argsstring></argsstring>
        <name>CudaKernelHandle</name>
        <briefdescription>
<para>handle to rtc cuda kernel </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="95" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* ProfileHandle</definition>
        <argsstring></argsstring>
        <name>ProfileHandle</name>
        <briefdescription>
<para>handle to a Profile object (domain, duration, counter, etc.) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="97" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a0d448754f71eac77eb4fab46eb2f7ea4" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* DLManagedTensorHandle</definition>
        <argsstring></argsstring>
        <name>DLManagedTensorHandle</name>
        <briefdescription>
<para>handle to DLManagedTensor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="99" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a202dafc02d455ec60a7442598d76dc6c" prot="public" static="no">
        <type>const void *</type>
        <definition>typedef const void* ContextHandle</definition>
        <argsstring></argsstring>
        <name>ContextHandle</name>
        <briefdescription>
<para>handle to Context </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="101" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a1585c296e0195ef7c9524648d0cbb1ed" prot="public" static="no">
        <type>const void *</type>
        <definition>typedef const void* EngineFnPropertyHandle</definition>
        <argsstring></argsstring>
        <name>EngineFnPropertyHandle</name>
        <briefdescription>
<para>handle to Engine FnProperty </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="103" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1afb510271a7a8d23089e2a43e50fb1029" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* EngineVarHandle</definition>
        <argsstring></argsstring>
        <name>EngineVarHandle</name>
        <briefdescription>
<para>handle to Engine VarHandle </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="105" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a5032518de52253f051cf2836e9e5cd0e" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* EngineAsyncFunc) (void *, void *, void *)</definition>
        <argsstring>)(void *, void *, void *)</argsstring>
        <name>EngineAsyncFunc</name>
        <briefdescription>
<para>Engine asynchronous operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="108" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a9ed003b17af3cb5927fb2b3f32f1530d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* EngineSyncFunc) (void *, void *)</definition>
        <argsstring>)(void *, void *)</argsstring>
        <name>EngineSyncFunc</name>
        <briefdescription>
<para>Engine synchronous operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="110" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a9aae9f5a4da0b568aef0d74c8a1c3d48" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* EngineFuncParamDeleter) (void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>EngineFuncParamDeleter</name>
        <briefdescription>
<para>Callback to free the param for EngineAsyncFunc/EngineSyncFunc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="112" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a2731805437dc3d76201fc21154b1337c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* ExecutorMonitorCallback) (const char *, NDArrayHandle, void *)</definition>
        <argsstring>)(const char *, NDArrayHandle, void *)</argsstring>
        <name>ExecutorMonitorCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="113" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a0ee6dd8389c0dacae0f7c48156ec2f34" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* MXGenericCallback) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>MXGenericCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="148" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a260ea269f1da99011750fc3e18661f06" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* CustomOpFBFunc) (int, void **, int *, const int *, const int, void *)</definition>
        <argsstring>)(int, void **, int *, const int *, const int, void *)</argsstring>
        <name>CustomOpFBFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="181" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a0056a2f79906cce0f8aa78966c2d4a6c" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* CustomOpDelFunc) (void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>CustomOpDelFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="184" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a5bcf4b1e26b22c9363a016bd9d27085c" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* CustomOpListFunc) (char ***, void *)</definition>
        <argsstring>)(char ***, void *)</argsstring>
        <name>CustomOpListFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="185" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a323ab55cb6f9bc761b7960f4acb1fc48" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* CustomOpInferShapeFunc) (int, int *, int **, void *)</definition>
        <argsstring>)(int, int *, int **, void *)</argsstring>
        <name>CustomOpInferShapeFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="186" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a7756a9e273e3e9b408a23081415719dc" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* CustomOpInferStorageTypeFunc) (int, int *, void *)</definition>
        <argsstring>)(int, int *, void *)</argsstring>
        <name>CustomOpInferStorageTypeFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="188" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1acaa8fdb64f14dc9f312c4fdec253e9d0" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* CustomOpBackwardInferStorageTypeFunc) (int, int *, int *, void *)</definition>
        <argsstring>)(int, int *, int *, void *)</argsstring>
        <name>CustomOpBackwardInferStorageTypeFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="189" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a59855e0408519e73b05419cd0d9d976e" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* CustomOpInferTypeFunc) (int, int *, void *)</definition>
        <argsstring>)(int, int *, void *)</argsstring>
        <name>CustomOpInferTypeFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="193" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a97d01e308e267e939b4d1eebaf2f11d9" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* CustomOpBwdDepFunc) (const int *, const int *, const int *, int *, int **, void *)</definition>
        <argsstring>)(const int *, const int *, const int *, int *, int **, void *)</argsstring>
        <name>CustomOpBwdDepFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="194" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a6c79906616c8c56a409a97c4111a6b88" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* CustomOpCreateFunc) (const char *, int, unsigned **, const int *, const int *, struct MXCallbackList *, void *)</definition>
        <argsstring>)(const char *, int, unsigned **, const int *, const int *, struct MXCallbackList *, void *)</argsstring>
        <name>CustomOpCreateFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="197" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a470eba0beb11ed2fd858c50c9b2be33a" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* CustomOpPropCreator) (const char *, const int, const char **, const char **, struct MXCallbackList *)</definition>
        <argsstring>)(const char *, const int, const char **, const char **, struct MXCallbackList *)</argsstring>
        <name>CustomOpPropCreator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="201" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a82af386480b9ded6c407a6b582386c22" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* CustomFunctionBwdFunc) (int, int, void **, const int *, const int, void *)</definition>
        <argsstring>)(int, int, void **, const int *, const int, void *)</argsstring>
        <name>CustomFunctionBwdFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="211" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a06787c87fdbe0fe7568ac80b33ae6f68" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* CustomFunctionDelFunc) (void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>CustomFunctionDelFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="214" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a80aad02a0ebd29de5ad0b65b2c8ccdb3" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() MXKVStoreUpdater(int key, NDArrayHandle recv, NDArrayHandle local, void *handle)</definition>
        <argsstring>(int key, NDArrayHandle recv, NDArrayHandle local, void *handle)</argsstring>
        <name>MXKVStoreUpdater</name>
        <briefdescription>
<para>user-defined updater for the kvstore It&apos;s this updater&apos;s responsibility to delete <emphasis>recv</emphasis> and <emphasis>local</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recv</parametername>
</parameternamelist>
<parameterdescription>
<para>the pushed value on this key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>the value stored on local on this key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The additional handle to the updater </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2640" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="2640" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1afd75e802653078ab56620f2d17045b4f" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() MXKVStoreStrUpdater(const char *key, NDArrayHandle recv, NDArrayHandle local, void *handle)</definition>
        <argsstring>(const char *key, NDArrayHandle recv, NDArrayHandle local, void *handle)</argsstring>
        <name>MXKVStoreStrUpdater</name>
        <briefdescription>
<para>user-defined updater for the kvstore with string keys It&apos;s this updater&apos;s responsibility to delete <emphasis>recv</emphasis> and <emphasis>local</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recv</parametername>
</parameternamelist>
<parameterdescription>
<para>the pushed value on this key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para>the value stored on local on this key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The additional handle to the updater </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2652" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="2652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="c__api_8h_1a6968ac8b790fb40a674a364a2a74cba6" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() MXKVStoreServerController(int head, const char *body, void *controller_handle)</definition>
        <argsstring>(int head, const char *body, void *controller_handle)</argsstring>
        <name>MXKVStoreServerController</name>
        <briefdescription>
<para>the prototype of a server controller </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>the head of the command </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>the body of the command </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>controller_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>helper handle for implementing controller </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2759" column="1" bodyfile="incubator-mxnet/include/mxnet/c_api.h" bodystart="2759" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="c__api_8h_1acab1874f3e3077710b77d1a005abf36c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> const char *</type>
        <definition>MXNET_DLL const char* MXGetLastError</definition>
        <argsstring>()</argsstring>
        <name>MXGetLastError</name>
        <briefdescription>
<para>return str message of the last error all function in this file will return 0 when success and -1 when an error occured, MXGetLastError can be called to retrieve the error </para>
        </briefdescription>
        <detaileddescription>
<para>this function is threadsafe and can be called by different thread <simplesect kind="return"><para>error info </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="225" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_error.cc" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad96b3048ecfb919379fc73eaf491cdf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXLoadLib</definition>
        <argsstring>(const char *path)</argsstring>
        <name>MXLoadLib</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Load library dynamically. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>to the library .so file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="236" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="96" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a8e99183928aac47b24df1c960eac46ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXLibInfoFeatures</definition>
        <argsstring>(const struct LibFeature **libFeature, size_t *size)</argsstring>
        <name>MXLibInfoFeatures</name>
        <param>
          <type>const struct <ref refid="struct_lib_feature" kindref="compound">LibFeature</ref> **</type>
          <declname>libFeature</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Get list of features supported on the runtime. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>libFeature</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to array of <ref refid="struct_lib_feature" kindref="compound">LibFeature</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>of the array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="244" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="108" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a05e3ead36464b62cd1a9264187640f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRandomSeed</definition>
        <argsstring>(int seed)</argsstring>
        <name>MXRandomSeed</name>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
<para>Seed all global random number generators in mxnet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>the random number seed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="251" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a146217b1db0d73614debf333665e16f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRandomSeedContext</definition>
        <argsstring>(int seed, int dev_type, int dev_id)</argsstring>
        <name>MXRandomSeedContext</name>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <briefdescription>
<para>Seed the global random number generator of the given device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>the random number seed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="258" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="123" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aa837df9930bbb46d0ca1674523f63e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNotifyShutdown</definition>
        <argsstring>()</argsstring>
        <name>MXNotifyShutdown</name>
        <briefdescription>
<para>Notify the engine about a shutdown, This can help engine to print less messages into display. </para>
        </briefdescription>
        <detaileddescription>
<para>User do not have to call this function. <simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="267" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a7b704b6d435cbf77c851ec722e6139e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSetProcessProfilerConfig</definition>
        <argsstring>(int num_params, const char *const *keys, const char *const *vals, KVStoreHandle kvstoreHandle)</argsstring>
        <name>MXSetProcessProfilerConfig</name>
        <param>
          <type>int</type>
          <declname>num_params</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>kvstoreHandle</declname>
        </param>
        <briefdescription>
<para>Set up configuration of profiler for the process passed as profile_process in keys. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_params</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>array of parameter keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>array of parameter values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kvstoreHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to kvstore </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="277" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="265" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a47521044e7ddd44500ed478f45705564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSetProfilerConfig</definition>
        <argsstring>(int num_params, const char *const *keys, const char *const *vals)</argsstring>
        <name>MXSetProfilerConfig</name>
        <param>
          <type>int</type>
          <declname>num_params</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Set up configuration of profiler for worker/current process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_params</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>array of parameter keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>array of parameter values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="288" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="305" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a9211dbae2288461a235baa1745f86041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSetProcessProfilerState</definition>
        <argsstring>(int state, int profile_process, KVStoreHandle kvStoreHandle)</argsstring>
        <name>MXSetProcessProfilerState</name>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>profile_process</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>kvStoreHandle</declname>
        </param>
        <briefdescription>
<para>Set up state of profiler for either worker or server process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>indicate the working state of profiler, profiler not running when state == 0, profiler running when state == 1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profile_process</parametername>
</parameternamelist>
<parameterdescription>
<para>an int, when 0 command is for worker/current process, when 1 command is for server process </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kvstoreHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to kvstore, needed for server process profiling </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="301" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="365" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac373802e0d3a38f297345f87d307a798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSetProfilerState</definition>
        <argsstring>(int state)</argsstring>
        <name>MXSetProfilerState</name>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Set up state of profiler for current process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>indicate the working state of profiler, profiler not running when state == 0, profiler running when state == 1 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="311" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="361" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a9cac2d6bf87964adc923ccfc2b723ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXDumpProcessProfile</definition>
        <argsstring>(int finished, int profile_process, KVStoreHandle kvStoreHandle)</argsstring>
        <name>MXDumpProcessProfile</name>
        <param>
          <type>int</type>
          <declname>finished</declname>
        </param>
        <param>
          <type>int</type>
          <declname>profile_process</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>kvStoreHandle</declname>
        </param>
        <briefdescription>
<para>Save profile and stop profiler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>finished</parametername>
</parameternamelist>
<parameterdescription>
<para>true if stat output should stop after this point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profile_process</parametername>
</parameternamelist>
<parameterdescription>
<para>an int, when 0 command is for worker/current process, when 1 command is for server process </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kvstoreHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to kvstore </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="322" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="344" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a2a9788db511ad2ec5057e8eecc3f6703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXDumpProfile</definition>
        <argsstring>(int finished)</argsstring>
        <name>MXDumpProfile</name>
        <param>
          <type>int</type>
          <declname>finished</declname>
        </param>
        <briefdescription>
<para>Save profile and stop profiler for worker/current process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>finished</parametername>
</parameternamelist>
<parameterdescription>
<para>true if stat output should stop after this point </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="330" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="340" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a8bf1ddff0b76c162f0fbdc243e83001b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXAggregateProfileStatsPrint</definition>
        <argsstring>(const char **out_str, int reset)</argsstring>
        <name>MXAggregateProfileStatsPrint</name>
        <param>
          <type>const char **</type>
          <declname>out_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reset</declname>
        </param>
        <briefdescription>
<para>Deprecated, use MXAggregateProfileStatsPrintEx instead. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out_str</parametername>
</parameternamelist>
<parameterdescription>
<para>Will receive a pointer to the output string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reset</parametername>
</parameternamelist>
<parameterdescription>
<para>Clear the aggregate stats after printing </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="340" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a7f98ed356f4b0190f564529e24008237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXAggregateProfileStatsPrintEx</definition>
        <argsstring>(const char **out_str, int reset, int format, int sort_by, int ascending)</argsstring>
        <name>MXAggregateProfileStatsPrintEx</name>
        <param>
          <type>const char **</type>
          <declname>out_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>format</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sort_by</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ascending</declname>
        </param>
        <briefdescription>
<para>Print sorted aggregate stats to the a string How aggregate stats are stored will not change. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out_str</parametername>
</parameternamelist>
<parameterdescription>
<para>will receive a pointer to the output string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reset</parametername>
</parameternamelist>
<parameterdescription>
<para>clear the aggregate stats after printing </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to return in tabular or json format </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sort_by</parametername>
</parameternamelist>
<parameterdescription>
<para>sort by avg, min, max, or count </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ascending</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to sort ascendingly </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="353" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="313" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a6be4f6de47afd9ba4adeb6cd9b0a9fd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProcessProfilePause</definition>
        <argsstring>(int paused, int profile_process, KVStoreHandle kvStoreHandle)</argsstring>
        <name>MXProcessProfilePause</name>
        <param>
          <type>int</type>
          <declname>paused</declname>
        </param>
        <param>
          <type>int</type>
          <declname>profile_process</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>kvStoreHandle</declname>
        </param>
        <briefdescription>
<para>Pause profiler tuning collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paused</parametername>
</parameternamelist>
<parameterdescription>
<para>If nonzero, profiling pauses. Otherwise, profiling resumes/continues </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profile_process</parametername>
</parameternamelist>
<parameterdescription>
<para>integer which denotes whether to process worker or server process </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kvstoreHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to kvstore </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
<simplesect kind="note"><para>pausing and resuming is global and not recursive </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="364" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="523" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a319802a4e02b4d9d082a337bb25d01b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProfilePause</definition>
        <argsstring>(int paused)</argsstring>
        <name>MXProfilePause</name>
        <param>
          <type>int</type>
          <declname>paused</declname>
        </param>
        <briefdescription>
<para>Pause profiler tuning collection for worker/current process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paused</parametername>
</parameternamelist>
<parameterdescription>
<para>If nonzero, profiling pauses. Otherwise, profiling resumes/continues </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
<simplesect kind="note"><para>pausing and resuming is global and not recursive </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="372" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="519" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a1bda6836285cdb31cdbbd62fceb28373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProfileCreateDomain</definition>
        <argsstring>(const char *domain, ProfileHandle *out)</argsstring>
        <name>MXProfileCreateDomain</name>
        <param>
          <type>const char *</type>
          <declname>domain</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create profiling domain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>String representing the domain name to create </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Return domain object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="380" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="388" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a32bd3d582ad6e991449100d54d565e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProfileCreateTask</definition>
        <argsstring>(ProfileHandle domain, const char *task_name, ProfileHandle *out)</argsstring>
        <name>MXProfileCreateTask</name>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref></type>
          <declname>domain</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>task_name</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create profile task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the task </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>Domain of the task </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="389" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="400" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aeec8d6d4eacf9b0a593ea8fd44607c89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProfileCreateFrame</definition>
        <argsstring>(ProfileHandle domain, const char *frame_name, ProfileHandle *out)</argsstring>
        <name>MXProfileCreateFrame</name>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref></type>
          <declname>domain</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>frame_name</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create profile frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>Domain of the frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="400" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="416" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a36cc864bacc98859e7a02196a7d48d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProfileCreateEvent</definition>
        <argsstring>(const char *event_name, ProfileHandle *out)</argsstring>
        <name>MXProfileCreateEvent</name>
        <param>
          <type>const char *</type>
          <declname>event_name</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create profile event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="410" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="432" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac774abf5581663f93cfe7ab1e8aae8c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProfileCreateCounter</definition>
        <argsstring>(ProfileHandle domain, const char *counter_name, ProfileHandle *out)</argsstring>
        <name>MXProfileCreateCounter</name>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref></type>
          <declname>domain</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>counter_name</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create profile counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the counter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>Domain of the counter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="419" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="543" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a7b819e5f9b63160aad0568f38747a314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProfileDestroyHandle</definition>
        <argsstring>(ProfileHandle frame_handle)</argsstring>
        <name>MXProfileDestroyHandle</name>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref></type>
          <declname>frame_handle</declname>
        </param>
        <briefdescription>
<para>Destroy a frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to frame to destroy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="428" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="445" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aafb1399e850c1fd57cbed72e2f786a23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProfileDurationStart</definition>
        <argsstring>(ProfileHandle duration_handle)</argsstring>
        <name>MXProfileDurationStart</name>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref></type>
          <declname>duration_handle</declname>
        </param>
        <briefdescription>
<para>Start timing the duration of a profile duration object such as an event, task or frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duration_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the duration object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="435" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="503" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a09e2468fbe54e6a93e0d5394cad1debc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProfileDurationStop</definition>
        <argsstring>(ProfileHandle duration_handle)</argsstring>
        <name>MXProfileDurationStop</name>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref></type>
          <declname>duration_handle</declname>
        </param>
        <briefdescription>
<para>Stop timing the duration of a profile duration object such as an event, task or frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duration_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the duration object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="442" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="511" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a8f577ea610a762865b617529632d5589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProfileSetCounter</definition>
        <argsstring>(ProfileHandle counter_handle, uint64_t value)</argsstring>
        <name>MXProfileSetCounter</name>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref></type>
          <declname>counter_handle</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a counter, given its handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>counter_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to counter to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to set the counter to (64-bit unsigned integer) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="450" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="559" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a44372f17140738dcc87e0b22b1fc15b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProfileAdjustCounter</definition>
        <argsstring>(ProfileHandle counter_handle, int64_t value)</argsstring>
        <name>MXProfileAdjustCounter</name>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref></type>
          <declname>counter_handle</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Adjust a counter by the given amount, given its handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>counter_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to counter to adjust </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to adjust the counter by (64-bit signed integer) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="458" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="566" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad579dc41376dac04e0fba7e61afabc1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXProfileSetMarker</definition>
        <argsstring>(ProfileHandle domain, const char *instant_marker_name, const char *scope)</argsstring>
        <name>MXProfileSetMarker</name>
        <param>
          <type><ref refid="c__api_8h_1a2f6ad8b0cc1e894f64b5ecad2ceb1aa7" kindref="member">ProfileHandle</ref></type>
          <declname>domain</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>instant_marker_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
<para>Mark a single instant in time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>Domain of the marker </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>instant_marker_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the marker </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scope</parametername>
</parameternamelist>
<parameterdescription>
<para>Scope of marker (&apos;global&apos;, &apos;process&apos;, &apos;thread&apos;, &apos;task&apos;, &apos;marker&apos;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="467" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_profile.cc" bodystart="573" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a13ebc161bc64049a26404ee6eca4ac26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSetNumOMPThreads</definition>
        <argsstring>(int thread_num)</argsstring>
        <name>MXSetNumOMPThreads</name>
        <param>
          <type>int</type>
          <declname>thread_num</declname>
        </param>
        <briefdescription>
<para>Set the number of OMP threads to use. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thread_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of OMP threads desired </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="476" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="137" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a4917b11499d6ef916ab7f78274c8cf0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXEngineSetBulkSize</definition>
        <argsstring>(int bulk_size, int *prev_bulk_size)</argsstring>
        <name>MXEngineSetBulkSize</name>
        <param>
          <type>int</type>
          <declname>bulk_size</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>prev_bulk_size</declname>
        </param>
        <briefdescription>
<para>set bulk execution limit </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bulk_size</parametername>
</parameternamelist>
<parameterdescription>
<para>new bulk_size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prev_bulk_size</parametername>
</parameternamelist>
<parameterdescription>
<para>previous bulk_size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="483" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="143" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac9f06859cc4a873e91db76e0b6d08a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXGetGPUCount</definition>
        <argsstring>(int *out)</argsstring>
        <name>MXGetGPUCount</name>
        <param>
          <type>int *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get the number of GPUs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>to int that will hold the number of GPUs available. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="490" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a47caa6eab3d937676d6f91ff1379fc22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXGetGPUMemoryInformation</definition>
        <argsstring>(int dev, int *free_mem, int *total_mem)</argsstring>
        <name>MXGetGPUMemoryInformation</name>
        <param>
          <type>int</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>free_mem</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>total_mem</declname>
        </param>
        <briefdescription>
<para>get the free and total available memory on a GPU Note: Deprecated, use MXGetGPUMemoryInformation64 instead. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>the GPU number to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_mem</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the integer holding free GPU memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>total_mem</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the integer holding total GPU memory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="500" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="156" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a2c91608a70f2bab9b16683da49cf70e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXGetGPUMemoryInformation64</definition>
        <argsstring>(int dev, uint64_t *free_mem, uint64_t *total_mem)</argsstring>
        <name>MXGetGPUMemoryInformation64</name>
        <param>
          <type>int</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>free_mem</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>total_mem</declname>
        </param>
        <briefdescription>
<para>get the free and total available memory on a GPU </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>the GPU number to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_mem</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the uint64_t holding free GPU memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>total_mem</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the uint64_t holding total GPU memory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="509" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="166" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ae33ec9d5238ae89745ca6b1456e005f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXGetVersion</definition>
        <argsstring>(int *out)</argsstring>
        <name>MXGetVersion</name>
        <param>
          <type>int *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>get the MXNet library version as an integer </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>to the integer holding the version number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="516" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a3a32f78b54c81564da9834c6c6353b90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayCreateNone</definition>
        <argsstring>(NDArrayHandle *out)</argsstring>
        <name>MXNDArrayCreateNone</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Load TVM operator from the binary library. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>libpath</parametername>
</parameternamelist>
<parameterdescription>
<para>TVM operators lib file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens</para>
</simplesect>
create a NDArray handle that is not initialized can be used to pass in as mutate variables to hold the result of NDArray <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returning handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="538" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="186" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a097e93ed9fd8c8cfb8ae76aa32441b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayCreate</definition>
        <argsstring>(const mx_uint *shape, mx_uint ndim, int dev_type, int dev_id, int delay_alloc, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayCreate</name>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>ndim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delay_alloc</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>create a NDArray with specified shape </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to the shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>the dimension of the shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_type</parametername>
</parameternamelist>
<parameterdescription>
<para>device type, specify device we want to take </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the device id of the specific device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to delay allocation until the narray is first mutated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returning handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="550" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="205" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1abe1ed22a74c15b24111ce2af39bcca38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayCreateEx</definition>
        <argsstring>(const mx_uint *shape, mx_uint ndim, int dev_type, int dev_id, int delay_alloc, int dtype, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayCreateEx</name>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>ndim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delay_alloc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>create a NDArray with specified shape and data type </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to the shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>the dimension of the shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_type</parametername>
</parameternamelist>
<parameterdescription>
<para>device type, specify device we want to take </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the device id of the specific device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to delay allocation until the narray is first mutated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>data type of created array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returning handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="569" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="230" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1af9c37b4bae358ae29a32b02b7388fad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayCreateEx64</definition>
        <argsstring>(const mx_int64 *shape, int ndim, int dev_type, int dev_id, int delay_alloc, int dtype, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayCreateEx64</name>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delay_alloc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="577" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="218" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a7cf5a1795602f1dd8b5cadbe1c0e28b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayCreateSparseEx</definition>
        <argsstring>(int storage_type, const mx_uint *shape, mx_uint ndim, int dev_type, int dev_id, int delay_alloc, int dtype, mx_uint num_aux, int *aux_type, mx_uint *aux_ndims, const mx_uint *aux_shape, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayCreateSparseEx</name>
        <param>
          <type>int</type>
          <declname>storage_type</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>ndim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delay_alloc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_aux</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>aux_type</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>aux_ndims</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>aux_shape</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>create an empty sparse NDArray with specified shape and data type </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>storage_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the storage type of the ndarray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to the shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>the dimension of the shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_type</parametername>
</parameternamelist>
<parameterdescription>
<para>device type, specify device we want to take </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the device id of the specific device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to delay allocation until the narray is first mutated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>data type of created array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_aux</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of aux data to support this ndarray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_type</parametername>
</parameternamelist>
<parameterdescription>
<para>data type of the aux data for the created array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_ndims</parametername>
</parameternamelist>
<parameterdescription>
<para>the dimension of the shapes of aux data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape</parametername>
</parameternamelist>
<parameterdescription>
<para>the shapes of aux data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returning handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="602" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="242" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a3716b485d540ab76cdae3436c696534a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayCreateSparseEx64</definition>
        <argsstring>(int storage_type, const mx_int64 *shape, int ndim, int dev_type, int dev_id, int delay_alloc, int dtype, mx_uint num_aux, int *aux_type, int *aux_ndims, const mx_int64 *aux_shape, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayCreateSparseEx64</name>
        <param>
          <type>int</type>
          <declname>storage_type</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delay_alloc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_aux</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>aux_type</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>aux_ndims</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>aux_shape</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="615" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a27c9353672df26b68c169fbb857f3a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayLoadFromRawBytes</definition>
        <argsstring>(const void *buf, size_t size, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayLoadFromRawBytes</name>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>create a NDArray handle that is loaded from raw bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>the head of the raw bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the raw bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returning handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="635" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="275" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ab180057ee7a43918d021adfc468150a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArraySaveRawBytes</definition>
        <argsstring>(NDArrayHandle handle, size_t *out_size, const char **out_buf)</argsstring>
        <name>MXNDArraySaveRawBytes</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>out_buf</declname>
        </param>
        <briefdescription>
<para>save the NDArray into raw bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the NDArray handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the raw bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>the head of returning memory bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="645" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="289" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a5dc95ef008b73103b86f4576fcf9117d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArraySave</definition>
        <argsstring>(const char *fname, mx_uint num_args, NDArrayHandle *args, const char **keys)</argsstring>
        <name>MXNDArraySave</name>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <briefdescription>
<para>Save list of narray into the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>number of arguments to save. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of NDArrayHandles to be saved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the NDArray, optional, can be NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="656" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="360" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a2c1d0459d3fe124b5d3aed49386999f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayLoad</definition>
        <argsstring>(const char *fname, mx_uint *out_size, NDArrayHandle **out_arr, mx_uint *out_name_size, const char ***out_names)</argsstring>
        <name>MXNDArrayLoad</name>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>out_arr</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_name_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_names</declname>
        </param>
        <briefdescription>
<para>Load list of narray from the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of narray loaded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_arr</parametername>
</parameternamelist>
<parameterdescription>
<para>head of the returning narray handles. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_name_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of output name arrray. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_names</parametername>
</parameternamelist>
<parameterdescription>
<para>the names of returning NDArrays, can be NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="669" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="383" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a35fabd9d1f1cfc482f1230113e22511e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayLoad64</definition>
        <argsstring>(const char *fname, mx_int64 *out_size, NDArrayHandle **out_arr, mx_int64 *out_name_size, const char ***out_names)</argsstring>
        <name>MXNDArrayLoad64</name>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>out_arr</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>out_name_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="675" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1adb9eaeff5791b6c74861c8564c900353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayLoadFromBuffer</definition>
        <argsstring>(const void *ndarray_buffer, size_t size, mx_uint *out_size, NDArrayHandle **out_arr, mx_uint *out_name_size, const char ***out_names)</argsstring>
        <name>MXNDArrayLoadFromBuffer</name>
        <param>
          <type>const void *</type>
          <declname>ndarray_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>out_arr</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_name_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_names</declname>
        </param>
        <briefdescription>
<para>Load list / dictionary of narrays from file content loaded into memory. This will load a list of ndarrays in a similar manner to MXNDArrayLoad, however, it loads from buffer containing the contents of a file, rather than from a specified file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ndarray_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the start of the ndarray file content </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of narray loaded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_arr</parametername>
</parameternamelist>
<parameterdescription>
<para>head of the returning narray handles. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_name_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of output name arrray. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_names</parametername>
</parameternamelist>
<parameterdescription>
<para>the names of returning NDArrays, can be NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="695" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="414" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a62c8dc659c883700ba88dff070f5c5e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayLoadFromBuffer64</definition>
        <argsstring>(const void *ndarray_buffer, size_t size, mx_int64 *out_size, NDArrayHandle **out_arr, mx_int64 *out_name_size, const char ***out_names)</argsstring>
        <name>MXNDArrayLoadFromBuffer64</name>
        <param>
          <type>const void *</type>
          <declname>ndarray_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>out_arr</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>out_name_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="702" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ada464e85b86305d167511bb977095a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArraySyncCopyFromCPU</definition>
        <argsstring>(NDArrayHandle handle, const void *data, size_t size)</argsstring>
        <name>MXNDArraySyncCopyFromCPU</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Perform a synchronize copy from a continugous CPU memory region. </para>
        </briefdescription>
        <detaileddescription>
<para>This function will call WaitToWrite before the copy is performed. This is useful to copy data from existing memory region that are not wrapped by NDArray(thus dependency not being tracked).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the NDArray handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data source to copy from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the memory size we want to copy from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="720" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="302" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a98df4e0ceae7e198a5c18904cb135ab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArraySyncCopyToCPU</definition>
        <argsstring>(NDArrayHandle handle, void *data, size_t size)</argsstring>
        <name>MXNDArraySyncCopyToCPU</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Perform a synchronize copyto a continugous CPU memory region. </para>
        </briefdescription>
        <detaileddescription>
<para>This function will call WaitToRead before the copy is performed. This is useful to copy data from existing memory region that are not wrapped by NDArray(thus dependency not being tracked).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the NDArray handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data source to copy into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the memory size we want to copy into. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="734" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="310" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad85145c1cf066999697fd20b82dd417f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArraySyncCopyFromNDArray</definition>
        <argsstring>(NDArrayHandle handle_dst, const NDArrayHandle handle_src, const int i)</argsstring>
        <name>MXNDArraySyncCopyFromNDArray</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle_dst</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle_src</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Copy src.data() to dst.data() if i = -1, else dst.aux_data(i) if i &gt;= 0 This function blocks. Do not use it in performance critical code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle_dst</parametername>
</parameternamelist>
<parameterdescription>
<para>handle of a dst ndarray whose data/aux_data has been allocated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handle_src</parametername>
</parameternamelist>
<parameterdescription>
<para>handle of a src ndarray which has default storage type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>dst data blob indicator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="744" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="325" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a0ae429cce829c760203fecb14bdaa91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArraySyncCheckFormat</definition>
        <argsstring>(NDArrayHandle handle, const bool full_check)</argsstring>
        <name>MXNDArraySyncCheckFormat</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>full_check</declname>
        </param>
        <briefdescription>
<para>check whether the NDArray format is valid </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>full_check</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>True</computeroutput>, rigorous check, O(N) operations Otherwise basic check, O(1) operations </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="753" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="335" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad008e978336534821634e460c3eb9bff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayWaitToRead</definition>
        <argsstring>(NDArrayHandle handle)</argsstring>
        <name>MXNDArrayWaitToRead</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Wait until all the pending writes with respect NDArray are finished. Always call this before read data out synchronizely. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the NDArray handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="760" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="342" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a6f4d7cb465c2b3723c51449b1aba8af9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayWaitToWrite</definition>
        <argsstring>(NDArrayHandle handle)</argsstring>
        <name>MXNDArrayWaitToWrite</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Wait until all the pending read/write with respect NDArray are finished. Always call this before write data into NDArray synchronizely. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the NDArray handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="767" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="348" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1adf10f6461b93f46d67289359909d56c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayWaitAll</definition>
        <argsstring>()</argsstring>
        <name>MXNDArrayWaitAll</name>
        <briefdescription>
<para>wait until all delayed operations in the system is completed </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="773" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="354" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a857e66f665360d5fab3ad52528df38dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayFree</definition>
        <argsstring>(NDArrayHandle handle)</argsstring>
        <name>MXNDArrayFree</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>free the narray handle </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to be freed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="779" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="448" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a67c83f78e6bd15c6ad6eb09a34133086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArraySlice</definition>
        <argsstring>(NDArrayHandle handle, mx_uint slice_begin, mx_uint slice_end, NDArrayHandle *out)</argsstring>
        <name>MXNDArraySlice</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>slice_begin</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>slice_end</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Slice the NDArray along axis 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the NDArray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slice_begin</parametername>
</parameternamelist>
<parameterdescription>
<para>The beginning index of slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slice_end</parametername>
</parameternamelist>
<parameterdescription>
<para>The ending index of slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The NDArrayHandle of sliced NDArray </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="788" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="454" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a90fbe78325ba9d67d3629be442623cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayAt</definition>
        <argsstring>(NDArrayHandle handle, mx_uint idx, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayAt</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Index the NDArray along axis 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the NDArray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>the index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The NDArrayHandle of output NDArray </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="800" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="466" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a9d4b7f31636a8147e563ca2ea5f66b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetStorageType</definition>
        <argsstring>(NDArrayHandle handle, int *out_storage_type)</argsstring>
        <name>MXNDArrayGetStorageType</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_storage_type</declname>
        </param>
        <briefdescription>
<para>get the storage type of the array </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="807" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="529" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a3743a54910b1862400c3ec4cbf7e9d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayReshape</definition>
        <argsstring>(NDArrayHandle handle, int ndim, int *dims, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayReshape</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndim</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dims</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Reshape the NDArray. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the narray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions of new shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dims</parametername>
</parameternamelist>
<parameterdescription>
<para>new shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the NDArrayHandle of reshaped NDArray </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="818" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="476" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a19b4db698bcd1ed87269aec17e5a16cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayReshape64</definition>
        <argsstring>(NDArrayHandle handle, int ndim, dim_t *dims, bool reverse, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayReshape64</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndim</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1ab15fcfeedbe50ea6db54a98b582d7eaf" kindref="member">dim_t</ref> *</type>
          <declname>dims</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reverse</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Reshape the NDArray. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the narray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions of new shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dims</parametername>
</parameternamelist>
<parameterdescription>
<para>new shape </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the NDArrayHandle of reshaped NDArray </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="831" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="512" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a2035651f4392d249d1b904d5eb0c3406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetShape</definition>
        <argsstring>(NDArrayHandle handle, mx_uint *out_dim, const mx_uint **out_pdata)</argsstring>
        <name>MXNDArrayGetShape</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_dim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> **</type>
          <declname>out_pdata</declname>
        </param>
        <briefdescription>
<para>DEPRECATED. Use MXNDArrayGetShapeEx instead. get the shape of the array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the narray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>the output dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_pdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer holder to get data pointer of the shape </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="844" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="541" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a294b414568513823723bd5b2dd1d5fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetShape64</definition>
        <argsstring>(NDArrayHandle handle, int *out_dim, const int64_t **out_pdata)</argsstring>
        <name>MXNDArrayGetShape64</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_dim</declname>
        </param>
        <param>
          <type>const int64_t **</type>
          <declname>out_pdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="848" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aaffecdcd25b95da7bfffad4bb80736a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetShapeEx</definition>
        <argsstring>(NDArrayHandle handle, int *out_dim, const int **out_pdata)</argsstring>
        <name>MXNDArrayGetShapeEx</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_dim</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>out_pdata</declname>
        </param>
        <briefdescription>
<para>get the shape of the array </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the narray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>the output dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_pdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer holder to get data pointer of the shape </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="859" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="585" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1affa4857046d7f2d58e24ad30c06e59c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetShapeEx64</definition>
        <argsstring>(NDArrayHandle handle, int *out_dim, const mx_int64 **out_pdata)</argsstring>
        <name>MXNDArrayGetShapeEx64</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_dim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> **</type>
          <declname>out_pdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="863" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="594" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a6c8d8ceb3c523e8507e813f7afb97f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetData</definition>
        <argsstring>(NDArrayHandle handle, void **out_pdata)</argsstring>
        <name>MXNDArrayGetData</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>out_pdata</declname>
        </param>
        <briefdescription>
<para>get the content of the data in NDArray </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the ndarray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_pdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer holder to get pointer of data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="873" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="603" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aa895f9718b8d28d381e80a2b4cd1113d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayToDLPack</definition>
        <argsstring>(NDArrayHandle handle, DLManagedTensorHandle *out_dlpack)</argsstring>
        <name>MXNDArrayToDLPack</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a0d448754f71eac77eb4fab46eb2f7ea4" kindref="member">DLManagedTensorHandle</ref> *</type>
          <declname>out_dlpack</declname>
        </param>
        <briefdescription>
<para>Create a reference view of NDArray that represents as DLManagedTensor Notice: MXNet uses asynchronous execution. Please call MXNDArrayWaitToRead or MXNDArrayWaitToWrite before calling MXNDArrayToDLPack. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the ndarray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_dlpack</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer holder to get pointer of DLManagedTensor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="884" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="615" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aec85a2a2bd001ec478204b9a275f7ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayFromDLPack</definition>
        <argsstring>(DLManagedTensorHandle dlpack, NDArrayHandle *out_handle)</argsstring>
        <name>MXNDArrayFromDLPack</name>
        <param>
          <type><ref refid="c__api_8h_1a0d448754f71eac77eb4fab46eb2f7ea4" kindref="member">DLManagedTensorHandle</ref></type>
          <declname>dlpack</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out_handle</declname>
        </param>
        <briefdescription>
<para>DEPRECATED. Use MXNDArrayFromDLPackEx instead. </para>
        </briefdescription>
        <detaileddescription>
<para>This allows us to create a NDArray using the memory allocated by an external deep learning framework that is DLPack compatible.</para>
<para>The memory is retained until the NDArray went out of scope.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dlpack</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer of the input DLManagedTensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transient_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the handle will be destructed before calling the deleter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer holder to get pointer of NDArray </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="902" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="623" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a41b273b36bcb1ff07f2e35383dcae7f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayFromDLPackEx</definition>
        <argsstring>(DLManagedTensorHandle dlpack, const bool transient_handle, NDArrayHandle *out_handle)</argsstring>
        <name>MXNDArrayFromDLPackEx</name>
        <param>
          <type><ref refid="c__api_8h_1a0d448754f71eac77eb4fab46eb2f7ea4" kindref="member">DLManagedTensorHandle</ref></type>
          <declname>dlpack</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>transient_handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out_handle</declname>
        </param>
        <briefdescription>
<para>Create a NDArray backed by a dlpack tensor. </para>
        </briefdescription>
        <detaileddescription>
<para>This allows us to create a NDArray using the memory allocated by an external deep learning framework that is DLPack compatible.</para>
<para>The memory is retained until the NDArray went out of scope.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dlpack</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer of the input DLManagedTensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transient_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the handle will be destructed before calling the deleter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer holder to get pointer of NDArray </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="919" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="628" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a7f63c3ce58079b97360c26bae3a679fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayCallDLPackDeleter</definition>
        <argsstring>(DLManagedTensorHandle dlpack)</argsstring>
        <name>MXNDArrayCallDLPackDeleter</name>
        <param>
          <type><ref refid="c__api_8h_1a0d448754f71eac77eb4fab46eb2f7ea4" kindref="member">DLManagedTensorHandle</ref></type>
          <declname>dlpack</declname>
        </param>
        <briefdescription>
<para>Delete a dlpack tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dlpack</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer of the input DLManagedTensor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="928" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="638" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a69cfaa5de4b9d87070d4823700e64a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetDType</definition>
        <argsstring>(NDArrayHandle handle, int *out_dtype)</argsstring>
        <name>MXNDArrayGetDType</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_dtype</declname>
        </param>
        <briefdescription>
<para>get the type of the data in NDArray </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the narray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer holder to get type of data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="936" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="647" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a5f8937c0b27a527c8b62adb7a4704d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetAuxType</definition>
        <argsstring>(NDArrayHandle handle, mx_uint i, int *out_type)</argsstring>
        <name>MXNDArrayGetAuxType</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_type</declname>
        </param>
        <briefdescription>
<para>get the type of the ith aux data in NDArray </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the narray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the aux data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_type</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer holder to get type of aux data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="946" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="659" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1adc9bb2a69c939b6e69442745174e2e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetAuxType64</definition>
        <argsstring>(NDArrayHandle handle, mx_int64 i, int *out_type)</argsstring>
        <name>MXNDArrayGetAuxType64</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="950" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a9eae2530c7c4aae1c5451a8966a3bf15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetAuxNDArray</definition>
        <argsstring>(NDArrayHandle handle, mx_uint i, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayGetAuxNDArray</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get a deep copy of the ith aux data blob in the form of an NDArray of default storage type. This function blocks. Do not use it in performance critical code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="959" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="673" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac821711d4522307be1780a6281e63f92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetAuxNDArray64</definition>
        <argsstring>(NDArrayHandle handle, mx_int64 i, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayGetAuxNDArray64</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="963" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a47a7255026a8f13672c3717896fdb356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetDataNDArray</definition>
        <argsstring>(NDArrayHandle handle, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayGetDataNDArray</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get a deep copy of the data blob in the form of an NDArray of default storage type. This function blocks. Do not use it in performance critical code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="972" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="687" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a3ae6292f1e640d54c92a8cc56f513b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetContext</definition>
        <argsstring>(NDArrayHandle handle, int *out_dev_type, int *out_dev_id)</argsstring>
        <name>MXNDArrayGetContext</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_dev_type</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_dev_id</declname>
        </param>
        <briefdescription>
<para>get the context of the NDArray </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the narray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_dev_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the output device type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_dev_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the output device id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="981" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="695" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aedb8d676502a66eef4a6c5988f73dccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetGrad</definition>
        <argsstring>(NDArrayHandle handle, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayGetGrad</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>return gradient buffer attached to this NDArray </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>NDArray handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="989" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="712" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a8e2c90cfa6c52a012fd3f23ffd8541f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayDetach</definition>
        <argsstring>(NDArrayHandle handle, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayDetach</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>detach and ndarray from computation graph by clearing entry_ </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>NDArray handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="995" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="724" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a2ff7ded9017ac7617be4eeebffae06a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArraySetGradState</definition>
        <argsstring>(NDArrayHandle handle, int state)</argsstring>
        <name>MXNDArraySetGradState</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>set the flag for gradient array state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>NDArray handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>the new state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1002" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="731" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a2ab9f498d34d84238e41ecb5e584e435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetGradState</definition>
        <argsstring>(NDArrayHandle handle, int *out)</argsstring>
        <name>MXNDArrayGetGradState</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>set the flag for gradient array state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>NDArray handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>the new state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1009" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="738" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a553e6791f689a41e63e4cdfbdbbd5c58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXListFunctions</definition>
        <argsstring>(mx_uint *out_size, FunctionHandle **out_array)</argsstring>
        <name>MXListFunctions</name>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a197f06e1d873d34572b679532c268d35" kindref="member">FunctionHandle</ref> **</type>
          <declname>out_array</declname>
        </param>
        <briefdescription>
<para>list all the available functions handles most user can use it to list all the needed functions </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of returned array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_array</parametername>
</parameternamelist>
<parameterdescription>
<para>the output function array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1020" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="745" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a77544bfc5a92867e7938e3138f625997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXListFunctions64</definition>
        <argsstring>(mx_int64 *out_size, FunctionHandle **out_array)</argsstring>
        <name>MXListFunctions64</name>
        <param>
          <type><ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a197f06e1d873d34572b679532c268d35" kindref="member">FunctionHandle</ref> **</type>
          <declname>out_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1023" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a9e2a1cb559d69daf541dac88c07409a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXGetFunction</definition>
        <argsstring>(const char *name, FunctionHandle *out)</argsstring>
        <name>MXGetFunction</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a197f06e1d873d34572b679532c268d35" kindref="member">FunctionHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>get the function handle by name </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the corresponding function handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1032" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="754" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad369531149cf26e8db49958e17bdf237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXFuncGetInfo</definition>
        <argsstring>(FunctionHandle fun, const char **name, const char **description, mx_uint *num_args, const char ***arg_names, const char ***arg_type_infos, const char ***arg_descriptions, const char **return_type DEFAULT(NULL))</argsstring>
        <name>MXFuncGetInfo</name>
        <param>
          <type><ref refid="c__api_8h_1a197f06e1d873d34572b679532c268d35" kindref="member">FunctionHandle</ref></type>
          <declname>fun</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>description</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>arg_names</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>arg_type_infos</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>arg_descriptions</declname>
        </param>
        <param>
          <type>const char **return_type </type>
          <declname>DEFAULT</declname>
          <array>NULL</array>
        </param>
        <briefdescription>
<para>Get the information of the function handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>The function handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The returned name of the function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>The returned description of the function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_names</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_type_infos</parametername>
</parameternamelist>
<parameterdescription>
<para>Type information about the arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_descriptions</parametername>
</parameternamelist>
<parameterdescription>
<para>Description information about the arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>return_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Return type of the function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1046" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1af0a6166fe48ce0a175990914b1cb02e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXFuncDescribe</definition>
        <argsstring>(FunctionHandle fun, mx_uint *num_use_vars, mx_uint *num_scalars, mx_uint *num_mutate_vars, int *type_mask)</argsstring>
        <name>MXFuncDescribe</name>
        <param>
          <type><ref refid="c__api_8h_1a197f06e1d873d34572b679532c268d35" kindref="member">FunctionHandle</ref></type>
          <declname>fun</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_use_vars</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_scalars</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_mutate_vars</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>type_mask</declname>
        </param>
        <briefdescription>
<para>get the argument requirements of the function </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>input function handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_use_vars</parametername>
</parameternamelist>
<parameterdescription>
<para>how many NDArrays to be passed in as used_vars </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_scalars</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar variable is needed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_mutate_vars</parametername>
</parameternamelist>
<parameterdescription>
<para>how many NDArrays to be passed in as mutate_vars </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>the type mask of this function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
<simplesect kind="see"><para><ref refid="c__api_8h_1a527f90a410f66db7136e91d27e7ea45c" kindref="member">MXFuncInvoke</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1064" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="775" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a527f90a410f66db7136e91d27e7ea45c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXFuncInvoke</definition>
        <argsstring>(FunctionHandle fun, NDArrayHandle *use_vars, mx_float *scalar_args, NDArrayHandle *mutate_vars)</argsstring>
        <name>MXFuncInvoke</name>
        <param>
          <type><ref refid="c__api_8h_1a197f06e1d873d34572b679532c268d35" kindref="member">FunctionHandle</ref></type>
          <declname>fun</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>use_vars</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a4e709067707d9f90c534bd65494ae668" kindref="member">mx_float</ref> *</type>
          <declname>scalar_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>mutate_vars</declname>
        </param>
        <briefdescription>
<para>invoke a function, the array size of passed in arguments must match the values in the </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>the function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_vars</parametername>
</parameternamelist>
<parameterdescription>
<para>the normal arguments passed to function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scalar_args</parametername>
</parameternamelist>
<parameterdescription>
<para>the scalar qarguments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mutate_vars</parametername>
</parameternamelist>
<parameterdescription>
<para>the mutate arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
<simplesect kind="see"><para>MXFuncDescribeArgs </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1079" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="789" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a9afe2f46b1fcd8016c8bfb11a84c6240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXFuncInvokeEx</definition>
        <argsstring>(FunctionHandle fun, NDArrayHandle *use_vars, mx_float *scalar_args, NDArrayHandle *mutate_vars, int num_params, char **param_keys, char **param_vals)</argsstring>
        <name>MXFuncInvokeEx</name>
        <param>
          <type><ref refid="c__api_8h_1a197f06e1d873d34572b679532c268d35" kindref="member">FunctionHandle</ref></type>
          <declname>fun</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>use_vars</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a4e709067707d9f90c534bd65494ae668" kindref="member">mx_float</ref> *</type>
          <declname>scalar_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>mutate_vars</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_params</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>param_keys</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>param_vals</declname>
        </param>
        <briefdescription>
<para>invoke a function, the array size of passed in arguments must match the values in the </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>the function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_vars</parametername>
</parameternamelist>
<parameterdescription>
<para>the normal arguments passed to function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scalar_args</parametername>
</parameternamelist>
<parameterdescription>
<para>the scalar qarguments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mutate_vars</parametername>
</parameternamelist>
<parameterdescription>
<para>the mutate arguments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_params</parametername>
</parameternamelist>
<parameterdescription>
<para>number of keyword parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>keys for keyword parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>values for keyword parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
<simplesect kind="see"><para>MXFuncDescribeArgs </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1096" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="804" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a6a9a4608136959389db02ad938201a67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXImperativeInvoke</definition>
        <argsstring>(AtomicSymbolCreator creator, int num_inputs, NDArrayHandle *inputs, int *num_outputs, NDArrayHandle **outputs, int num_params, const char **param_keys, const char **param_vals)</argsstring>
        <name>MXImperativeInvoke</name>
        <param>
          <type><ref refid="c__api_8h_1aa2e96133f49cfdc1095da6cd08afbce0" kindref="member">AtomicSymbolCreator</ref></type>
          <declname>creator</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_inputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_outputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_params</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>param_keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>param_vals</declname>
        </param>
        <briefdescription>
<para>invoke a nnvm op and imperative function </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>creator</parametername>
</parameternamelist>
<parameterdescription>
<para>the op </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>input NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_outputs</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputs</parametername>
</parameternamelist>
<parameterdescription>
<para>output NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_params</parametername>
</parameternamelist>
<parameterdescription>
<para>number of keyword parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>keys for keyword parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>values for keyword parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1115" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="118" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a7501b41abb37c5ff565c14447750b787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXImperativeInvokeEx</definition>
        <argsstring>(AtomicSymbolCreator creator, int num_inputs, NDArrayHandle *inputs, int *num_outputs, NDArrayHandle **outputs, int num_params, const char **param_keys, const char **param_vals, const int **out_stypes)</argsstring>
        <name>MXImperativeInvokeEx</name>
        <param>
          <type><ref refid="c__api_8h_1aa2e96133f49cfdc1095da6cd08afbce0" kindref="member">AtomicSymbolCreator</ref></type>
          <declname>creator</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_inputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_outputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_params</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>param_keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>param_vals</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>out_stypes</declname>
        </param>
        <briefdescription>
<para>invoke a nnvm op and imperative function </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>creator</parametername>
</parameternamelist>
<parameterdescription>
<para>the op </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>input NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_outputs</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputs</parametername>
</parameternamelist>
<parameterdescription>
<para>output NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_params</parametername>
</parameternamelist>
<parameterdescription>
<para>number of keyword parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>keys for keyword parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>values for keyword parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_stypes</parametername>
</parameternamelist>
<parameterdescription>
<para>output ndarrays&apos; stypes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1136" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="132" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a75939e5be09a150d4d8905c9fd6e986e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXAutogradSetIsRecording</definition>
        <argsstring>(int is_recording, int *prev)</argsstring>
        <name>MXAutogradSetIsRecording</name>
        <param>
          <type>int</type>
          <declname>is_recording</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
<para>set whether to record operator for autograd </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_recording</parametername>
</parameternamelist>
<parameterdescription>
<para>1 when recording, 0 when not recording. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prev</parametername>
</parameternamelist>
<parameterdescription>
<para>returns the previous status before this set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1151" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="273" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a9cf2b0aa3ff66119fe793f6ed82b61b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXAutogradSetIsTraining</definition>
        <argsstring>(int is_training, int *prev)</argsstring>
        <name>MXAutogradSetIsTraining</name>
        <param>
          <type>int</type>
          <declname>is_training</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
<para>set whether to record operator for autograd </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_training</parametername>
</parameternamelist>
<parameterdescription>
<para>1 when training, 0 when testing </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prev</parametername>
</parameternamelist>
<parameterdescription>
<para>returns the previous status before this set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1158" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="261" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a7464b4247cc7c8d3756edfc07bee833b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXAutogradIsRecording</definition>
        <argsstring>(bool *curr)</argsstring>
        <name>MXAutogradIsRecording</name>
        <param>
          <type>bool *</type>
          <declname>curr</declname>
        </param>
        <briefdescription>
<para>get whether autograd recording is on </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>curr</parametername>
</parameternamelist>
<parameterdescription>
<para>returns the current status. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1164" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="267" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac0ccb3977d0f8a7ae076bd55a5f15115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXAutogradIsTraining</definition>
        <argsstring>(bool *curr)</argsstring>
        <name>MXAutogradIsTraining</name>
        <param>
          <type>bool *</type>
          <declname>curr</declname>
        </param>
        <briefdescription>
<para>get whether training mode is on </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>curr</parametername>
</parameternamelist>
<parameterdescription>
<para>returns the current status. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1170" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a1f2f6351c86ea64c85e03afe46649652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXIsNumpyShape</definition>
        <argsstring>(bool *curr)</argsstring>
        <name>MXIsNumpyShape</name>
        <param>
          <type>bool *</type>
          <declname>curr</declname>
        </param>
        <briefdescription>
<para>get whether numpy compatibility is on </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>curr</parametername>
</parameternamelist>
<parameterdescription>
<para>returns the current status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1176" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="279" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a9f07f7d82905b8fd155aebff7109a45f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSetIsNumpyShape</definition>
        <argsstring>(int is_np_shape, int *prev)</argsstring>
        <name>MXSetIsNumpyShape</name>
        <param>
          <type>int</type>
          <declname>is_np_shape</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
<para>set numpy compatibility switch </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_np_shape</parametername>
</parameternamelist>
<parameterdescription>
<para>1 when numpy shape semantics is on, 0 when off </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prev</parametername>
</parameternamelist>
<parameterdescription>
<para>returns the previous status before this set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1183" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="285" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a53f3bbc41e275485d1d6cd21f40abb7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXAutogradMarkVariables</definition>
        <argsstring>(mx_uint num_var, NDArrayHandle *var_handles, mx_uint *reqs_array, NDArrayHandle *grad_handles)</argsstring>
        <name>MXAutogradMarkVariables</name>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_var</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>var_handles</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>reqs_array</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>grad_handles</declname>
        </param>
        <briefdescription>
<para>mark NDArrays as variables to compute gradient for autograd </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_var</parametername>
</parameternamelist>
<parameterdescription>
<para>number of variable NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>var_handles</parametername>
</parameternamelist>
<parameterdescription>
<para>variable NDArrays </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1190" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="291" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a4ea5441aa16bff2121855a5afb7be84e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXAutogradComputeGradient</definition>
        <argsstring>(mx_uint num_output, NDArrayHandle *output_handles)</argsstring>
        <name>MXAutogradComputeGradient</name>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_output</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>output_handles</declname>
        </param>
        <briefdescription>
<para>compute the gradient of outputs w.r.t variabels </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_output</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output NDArray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_handles</parametername>
</parameternamelist>
<parameterdescription>
<para>output NDArrays </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1200" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a133d10a566764530bf3172e52afbe561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXAutogradBackward</definition>
        <argsstring>(mx_uint num_output, NDArrayHandle *output_handles, NDArrayHandle *ograd_handles, int retain_graph)</argsstring>
        <name>MXAutogradBackward</name>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_output</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>output_handles</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>ograd_handles</declname>
        </param>
        <param>
          <type>int</type>
          <declname>retain_graph</declname>
        </param>
        <briefdescription>
<para>compute the gradient of outputs w.r.t variabels </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_output</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output NDArray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_handles</parametername>
</parameternamelist>
<parameterdescription>
<para>output NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ograd_handles</parametername>
</parameternamelist>
<parameterdescription>
<para>head gradient for NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>retain_graph</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to keep the graph after backward </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1210" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="315" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad14437f7eeba78c360f9717c6b5af177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXAutogradBackwardEx</definition>
        <argsstring>(mx_uint num_output, NDArrayHandle *output_handles, NDArrayHandle *ograd_handles, mx_uint num_variables, NDArrayHandle *var_handles, int retain_graph, int create_graph, int is_train, NDArrayHandle **grad_handles, int **grad_stypes)</argsstring>
        <name>MXAutogradBackwardEx</name>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_output</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>output_handles</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>ograd_handles</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_variables</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>var_handles</declname>
        </param>
        <param>
          <type>int</type>
          <declname>retain_graph</declname>
        </param>
        <param>
          <type>int</type>
          <declname>create_graph</declname>
        </param>
        <param>
          <type>int</type>
          <declname>is_train</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>grad_handles</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>grad_stypes</declname>
        </param>
        <briefdescription>
<para>compute the gradient of outputs w.r.t variabels </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_output</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output NDArray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_handles</parametername>
</parameternamelist>
<parameterdescription>
<para>output NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ograd_handles</parametername>
</parameternamelist>
<parameterdescription>
<para>head gradient for NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_variables</parametername>
</parameternamelist>
<parameterdescription>
<para>number of variables </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1225" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="324" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a638b8ad3ae66ff77d17bd3ee504f12cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXAutogradGetSymbol</definition>
        <argsstring>(NDArrayHandle handle, SymbolHandle *out)</argsstring>
        <name>MXAutogradGetSymbol</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1240" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="374" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a46d056bad70ea014110923da41524cfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXCreateCachedOp</definition>
        <argsstring>(SymbolHandle handle, CachedOpHandle *out)</argsstring>
        <name>MXCreateCachedOp</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1aac4a2be6e40b0869bcc390a573a7e489" kindref="member">CachedOpHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>create cached operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1244" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="155" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a43627f2162552f27a6ced69309a9d269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXCreateCachedOpEx</definition>
        <argsstring>(SymbolHandle handle, int num_flags, const char **keys, const char **vals, CachedOpHandle *out)</argsstring>
        <name>MXCreateCachedOpEx</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_flags</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1aac4a2be6e40b0869bcc390a573a7e489" kindref="member">CachedOpHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>create cached operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1248" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="169" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a83a34d6df4290e5efd737293cf875a9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXFreeCachedOp</definition>
        <argsstring>(CachedOpHandle handle)</argsstring>
        <name>MXFreeCachedOp</name>
        <param>
          <type><ref refid="c__api_8h_1aac4a2be6e40b0869bcc390a573a7e489" kindref="member">CachedOpHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>free cached operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1256" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="185" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad4c2297db07b9610d39f1d0e12fdc2b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXInvokeCachedOp</definition>
        <argsstring>(CachedOpHandle handle, int num_inputs, NDArrayHandle *inputs, int *num_outputs, NDArrayHandle **outputs)</argsstring>
        <name>MXInvokeCachedOp</name>
        <param>
          <type><ref refid="c__api_8h_1aac4a2be6e40b0869bcc390a573a7e489" kindref="member">CachedOpHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_inputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_outputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>outputs</declname>
        </param>
        <briefdescription>
<para>invoke cached operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1260" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="192" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1afe351ede356dcbc6603d9969e7b642de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXInvokeCachedOpEx</definition>
        <argsstring>(CachedOpHandle handle, int num_inputs, NDArrayHandle *inputs, int *num_outputs, NDArrayHandle **outputs, const int **out_stypes)</argsstring>
        <name>MXInvokeCachedOpEx</name>
        <param>
          <type><ref refid="c__api_8h_1aac4a2be6e40b0869bcc390a573a7e489" kindref="member">CachedOpHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_inputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_outputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>out_stypes</declname>
        </param>
        <briefdescription>
<para>invoke a cached op </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the cached op </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>input NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_outputs</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputs</parametername>
</parameternamelist>
<parameterdescription>
<para>output NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_stypes</parametername>
</parameternamelist>
<parameterdescription>
<para>output ndarrays&apos; stypes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1275" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_ndarray.cc" bodystart="235" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac5a3fafe6616c4d246b24e4d11c65238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXListAllOpNames</definition>
        <argsstring>(mx_uint *out_size, const char ***out_array)</argsstring>
        <name>MXListAllOpNames</name>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_array</declname>
        </param>
        <briefdescription>
<para>list all the available operator names, include entries. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of returned array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_array</parametername>
</parameternamelist>
<parameterdescription>
<para>the output operator name array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1adf260642e451de37f37f6e1b69f5b47b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXListAllOpNames64</definition>
        <argsstring>(mx_int64 *out_size, const char ***out_array)</argsstring>
        <name>MXListAllOpNames64</name>
        <param>
          <type><ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a6eb35d17154ef093856e60e416d354cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolListAtomicSymbolCreators</definition>
        <argsstring>(mx_uint *out_size, AtomicSymbolCreator **out_array)</argsstring>
        <name>MXSymbolListAtomicSymbolCreators</name>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1aa2e96133f49cfdc1095da6cd08afbce0" kindref="member">AtomicSymbolCreator</ref> **</type>
          <declname>out_array</declname>
        </param>
        <briefdescription>
<para>list all the available AtomicSymbolEntry </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of returned array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_array</parametername>
</parameternamelist>
<parameterdescription>
<para>the output AtomicSymbolCreator array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1303" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aa311823f1957b3a0531cacc5af66a782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolListAtomicSymbolCreators64</definition>
        <argsstring>(mx_int64 *out_size, AtomicSymbolCreator **out_array)</argsstring>
        <name>MXSymbolListAtomicSymbolCreators64</name>
        <param>
          <type><ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1aa2e96133f49cfdc1095da6cd08afbce0" kindref="member">AtomicSymbolCreator</ref> **</type>
          <declname>out_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a272c88973b602d37a87df4a42cf7fb7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolGetAtomicSymbolName</definition>
        <argsstring>(AtomicSymbolCreator creator, const char **name)</argsstring>
        <name>MXSymbolGetAtomicSymbolName</name>
        <param>
          <type><ref refid="c__api_8h_1aa2e96133f49cfdc1095da6cd08afbce0" kindref="member">AtomicSymbolCreator</ref></type>
          <declname>creator</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get the name of an atomic symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>creator</parametername>
</parameternamelist>
<parameterdescription>
<para>the AtomicSymbolCreator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The returned name of the creator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1314" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="341" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a81194ff3c1b26c3f1a996554761f0d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolGetInputSymbols</definition>
        <argsstring>(SymbolHandle sym, SymbolHandle **inputs, int *input_size)</argsstring>
        <name>MXSymbolGetInputSymbols</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> **</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>input_size</declname>
        </param>
        <briefdescription>
<para>Get the input symbols of the graph. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>The graph. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>The input symbols of the graph. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of input symbols returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1323" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="357" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ae654cd97a3d31095a096644a9f0d4b3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolCutSubgraph</definition>
        <argsstring>(SymbolHandle sym, SymbolHandle **inputs, int *input_size)</argsstring>
        <name>MXSymbolCutSubgraph</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> **</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>input_size</declname>
        </param>
        <briefdescription>
<para>Cut a subgraph whose nodes are marked with a subgraph attribute. The input graph will be modified. A variable node will be created for each edge that connects to nodes outside the subgraph. The outside nodes that connect to the subgraph will be returned. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>The graph. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>The nodes that connect to the subgraph. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of such nodes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1335" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="371" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aa46875e507a638bd6c8a6c891a8f5934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolGetAtomicSymbolInfo</definition>
        <argsstring>(AtomicSymbolCreator creator, const char **name, const char **description, mx_uint *num_args, const char ***arg_names, const char ***arg_type_infos, const char ***arg_descriptions, const char **key_var_num_args, const char **return_type DEFAULT(NULL))</argsstring>
        <name>MXSymbolGetAtomicSymbolInfo</name>
        <param>
          <type><ref refid="c__api_8h_1aa2e96133f49cfdc1095da6cd08afbce0" kindref="member">AtomicSymbolCreator</ref></type>
          <declname>creator</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>description</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>arg_names</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>arg_type_infos</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>arg_descriptions</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>key_var_num_args</declname>
        </param>
        <param>
          <type>const char **return_type </type>
          <declname>DEFAULT</declname>
          <array>NULL</array>
        </param>
        <briefdescription>
<para>Get the detailed information about atomic symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>creator</parametername>
</parameternamelist>
<parameterdescription>
<para>the AtomicSymbolCreator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The returned name of the creator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>The returned description of the symbol. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_names</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_type_infos</parametername>
</parameternamelist>
<parameterdescription>
<para>Type informations about the arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_descriptions</parametername>
</parameternamelist>
<parameterdescription>
<para>Description information about the arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_var_num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyword argument for specifying variable number of arguments. When this parameter has non-zero length, the function allows variable number of positional arguments, and will need the caller to pass it in in MXSymbolCreateAtomicSymbol, With key = key_var_num_args, and value = number of positional arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>return_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Return type of the function, can be Symbol or Symbol[] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a9cd6ad8c274665172513707dd73262ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolCreateAtomicSymbol</definition>
        <argsstring>(AtomicSymbolCreator creator, mx_uint num_param, const char **keys, const char **vals, SymbolHandle *out)</argsstring>
        <name>MXSymbolCreateAtomicSymbol</name>
        <param>
          <type><ref refid="c__api_8h_1aa2e96133f49cfdc1095da6cd08afbce0" kindref="member">AtomicSymbolCreator</ref></type>
          <declname>creator</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_param</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create an AtomicSymbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>creator</parametername>
</parameternamelist>
<parameterdescription>
<para>the AtomicSymbolCreator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_param</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the keys to the params </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>the vals of the params </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the created symbol handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1373" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="115" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a738463b3d661aa4821caa4626092010f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolCreateVariable</definition>
        <argsstring>(const char *name, SymbolHandle *out)</argsstring>
        <name>MXSymbolCreateVariable</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create a Variable Symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the created symbol handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1384" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a72e684e635bb138c6382bd9c4e5957db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolCreateGroup</definition>
        <argsstring>(mx_uint num_symbols, SymbolHandle *symbols, SymbolHandle *out)</argsstring>
        <name>MXSymbolCreateGroup</name>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_symbols</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>symbols</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create a Symbol by grouping list of symbols together. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>number of symbols to be grouped </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>array of symbol handles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the created symbol handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1392" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="153" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a314035f352106ee44039bcbe166353b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolCreateFromFile</definition>
        <argsstring>(const char *fname, SymbolHandle *out)</argsstring>
        <name>MXSymbolCreateFromFile</name>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Load a symbol from a json file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the file name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the output symbol. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1401" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="420" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac6a2362d9cb7ba763810b971c9524521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolCreateFromJSON</definition>
        <argsstring>(const char *json, SymbolHandle *out)</argsstring>
        <name>MXSymbolCreateFromJSON</name>
        <param>
          <type>const char *</type>
          <declname>json</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Load a symbol from a json string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>json</parametername>
</parameternamelist>
<parameterdescription>
<para>the json string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the output symbol. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1408" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="434" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a08c7512750962bb7fcc2f9aab971e2c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolRemoveAmpCast</definition>
        <argsstring>(SymbolHandle sym_handle, SymbolHandle *ret_sym_handle)</argsstring>
        <name>MXSymbolRemoveAmpCast</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym_handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>ret_sym_handle</declname>
        </param>
        <briefdescription>
<para>Remove the operators amp_cast and amp_multicast. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the input symbol. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ret_sym_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the output symbol. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1415" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="444" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a8b3a7394a8a641f2490f4c5246be1083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolSaveToFile</definition>
        <argsstring>(SymbolHandle symbol, const char *fname)</argsstring>
        <name>MXSymbolSaveToFile</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
<para>Save a symbol into a json file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the input symbol. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the file name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1422" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="454" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a5c99eac0fe3cfa0912259d0fa12b6651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolSaveToJSON</definition>
        <argsstring>(SymbolHandle symbol, const char **out_json)</argsstring>
        <name>MXSymbolSaveToJSON</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>out_json</declname>
        </param>
        <briefdescription>
<para>Save a symbol into a json string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the input symbol. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_json</parametername>
</parameternamelist>
<parameterdescription>
<para>output json string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1429" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="465" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a1070254ccff925195bf263b43762a06f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolFree</definition>
        <argsstring>(SymbolHandle symbol)</argsstring>
        <name>MXSymbolFree</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>Free the symbol handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the symbol </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1435" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="183" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a6f8fc1fb5c90c92498241b75f74cea86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolCopy</definition>
        <argsstring>(SymbolHandle symbol, SymbolHandle *out)</argsstring>
        <name>MXSymbolCopy</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Copy the symbol to another handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the source symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>used to hold the result of copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1442" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a5f4c41b8ca7c92524def534956b7e24a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolPrint</definition>
        <argsstring>(SymbolHandle symbol, const char **out_str)</argsstring>
        <name>MXSymbolPrint</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>out_str</declname>
        </param>
        <briefdescription>
<para>Print the content of symbol, used for debug. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_str</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to hold the output string of the printing. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1449" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a33606f8bf8413da87c9d499e2b2f1e88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolGetName</definition>
        <argsstring>(SymbolHandle symbol, const char **out, int *success)</argsstring>
        <name>MXSymbolGetName</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>success</declname>
        </param>
        <briefdescription>
<para>Get string name from symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the source symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The result name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>success</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the result is contained in out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1457" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="195" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1abca605833c1fb045e2e78c8f3be492ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolGetAttr</definition>
        <argsstring>(SymbolHandle symbol, const char *key, const char **out, int *success)</argsstring>
        <name>MXSymbolGetAttr</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>success</declname>
        </param>
        <briefdescription>
<para>Get string attribute from symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the source symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the symbol. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The result attribute, can be NULL if the attribute do not exist. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>success</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the result is contained in out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1468" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="201" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aebeac35c3110eb391035fbbeb29e9436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolSetAttr</definition>
        <argsstring>(SymbolHandle symbol, const char *key, const char *value)</argsstring>
        <name>MXSymbolSetAttr</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set string attribute from symbol. NOTE: Setting attribute to a symbol can affect the semantics(mutable/immutable) of symbolic graph. </para>
        </briefdescription>
        <detaileddescription>
<para>Safe recommendaton: use immutable graph<itemizedlist>
<listitem><para>Only allow set attributes during creation of new symbol as optional parameter</para>
</listitem></itemizedlist>
</para>
<para>Mutable graph (be careful about the semantics):<itemizedlist>
<listitem><para>Allow set attr at any point.</para>
</listitem><listitem><para>Mutating an attribute of some common node of two graphs can cause confusion from user.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the source symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the symbol. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be saved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1488" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="225" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a9e4dc341e666c772e1b530920ba4a0e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolListAttr</definition>
        <argsstring>(SymbolHandle symbol, mx_uint *out_size, const char ***out)</argsstring>
        <name>MXSymbolListAttr</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get all attributes from symbol, including all descendents. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the source symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of output attributes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>2*out_size strings representing key value pairs. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1498" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="250" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac3bb9177224ea3b08a294dfb744e05fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolListAttrShallow</definition>
        <argsstring>(SymbolHandle symbol, mx_uint *out_size, const char ***out)</argsstring>
        <name>MXSymbolListAttrShallow</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get all attributes from symbol, excluding descendents. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the source symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of output attributes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>2*out_size strings representing key value pairs. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1508" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="280" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ade7acc2c570cc5b6eea2f1f2efc67a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolListArguments</definition>
        <argsstring>(SymbolHandle symbol, mx_uint *out_size, const char ***out_str_array)</argsstring>
        <name>MXSymbolListArguments</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_str_array</declname>
        </param>
        <briefdescription>
<para>List arguments in the symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>output size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_str_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to hold the output string array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1518" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="329" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a2b04cafa49299fa4567dd00c096a426a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolListArguments64</definition>
        <argsstring>(SymbolHandle symbol, size_t *out_size, const char ***out_str_array)</argsstring>
        <name>MXSymbolListArguments64</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_str_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aedf1da726aaacb87a5d959ed83f03f41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolListOutputs</definition>
        <argsstring>(SymbolHandle symbol, mx_uint *out_size, const char ***out_str_array)</argsstring>
        <name>MXSymbolListOutputs</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_str_array</declname>
        </param>
        <briefdescription>
<para>List returns in the symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>output size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_str_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to hold the output string array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1533" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="309" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac8e3812c93279e840ee99becd6cf1f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolListOutputs64</definition>
        <argsstring>(SymbolHandle symbol, size_t *out_size, const char ***out_str_array)</argsstring>
        <name>MXSymbolListOutputs64</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_str_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a970b94e3dfb72a2a76065149180c4f1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolGetNumOutputs</definition>
        <argsstring>(SymbolHandle symbol, mx_uint *output_count)</argsstring>
        <name>MXSymbolGetNumOutputs</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>output_count</declname>
        </param>
        <briefdescription>
<para>Get number of outputs of the symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>The symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of outputs </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1547" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a13816872b73d6c474686d985747e8c65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolGetInternals</definition>
        <argsstring>(SymbolHandle symbol, SymbolHandle *out)</argsstring>
        <name>MXSymbolGetInternals</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get a symbol that contains all the internals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>The symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output symbol whose outputs are all the internals. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1556" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="165" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a6050b4cfcb75ed3d0a44afb1b8df45cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolGetChildren</definition>
        <argsstring>(SymbolHandle symbol, SymbolHandle *out)</argsstring>
        <name>MXSymbolGetChildren</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get a symbol that contains only direct children. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>The symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output symbol whose outputs are the direct children. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1564" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="174" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a8e601320c59679d9423179f23f281bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolGetOutput</definition>
        <argsstring>(SymbolHandle symbol, mx_uint index, SymbolHandle *out)</argsstring>
        <name>MXSymbolGetOutput</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get index-th outputs of the symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>The symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the Index of the output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output symbol whose outputs are the index-th symbol. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1573" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="159" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a38e75c5a41473912e2d6cdfececba84d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolListAuxiliaryStates</definition>
        <argsstring>(SymbolHandle symbol, mx_uint *out_size, const char ***out_str_array)</argsstring>
        <name>MXSymbolListAuxiliaryStates</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_str_array</declname>
        </param>
        <briefdescription>
<para>List auxiliary states in the symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>output size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_str_array</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to hold the output string array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1584" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="335" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a3fc8ba4abaa5c607118d86e0bf9b7cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolListAuxiliaryStates64</definition>
        <argsstring>(SymbolHandle symbol, size_t *out_size, const char ***out_str_array)</argsstring>
        <name>MXSymbolListAuxiliaryStates64</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>out_str_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1588" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a879a5ee991393d364b787e948b4c9961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolCompose</definition>
        <argsstring>(SymbolHandle sym, const char *name, mx_uint num_args, const char **keys, SymbolHandle *args)</argsstring>
        <name>MXSymbolCompose</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Compose the symbol on other symbols. </para>
        </briefdescription>
        <detaileddescription>
<para>This function will change the sym hanlde. To achieve function apply behavior, copy the symbol first before apply.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>the symbol to apply </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>number of arguments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the key of keyword args (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to sym </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1606" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="320" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac2268c0bc7ad2f96d36bbbdab9a51c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolGrad</definition>
        <argsstring>(SymbolHandle sym, mx_uint num_wrt, const char **wrt, SymbolHandle *out)</argsstring>
        <name>MXSymbolGrad</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_wrt</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>wrt</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get the gradient graph of the symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>the symbol to get gradient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_wrt</parametername>
</parameternamelist>
<parameterdescription>
<para>number of arguments to get gradient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wrt</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the arguments to get gradient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned symbol that has gradient </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1620" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="875" bodyend="879"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1afaf03324563098f1ac4c23ecfc88b784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolInferShape</definition>
        <argsstring>(SymbolHandle sym, mx_uint num_args, const char **keys, const mx_uint *arg_ind_ptr, const mx_uint *arg_shape_data, mx_uint *in_shape_size, const mx_uint **in_shape_ndim, const mx_uint ***in_shape_data, mx_uint *out_shape_size, const mx_uint **out_shape_ndim, const mx_uint ***out_shape_data, mx_uint *aux_shape_size, const mx_uint **aux_shape_ndim, const mx_uint ***aux_shape_data, int *complete)</argsstring>
        <name>MXSymbolInferShape</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>arg_ind_ptr</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>arg_shape_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>in_shape_size</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> **</type>
          <declname>in_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> ***</type>
          <declname>in_shape_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_shape_size</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> **</type>
          <declname>out_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> ***</type>
          <declname>out_shape_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>aux_shape_size</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> **</type>
          <declname>aux_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> ***</type>
          <declname>aux_shape_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>complete</declname>
        </param>
        <briefdescription>
<para>DEPRECATED. Use MXSymbolInferShapeEx instead. infer shape of unknown input shapes given the known one. The shapes are packed into a CSR matrix represented by arg_ind_ptr and arg_shape_data The call will be treated as a kwargs call if key != nullptr or num_args==0, otherwise it is positional. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>numbe of input arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the key of keyword args (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_ind_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>the head pointer of the rows in CSR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the content of the CSR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_shape_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of in_shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_shape_ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of shape dimensions of eachs input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_shape_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of out_shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_shape_ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of shape dimensions of eachs input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of aux_shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape_ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of shape dimensions of eachs auxiliary shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the auxiliary shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>complete</parametername>
</parameternamelist>
<parameterdescription>
<para>whether infer shape completes or more information is needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1647" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="515" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a1e82c6710d318f98d8a11f1561d30610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolInferShape64</definition>
        <argsstring>(SymbolHandle sym, mx_uint num_args, const char **keys, const mx_int64 *arg_ind_ptr, const mx_int64 *arg_shape_data, size_t *in_shape_size, const int **in_shape_ndim, const mx_int64 ***in_shape_data, size_t *out_shape_size, const int **out_shape_ndim, const mx_int64 ***out_shape_data, size_t *aux_shape_size, const int **aux_shape_ndim, const mx_int64 ***aux_shape_data, int *complete)</argsstring>
        <name>MXSymbolInferShape64</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>arg_ind_ptr</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>arg_shape_data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>in_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>in_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> ***</type>
          <declname>in_shape_data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>out_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> ***</type>
          <declname>out_shape_data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>aux_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>aux_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> ***</type>
          <declname>aux_shape_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>complete</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1663" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a8662b2823646a4cbab15b8f17bffdd4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolInferShapeEx</definition>
        <argsstring>(SymbolHandle sym, mx_uint num_args, const char **keys, const mx_uint *arg_ind_ptr, const int *arg_shape_data, mx_uint *in_shape_size, const int **in_shape_ndim, const int ***in_shape_data, mx_uint *out_shape_size, const int **out_shape_ndim, const int ***out_shape_data, mx_uint *aux_shape_size, const int **aux_shape_ndim, const int ***aux_shape_data, int *complete)</argsstring>
        <name>MXSymbolInferShapeEx</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>arg_ind_ptr</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>arg_shape_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>in_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>in_shape_ndim</declname>
        </param>
        <param>
          <type>const int ***</type>
          <declname>in_shape_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>out_shape_ndim</declname>
        </param>
        <param>
          <type>const int ***</type>
          <declname>out_shape_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>aux_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>aux_shape_ndim</declname>
        </param>
        <param>
          <type>const int ***</type>
          <declname>aux_shape_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>complete</declname>
        </param>
        <briefdescription>
<para>infer shape of unknown input shapes given the known one. The shapes are packed into a CSR matrix represented by arg_ind_ptr and arg_shape_data The call will be treated as a kwargs call if key != nullptr or num_args==0, otherwise it is positional. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>numbe of input arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the key of keyword args (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_ind_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>the head pointer of the rows in CSR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the content of the CSR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_shape_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of in_shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_shape_ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of shape dimensions of eachs input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_shape_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of out_shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_shape_ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of shape dimensions of eachs input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of aux_shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape_ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of shape dimensions of eachs auxiliary shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the auxiliary shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>complete</parametername>
</parameternamelist>
<parameterdescription>
<para>whether infer shape completes or more information is needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1701" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="660" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a663589ab6f13cad7551570bb407db59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolInferShapeEx64</definition>
        <argsstring>(SymbolHandle sym, mx_uint num_args, const char **keys, const mx_int64 *arg_ind_ptr, const mx_int64 *arg_shape_data, size_t *in_shape_size, const int **in_shape_ndim, const mx_int64 ***in_shape_data, size_t *out_shape_size, const int **out_shape_ndim, const mx_int64 ***out_shape_data, size_t *aux_shape_size, const int **aux_shape_ndim, const mx_int64 ***aux_shape_data, int *complete)</argsstring>
        <name>MXSymbolInferShapeEx64</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>arg_ind_ptr</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>arg_shape_data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>in_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>in_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> ***</type>
          <declname>in_shape_data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>out_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> ***</type>
          <declname>out_shape_data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>aux_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>aux_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> ***</type>
          <declname>aux_shape_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>complete</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1717" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="697" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a664c85b47c69b81be3b9ea1dfcb72a94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolInferShapePartial</definition>
        <argsstring>(SymbolHandle sym, mx_uint num_args, const char **keys, const mx_uint *arg_ind_ptr, const mx_uint *arg_shape_data, mx_uint *in_shape_size, const mx_uint **in_shape_ndim, const mx_uint ***in_shape_data, mx_uint *out_shape_size, const mx_uint **out_shape_ndim, const mx_uint ***out_shape_data, mx_uint *aux_shape_size, const mx_uint **aux_shape_ndim, const mx_uint ***aux_shape_data, int *complete)</argsstring>
        <name>MXSymbolInferShapePartial</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>arg_ind_ptr</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>arg_shape_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>in_shape_size</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> **</type>
          <declname>in_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> ***</type>
          <declname>in_shape_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_shape_size</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> **</type>
          <declname>out_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> ***</type>
          <declname>out_shape_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>aux_shape_size</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> **</type>
          <declname>aux_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> ***</type>
          <declname>aux_shape_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>complete</declname>
        </param>
        <briefdescription>
<para>DEPRECATED. Use MXSymbolInferShapePartialEx instead. partially infer shape of unknown input shapes given the known one. </para>
        </briefdescription>
        <detaileddescription>
<para>Return partially inferred results if not all shapes could be inferred. The shapes are packed into a CSR matrix represented by arg_ind_ptr and arg_shape_data The call will be treated as a kwargs call if key != nullptr or num_args==0, otherwise it is positional.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>numbe of input arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the key of keyword args (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_ind_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>the head pointer of the rows in CSR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the content of the CSR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_shape_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of in_shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_shape_ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of shape dimensions of eachs input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_shape_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of out_shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_shape_ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of shape dimensions of eachs input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of aux_shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape_ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of shape dimensions of eachs auxiliary shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the auxiliary shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>complete</parametername>
</parameternamelist>
<parameterdescription>
<para>whether infer shape completes or more information is needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1758" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="734" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aa7b5036a340af92f3f8ac46487d7e388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolInferShapePartial64</definition>
        <argsstring>(SymbolHandle sym, mx_uint num_args, const char **keys, const mx_int64 *arg_ind_ptr, const mx_int64 *arg_shape_data, size_t *in_shape_size, const int **in_shape_ndim, const mx_int64 ***in_shape_data, size_t *out_shape_size, const int **out_shape_ndim, const mx_int64 ***out_shape_data, size_t *aux_shape_size, const int **aux_shape_ndim, const mx_int64 ***aux_shape_data, int *complete)</argsstring>
        <name>MXSymbolInferShapePartial64</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>arg_ind_ptr</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>arg_shape_data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>in_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>in_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> ***</type>
          <declname>in_shape_data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>out_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> ***</type>
          <declname>out_shape_data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>aux_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>aux_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> ***</type>
          <declname>aux_shape_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>complete</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1774" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad6bf673e38da2470f8ea554750060421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolInferShapePartialEx</definition>
        <argsstring>(SymbolHandle sym, mx_uint num_args, const char **keys, const mx_uint *arg_ind_ptr, const int *arg_shape_data, mx_uint *in_shape_size, const int **in_shape_ndim, const int ***in_shape_data, mx_uint *out_shape_size, const int **out_shape_ndim, const int ***out_shape_data, mx_uint *aux_shape_size, const int **aux_shape_ndim, const int ***aux_shape_data, int *complete)</argsstring>
        <name>MXSymbolInferShapePartialEx</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>arg_ind_ptr</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>arg_shape_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>in_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>in_shape_ndim</declname>
        </param>
        <param>
          <type>const int ***</type>
          <declname>in_shape_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>out_shape_ndim</declname>
        </param>
        <param>
          <type>const int ***</type>
          <declname>out_shape_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>aux_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>aux_shape_ndim</declname>
        </param>
        <param>
          <type>const int ***</type>
          <declname>aux_shape_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>complete</declname>
        </param>
        <briefdescription>
<para>partially infer shape of unknown input shapes given the known one. </para>
        </briefdescription>
        <detaileddescription>
<para>Return partially inferred results if not all shapes could be inferred. The shapes are packed into a CSR matrix represented by arg_ind_ptr and arg_shape_data The call will be treated as a kwargs call if key != nullptr or num_args==0, otherwise it is positional.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>numbe of input arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the key of keyword args (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_ind_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>the head pointer of the rows in CSR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the content of the CSR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_shape_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of in_shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_shape_ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of shape dimensions of eachs input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_shape_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of out_shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_shape_ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of shape dimensions of eachs input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the input shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of aux_shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape_ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of shape dimensions of eachs auxiliary shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the auxiliary shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>complete</parametername>
</parameternamelist>
<parameterdescription>
<para>whether infer shape completes or more information is needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1814" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="759" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aa5519cb6ce5bc4ae2e397aa1a2d8403c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolInferShapePartialEx64</definition>
        <argsstring>(SymbolHandle sym, mx_uint num_args, const char **keys, const mx_int64 *arg_ind_ptr, const mx_int64 *arg_shape_data, size_t *in_shape_size, const int **in_shape_ndim, const mx_int64 ***in_shape_data, size_t *out_shape_size, const int **out_shape_ndim, const mx_int64 ***out_shape_data, size_t *aux_shape_size, const int **aux_shape_ndim, const mx_int64 ***aux_shape_data, int *complete)</argsstring>
        <name>MXSymbolInferShapePartialEx64</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>arg_ind_ptr</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> *</type>
          <declname>arg_shape_data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>in_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>in_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> ***</type>
          <declname>in_shape_data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>out_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> ***</type>
          <declname>out_shape_data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>aux_shape_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>aux_shape_ndim</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a70a49df614c1dc766f462c828549aff3" kindref="member">mx_int64</ref> ***</type>
          <declname>aux_shape_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>complete</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1830" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="784" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a1eff7ea3fd2fe56509c75f5a610890e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolInferType</definition>
        <argsstring>(SymbolHandle sym, mx_uint num_args, const char **keys, const int *arg_type_data, mx_uint *in_type_size, const int **in_type_data, mx_uint *out_type_size, const int **out_type_data, mx_uint *aux_type_size, const int **aux_type_data, int *complete)</argsstring>
        <name>MXSymbolInferType</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>arg_type_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>in_type_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>in_type_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_type_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>out_type_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>aux_type_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>aux_type_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>complete</declname>
        </param>
        <briefdescription>
<para>infer type of unknown input types given the known one. The types are packed into a CSR matrix represented by arg_ind_ptr and arg_type_data The call will be treated as a kwargs call if key != nullptr or num_args==0, otherwise it is positional. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>numbe of input arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the key of keyword args (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_type_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the content of the CSR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_type_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of in_types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_type_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the input type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_type_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of out_types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_type_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the input type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_type_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of aux_types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_type_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the auxiliary type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>complete</parametername>
</parameternamelist>
<parameterdescription>
<para>whether infer type completes or more information is needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1864" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="809" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aef2aa2ec49929b49aa9193b516310fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSymbolInferTypePartial</definition>
        <argsstring>(SymbolHandle sym, mx_uint num_args, const char **keys, const int *arg_type_data, mx_uint *in_type_size, const int **in_type_data, mx_uint *out_type_size, const int **out_type_data, mx_uint *aux_type_size, const int **aux_type_data, int *complete)</argsstring>
        <name>MXSymbolInferTypePartial</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>arg_type_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>in_type_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>in_type_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_type_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>out_type_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>aux_type_size</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>aux_type_data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>complete</declname>
        </param>
        <briefdescription>
<para>partially infer type of unknown input types given the known one. </para>
        </briefdescription>
        <detaileddescription>
<para>Return partially inferred results if not all types could be inferred. The types are packed into a CSR matrix represented by arg_ind_ptr and arg_type_data The call will be treated as a kwargs call if key != nullptr or num_args==0, otherwise it is positional.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>numbe of input arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the key of keyword args (optional) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_type_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the content of the CSR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_type_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of in_types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_type_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the input type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_type_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of out_types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_type_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the input type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_type_size</parametername>
</parameternamelist>
<parameterdescription>
<para>sizeof the returning array of aux_types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_type_data</parametername>
</parameternamelist>
<parameterdescription>
<para>returning array of pointers to head of the auxiliary type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>complete</parametername>
</parameternamelist>
<parameterdescription>
<para>whether infer type completes or more information is needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1896" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="854" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac29eeff63582d5c2ed8a001d84944661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXQuantizeSymbol</definition>
        <argsstring>(SymbolHandle sym_handle, SymbolHandle *ret_sym_handle, const mx_uint num_excluded_symbols, const char **excluded_symbols, const mx_uint num_offline, const char **offline_params, const char *quantized_dtype, const bool calib_quantize)</argsstring>
        <name>MXQuantizeSymbol</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym_handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>ret_sym_handle</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_excluded_symbols</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>excluded_symbols</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_offline</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>offline_params</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>quantized_dtype</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>calib_quantize</declname>
        </param>
        <briefdescription>
<para>Convert a symbol into a quantized symbol where FP32 operators are replaced with INT8. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol to be converted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ret_sym_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>quantized symbol result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_excluded_symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>number of layers excluded from being quantized in the input symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>excluded_symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>op names to be excluded from being quantized </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_offline</parametername>
</parameternamelist>
<parameterdescription>
<para>number of parameters that are quantized offline </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offline_params</parametername>
</parameternamelist>
<parameterdescription>
<para>array of c strings representing the names of params quantized offline </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quantized_dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>the quantized destination type for input data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>calib_quantize</parametername>
</parameternamelist>
<parameterdescription>
<para><bold>Deprecated</bold>. quantize op will always be calibrated if could </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1919" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="881" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a316ab0e6ede9a0ab46b52fe16240605f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXReducePrecisionSymbol</definition>
        <argsstring>(SymbolHandle sym_handle, SymbolHandle *ret_sym_handle, mx_uint num_args, const int *arg_type_data, mx_uint num_ind_ptr, const int *ind_ptr, const int *target_dtype, const int cast_optional_params, const mx_uint num_target_dtype_op_names, const mx_uint num_fp32_op_names, const mx_uint num_widest_dtype_op_names, const mx_uint num_conditional_fp32_op_names, const mx_uint num_excluded_symbols, const mx_uint num_model_params, const char **target_dtype_op_names, const char **fp32_op_names, const char **widest_dtype_op_names, const char **conditional_fp32_op_names, const char **excluded_symbols, const char **conditional_param_names, const char **conditional_param_vals, const char **model_param_names, const char **arg_names)</argsstring>
        <name>MXReducePrecisionSymbol</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym_handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>ret_sym_handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>arg_type_data</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_ind_ptr</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>ind_ptr</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>target_dtype</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>cast_optional_params</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_target_dtype_op_names</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_fp32_op_names</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_widest_dtype_op_names</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_conditional_fp32_op_names</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_excluded_symbols</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_model_params</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>target_dtype_op_names</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>fp32_op_names</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>widest_dtype_op_names</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>conditional_fp32_op_names</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>excluded_symbols</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>conditional_param_names</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>conditional_param_vals</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>model_param_names</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>arg_names</declname>
        </param>
        <briefdescription>
<para>Convert a symbol into a mixed precision symbol with cast operators for target dtype casting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol to be converted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ret_sym_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>mixed precision symbol result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>number of arguments for known dtypes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_type_data</parametername>
</parameternamelist>
<parameterdescription>
<para>arg types of the arguments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>target_dtype for mixed precision symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cast_optional_params</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to cast optional params to target_dtype </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_target_dtype_op_names</parametername>
</parameternamelist>
<parameterdescription>
<para>number of ops to be casted to target_dtype </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_fp32_op_names</parametername>
</parameternamelist>
<parameterdescription>
<para>number of ops to be casted to FP32 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_widest_dtype_op_names</parametername>
</parameternamelist>
<parameterdescription>
<para>number of ops to be casted to widest dtype </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_conditional_fp32_op_names</parametername>
</parameternamelist>
<parameterdescription>
<para>number of ops to be casted to FP32 based on a condition </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_excluded_symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>number of symbols to be excluded from casting </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_model_params</parametername>
</parameternamelist>
<parameterdescription>
<para>number of model parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_widest_dtype_op_names</parametername>
</parameternamelist>
<parameterdescription>
<para>number of ops to be casted to the widest dtype </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_conditional_fp32_op_names</parametername>
</parameternamelist>
<parameterdescription>
<para>number of ops to be cast to fp32 based on precision </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_dtype_op_names</parametername>
</parameternamelist>
<parameterdescription>
<para>op names to be casted to target_dtype </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fp32_op_names</parametername>
</parameternamelist>
<parameterdescription>
<para>op names to be casted to fp32 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>widest_dtype_op_names</parametername>
</parameternamelist>
<parameterdescription>
<para>names to be casted to widest dtype </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conditional_fp32_op_names</parametername>
</parameternamelist>
<parameterdescription>
<para>names to be casted to FP32 conditionally </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>excluded_symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol names to be excluded from casting </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param_names</parametername>
</parameternamelist>
<parameterdescription>
<para>param names for conditional FP32 casting </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param_values</parametername>
</parameternamelist>
<parameterdescription>
<para>param values for conditional FP32 casting </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_names</parametername>
</parameternamelist>
<parameterdescription>
<para>argument names for which type information is provided </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model_param_names</parametername>
</parameternamelist>
<parameterdescription>
<para>names for model parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1951" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="996" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ab908194556088540993b442cdeedae6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXSetCalibTableToQuantizedSymbol</definition>
        <argsstring>(SymbolHandle qsym_handle, const mx_uint num_layers, const char **layer_names, const float *low_quantiles, const float *high_quantiles, SymbolHandle *ret_sym_handle)</argsstring>
        <name>MXSetCalibTableToQuantizedSymbol</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>qsym_handle</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_layers</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>layer_names</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>low_quantiles</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>high_quantiles</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>ret_sym_handle</declname>
        </param>
        <briefdescription>
<para>Set calibration table to node attributes in the sym. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol whose node attributes are to be set by calibration table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_layers</parametername>
</parameternamelist>
<parameterdescription>
<para>number of layers in the calibration table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>names stored as keys in the calibration table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>low_quantiles</parametername>
</parameternamelist>
<parameterdescription>
<para>low quantiles of layers stored in the calibration table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>high_quantiles</parametername>
</parameternamelist>
<parameterdescription>
<para>high quantiles of layers stored in the calibration table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ret_sym_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>returned symbol </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1983" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="1115" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aba7c7d84679900e90cb7d912116c6b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXGenBackendSubgraph</definition>
        <argsstring>(SymbolHandle sym_handle, const char *backend, SymbolHandle *ret_sym_handle)</argsstring>
        <name>MXGenBackendSubgraph</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym_handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>backend</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>ret_sym_handle</declname>
        </param>
        <briefdescription>
<para>Run subgraph pass based on the backend provided. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol to be converted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backend</parametername>
</parameternamelist>
<parameterdescription>
<para>backend names for subgraph pass </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ret_sym_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>returned symbol </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="1996" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="1136" bodyend="1163"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ae1eada007e7b21561ab0827927ce132f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXGenAtomicSymbolFromSymbol</definition>
        <argsstring>(SymbolHandle sym_handle, SymbolHandle *ret_sym_handle)</argsstring>
        <name>MXGenAtomicSymbolFromSymbol</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>sym_handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>ret_sym_handle</declname>
        </param>
        <briefdescription>
<para>Generate atomic symbol (able to be composed) from a source symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sym_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>source symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ret_sym_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>returned atomic symbol </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2004" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="1165" bodyend="1182"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ade1487656dfba3cae12c5bf676e08dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorFree</definition>
        <argsstring>(ExecutorHandle handle)</argsstring>
        <name>MXExecutorFree</name>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Delete the executor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the executor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2015" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac9f776a6e7be0bacda4dcd3efa5f7dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorPrint</definition>
        <argsstring>(ExecutorHandle handle, const char **out_str)</argsstring>
        <name>MXExecutorPrint</name>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>out_str</declname>
        </param>
        <briefdescription>
<para>Print the content of execution plan, used for debug. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the executor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_str</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to hold the output string of the printing. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2022" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a1f9987e701b810e0e79b5207fa215415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorForward</definition>
        <argsstring>(ExecutorHandle handle, int is_train)</argsstring>
        <name>MXExecutorForward</name>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>is_train</declname>
        </param>
        <briefdescription>
<para>Executor forward method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>executor handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_train</parametername>
</parameternamelist>
<parameterdescription>
<para>int value to indicate whether the forward pass is for evaluation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2030" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad8f92bb15e11058abe12959cfc4dcbb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorBackward</definition>
        <argsstring>(ExecutorHandle handle, mx_uint len, NDArrayHandle *head_grads)</argsstring>
        <name>MXExecutorBackward</name>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>head_grads</declname>
        </param>
        <briefdescription>
<para>Excecutor run backward. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>execute handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>lenth </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>head_grads</parametername>
</parameternamelist>
<parameterdescription>
<para>NDArray handle for heads&apos; gradient</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2040" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a3a211f3e0c6270271ce4fe79228dd0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorBackwardEx</definition>
        <argsstring>(ExecutorHandle handle, mx_uint len, NDArrayHandle *head_grads, int is_train)</argsstring>
        <name>MXExecutorBackwardEx</name>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>head_grads</declname>
        </param>
        <param>
          <type>int</type>
          <declname>is_train</declname>
        </param>
        <briefdescription>
<para>Excecutor run backward. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>execute handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>lenth </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>head_grads</parametername>
</parameternamelist>
<parameterdescription>
<para>NDArray handle for heads&apos; gradient </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_train</parametername>
</parameternamelist>
<parameterdescription>
<para>int value to indicate whether the backward pass is for evaluation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2053" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="63" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a442845c8ef89d4c849f468ea2b7717f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorOutputs</definition>
        <argsstring>(ExecutorHandle handle, mx_uint *out_size, NDArrayHandle **out)</argsstring>
        <name>MXExecutorOutputs</name>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get executor&apos;s head NDArray. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>executor handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>output narray vector size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>out put narray handles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2065" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="78" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a10a6deacde18b7d52b44eee0ddddf0e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorBind</definition>
        <argsstring>(SymbolHandle symbol_handle, int dev_type, int dev_id, mx_uint len, NDArrayHandle *in_args, NDArrayHandle *arg_grad_store, mx_uint *grad_req_type, mx_uint aux_states_len, NDArrayHandle *aux_states, ExecutorHandle *out)</argsstring>
        <name>MXExecutorBind</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>in_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>arg_grad_store</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>grad_req_type</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>aux_states_len</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>aux_states</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Generate Executor from symbol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_type</parametername>
</parameternamelist>
<parameterdescription>
<para>device type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_id</parametername>
</parameternamelist>
<parameterdescription>
<para>device id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_args</parametername>
</parameternamelist>
<parameterdescription>
<para>in args array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_grad_store</parametername>
</parameternamelist>
<parameterdescription>
<para>arg grads handle array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grad_req_type</parametername>
</parameternamelist>
<parameterdescription>
<para>grad req array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_states_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of auxiliary states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_states</parametername>
</parameternamelist>
<parameterdescription>
<para>auxiliary states array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output executor handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2084" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="96" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad1646370458f8a3ddb9e4f3365c5e510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorBindX</definition>
        <argsstring>(SymbolHandle symbol_handle, int dev_type, int dev_id, mx_uint num_map_keys, const char **map_keys, const int *map_dev_types, const int *map_dev_ids, mx_uint len, NDArrayHandle *in_args, NDArrayHandle *arg_grad_store, mx_uint *grad_req_type, mx_uint aux_states_len, NDArrayHandle *aux_states, ExecutorHandle *out)</argsstring>
        <name>MXExecutorBindX</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_map_keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>map_keys</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>map_dev_types</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>map_dev_ids</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>in_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>arg_grad_store</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>grad_req_type</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>aux_states_len</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>aux_states</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Generate Executor from symbol, This is advanced function, allow specify group2ctx map. The user can annotate &quot;ctx_group&quot; attribute to name each group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_type</parametername>
</parameternamelist>
<parameterdescription>
<para>device type of default context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_id</parametername>
</parameternamelist>
<parameterdescription>
<para>device id of default context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_map_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>size of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>keys of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_dev_types</parametername>
</parameternamelist>
<parameterdescription>
<para>device type of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_dev_ids</parametername>
</parameternamelist>
<parameterdescription>
<para>device id of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_args</parametername>
</parameternamelist>
<parameterdescription>
<para>in args array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_grad_store</parametername>
</parameternamelist>
<parameterdescription>
<para>arg grads handle array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grad_req_type</parametername>
</parameternamelist>
<parameterdescription>
<para>grad req array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_states_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of auxiliary states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_states</parametername>
</parameternamelist>
<parameterdescription>
<para>auxiliary states array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output executor handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2115" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="113" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a8139e691c88ebcf082f9e954598e0e86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorBindEX</definition>
        <argsstring>(SymbolHandle symbol_handle, int dev_type, int dev_id, mx_uint num_map_keys, const char **map_keys, const int *map_dev_types, const int *map_dev_ids, mx_uint len, NDArrayHandle *in_args, NDArrayHandle *arg_grad_store, mx_uint *grad_req_type, mx_uint aux_states_len, NDArrayHandle *aux_states, ExecutorHandle shared_exec, ExecutorHandle *out)</argsstring>
        <name>MXExecutorBindEX</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_map_keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>map_keys</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>map_dev_types</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>map_dev_ids</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>in_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>arg_grad_store</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>grad_req_type</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>aux_states_len</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>aux_states</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>shared_exec</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Generate Executor from symbol, This is advanced function, allow specify group2ctx map. The user can annotate &quot;ctx_group&quot; attribute to name each group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_type</parametername>
</parameternamelist>
<parameterdescription>
<para>device type of default context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_id</parametername>
</parameternamelist>
<parameterdescription>
<para>device id of default context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_map_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>size of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>keys of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_dev_types</parametername>
</parameternamelist>
<parameterdescription>
<para>device type of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_dev_ids</parametername>
</parameternamelist>
<parameterdescription>
<para>device id of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_args</parametername>
</parameternamelist>
<parameterdescription>
<para>in args array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_grad_store</parametername>
</parameternamelist>
<parameterdescription>
<para>arg grads handle array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grad_req_type</parametername>
</parameternamelist>
<parameterdescription>
<para>grad req array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_states_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of auxiliary states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_states</parametername>
</parameternamelist>
<parameterdescription>
<para>auxiliary states array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_exec</parametername>
</parameternamelist>
<parameterdescription>
<para>input executor handle for memory sharing </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output executor handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2151" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="135" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ae8bc5c6380c5c7aaa6c8c6b884482e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorSimpleBind</definition>
        <argsstring>(SymbolHandle symbol_handle, int dev_type, int dev_id, const mx_uint num_g2c_keys, const char **g2c_keys, const int *g2c_dev_types, const int *g2c_dev_ids, const mx_uint provided_grad_req_list_len, const char **provided_grad_req_names, const char **provided_grad_req_types, const mx_uint num_provided_arg_shapes, const char **provided_arg_shape_names, const mx_uint *provided_arg_shape_data, const mx_uint *provided_arg_shape_idx, const mx_uint num_provided_arg_dtypes, const char **provided_arg_dtype_names, const int *provided_arg_dtypes, const mx_uint num_provided_arg_stypes, const char **provided_arg_stype_names, const int *provided_arg_stypes, const mx_uint num_shared_arg_names, const char **shared_arg_name_list, int *shared_buffer_len, const char **shared_buffer_name_list, NDArrayHandle *shared_buffer_handle_list, const char ***updated_shared_buffer_name_list, NDArrayHandle **updated_shared_buffer_handle_list, mx_uint *num_in_args, NDArrayHandle **in_args, NDArrayHandle **arg_grads, mx_uint *num_aux_states, NDArrayHandle **aux_states, ExecutorHandle shared_exec_handle, ExecutorHandle *out)</argsstring>
        <name>MXExecutorSimpleBind</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_g2c_keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>g2c_keys</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>g2c_dev_types</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>g2c_dev_ids</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>provided_grad_req_list_len</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>provided_grad_req_names</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>provided_grad_req_types</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_provided_arg_shapes</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>provided_arg_shape_names</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>provided_arg_shape_data</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>provided_arg_shape_idx</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_provided_arg_dtypes</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>provided_arg_dtype_names</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>provided_arg_dtypes</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_provided_arg_stypes</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>provided_arg_stype_names</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>provided_arg_stypes</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_shared_arg_names</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>shared_arg_name_list</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>shared_buffer_len</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>shared_buffer_name_list</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>shared_buffer_handle_list</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>updated_shared_buffer_name_list</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>updated_shared_buffer_handle_list</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_in_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>in_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>arg_grads</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_aux_states</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>aux_states</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>shared_exec_handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>DEPRECATED. Use MXExecutorSimpleBindEx instead. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_type</parametername>
</parameternamelist>
<parameterdescription>
<para>default device type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_id</parametername>
</parameternamelist>
<parameterdescription>
<para>default device id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_g2c_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>number of group2ctx keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g2c_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>key list of group2ctx </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g2c_dev_types</parametername>
</parameternamelist>
<parameterdescription>
<para>device type list of group2ctx </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g2c_dev_ids</parametername>
</parameternamelist>
<parameterdescription>
<para>id list of group2ctx </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_grad_req_list_len</parametername>
</parameternamelist>
<parameterdescription>
<para>grad_req length provided by users in front-end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_grad_req_names</parametername>
</parameternamelist>
<parameterdescription>
<para>grad_req names provided by users in front-end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_grad_req_types</parametername>
</parameternamelist>
<parameterdescription>
<para>req types provided by users in front-end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_provided_arg_shapes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of user provided in_arg and aux_state shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_shape_names</parametername>
</parameternamelist>
<parameterdescription>
<para>name list of provided shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>provided shape data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_shape_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>provided shape data index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_provided_arg_dtypes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of user provided in_arg and axu_state dtypes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_dtype_names</parametername>
</parameternamelist>
<parameterdescription>
<para>argument name list of provided dtypes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_dtypes</parametername>
</parameternamelist>
<parameterdescription>
<para>data of provided dtypes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_provided_arg_stypes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of user provided in_arg and axu_state storage types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_stype_names</parametername>
</parameternamelist>
<parameterdescription>
<para>argument name list of provided storage types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_stypes</parametername>
</parameternamelist>
<parameterdescription>
<para>data of provided storage types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_shared_arg_names</parametername>
</parameternamelist>
<parameterdescription>
<para>number of parameter names passed from _bind_ith_exec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_arg_name_list</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter name list passed from _bind_ith_exec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_buffer_len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of shared data arrays passed from _bind_ith_exec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_buffer_name_list</parametername>
</parameternamelist>
<parameterdescription>
<para>shared data array names passed from _bind_ith_exec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_buffer_handle_list</parametername>
</parameternamelist>
<parameterdescription>
<para>shared data array handles passed from _bind_ith_exec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updated_shared_buffer_name_list</parametername>
</parameternamelist>
<parameterdescription>
<para>updated shared data array names after binding </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updated_shared_buffer_handle_list</parametername>
</parameternamelist>
<parameterdescription>
<para>updated shared data arrays after binding </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_in_args</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input arguments of this sym </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_args</parametername>
</parameternamelist>
<parameterdescription>
<para>list_arguments associated with the current executor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_grads</parametername>
</parameternamelist>
<parameterdescription>
<para>list of gradients of in_args associated with the current executor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_aux_states</parametername>
</parameternamelist>
<parameterdescription>
<para>number of aux states of this sym </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_states</parametername>
</parameternamelist>
<parameterdescription>
<para>list_auxiliary_states associated with the current executor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_exec_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>shared excutor handle passed from _bind_ith_exec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle of the executor to be created </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2168" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="221" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a0c9a053fc6073001c007767d4794504c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorSimpleBindEx</definition>
        <argsstring>(SymbolHandle symbol_handle, int dev_type, int dev_id, const mx_uint num_g2c_keys, const char **g2c_keys, const int *g2c_dev_types, const int *g2c_dev_ids, const mx_uint provided_grad_req_list_len, const char **provided_grad_req_names, const char **provided_grad_req_types, const mx_uint num_provided_arg_shapes, const char **provided_arg_shape_names, const int *provided_arg_shape_data, const mx_uint *provided_arg_shape_idx, const mx_uint num_provided_arg_dtypes, const char **provided_arg_dtype_names, const int *provided_arg_dtypes, const mx_uint num_provided_arg_stypes, const char **provided_arg_stype_names, const int *provided_arg_stypes, const mx_uint num_shared_arg_names, const char **shared_arg_name_list, int *shared_buffer_len, const char **shared_buffer_name_list, NDArrayHandle *shared_buffer_handle_list, const char ***updated_shared_buffer_name_list, NDArrayHandle **updated_shared_buffer_handle_list, mx_uint *num_in_args, NDArrayHandle **in_args, NDArrayHandle **arg_grads, mx_uint *num_aux_states, NDArrayHandle **aux_states, ExecutorHandle shared_exec_handle, ExecutorHandle *out)</argsstring>
        <name>MXExecutorSimpleBindEx</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>symbol_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_g2c_keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>g2c_keys</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>g2c_dev_types</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>g2c_dev_ids</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>provided_grad_req_list_len</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>provided_grad_req_names</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>provided_grad_req_types</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_provided_arg_shapes</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>provided_arg_shape_names</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>provided_arg_shape_data</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>provided_arg_shape_idx</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_provided_arg_dtypes</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>provided_arg_dtype_names</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>provided_arg_dtypes</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_provided_arg_stypes</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>provided_arg_stype_names</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>provided_arg_stypes</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_shared_arg_names</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>shared_arg_name_list</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>shared_buffer_len</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>shared_buffer_name_list</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>shared_buffer_handle_list</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>updated_shared_buffer_name_list</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>updated_shared_buffer_handle_list</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_in_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>in_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>arg_grads</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_aux_states</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>aux_states</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>shared_exec_handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_type</parametername>
</parameternamelist>
<parameterdescription>
<para>default device type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_id</parametername>
</parameternamelist>
<parameterdescription>
<para>default device id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_g2c_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>number of group2ctx keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g2c_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>key list of group2ctx </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g2c_dev_types</parametername>
</parameternamelist>
<parameterdescription>
<para>device type list of group2ctx </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g2c_dev_ids</parametername>
</parameternamelist>
<parameterdescription>
<para>id list of group2ctx </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_grad_req_list_len</parametername>
</parameternamelist>
<parameterdescription>
<para>grad_req length provided by users in front-end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_grad_req_names</parametername>
</parameternamelist>
<parameterdescription>
<para>grad_req names provided by users in front-end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_grad_req_types</parametername>
</parameternamelist>
<parameterdescription>
<para>req types provided by users in front-end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_provided_arg_shapes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of user provided in_arg and aux_state shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_shape_names</parametername>
</parameternamelist>
<parameterdescription>
<para>name list of provided shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_shape_data</parametername>
</parameternamelist>
<parameterdescription>
<para>provided shape data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_shape_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>provided shape data index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_provided_arg_dtypes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of user provided in_arg and axu_state dtypes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_dtype_names</parametername>
</parameternamelist>
<parameterdescription>
<para>argument name list of provided dtypes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_dtypes</parametername>
</parameternamelist>
<parameterdescription>
<para>data of provided dtypes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_provided_arg_stypes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of user provided in_arg and axu_state storage types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_stype_names</parametername>
</parameternamelist>
<parameterdescription>
<para>argument name list of provided storage types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provided_arg_stypes</parametername>
</parameternamelist>
<parameterdescription>
<para>data of provided storage types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_shared_arg_names</parametername>
</parameternamelist>
<parameterdescription>
<para>number of parameter names passed from _bind_ith_exec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_arg_name_list</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter name list passed from _bind_ith_exec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_buffer_len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of shared data arrays passed from _bind_ith_exec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_buffer_name_list</parametername>
</parameternamelist>
<parameterdescription>
<para>shared data array names passed from _bind_ith_exec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_buffer_handle_list</parametername>
</parameternamelist>
<parameterdescription>
<para>shared data array handles passed from _bind_ith_exec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updated_shared_buffer_name_list</parametername>
</parameternamelist>
<parameterdescription>
<para>updated shared data array names after binding </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updated_shared_buffer_handle_list</parametername>
</parameternamelist>
<parameterdescription>
<para>updated shared data arrays after binding </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_in_args</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input arguments of this sym </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_args</parametername>
</parameternamelist>
<parameterdescription>
<para>list_arguments associated with the current executor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_grads</parametername>
</parameternamelist>
<parameterdescription>
<para>list of gradients of in_args associated with the current executor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_aux_states</parametername>
</parameternamelist>
<parameterdescription>
<para>number of aux states of this sym </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_states</parametername>
</parameternamelist>
<parameterdescription>
<para>list_auxiliary_states associated with the current executor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_exec_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>shared excutor handle passed from _bind_ith_exec </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle of the executor to be created </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2204" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="555" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ada058d536ff48a8dca5bc21a81705f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorReshape</definition>
        <argsstring>(int partial_shaping, int allow_up_sizing, int dev_type, int dev_id, mx_uint num_map_keys, const char **map_keys, const int *map_dev_types, const int *map_dev_ids, const mx_uint num_provided_arg_shapes, const char **provided_arg_shape_names, const mx_uint *provided_arg_shape_data, const mx_uint *provided_arg_shape_idx, mx_uint *num_in_args, NDArrayHandle **in_args, NDArrayHandle **arg_grads, mx_uint *num_aux_states, NDArrayHandle **aux_states, ExecutorHandle shared_exec, ExecutorHandle *out)</argsstring>
        <name>MXExecutorReshape</name>
        <param>
          <type>int</type>
          <declname>partial_shaping</declname>
        </param>
        <param>
          <type>int</type>
          <declname>allow_up_sizing</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_map_keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>map_keys</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>map_dev_types</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>map_dev_ids</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_provided_arg_shapes</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>provided_arg_shape_names</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>provided_arg_shape_data</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>provided_arg_shape_idx</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_in_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>in_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>arg_grads</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_aux_states</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>aux_states</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>shared_exec</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>DEPRECATED. Use MXExecutorReshapeEx instead. Return a new executor with the same symbol and shared memory, but different input/output shapes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partial_shaping</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to allow changing the shape of unspecified arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allow_up_sizing</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to allow allocating new ndarrays that&apos;s larger than the original. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_type</parametername>
</parameternamelist>
<parameterdescription>
<para>device type of default context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_id</parametername>
</parameternamelist>
<parameterdescription>
<para>device id of default context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_map_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>size of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>keys of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_dev_types</parametername>
</parameternamelist>
<parameterdescription>
<para>device type of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_dev_ids</parametername>
</parameternamelist>
<parameterdescription>
<para>device id of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_in_args</parametername>
</parameternamelist>
<parameterdescription>
<para>length of in_args </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_args</parametername>
</parameternamelist>
<parameterdescription>
<para>in args array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_grads</parametername>
</parameternamelist>
<parameterdescription>
<para>arg grads handle array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_aux_states</parametername>
</parameternamelist>
<parameterdescription>
<para>length of auxiliary states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_states</parametername>
</parameternamelist>
<parameterdescription>
<para>auxiliary states array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_exec</parametername>
</parameternamelist>
<parameterdescription>
<para>input executor handle for memory sharing </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output executor handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new executor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2260" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="852" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac9614563e5b3fa43bfa5ddb19741da3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorReshapeEx</definition>
        <argsstring>(int partial_shaping, int allow_up_sizing, int dev_type, int dev_id, mx_uint num_map_keys, const char **map_keys, const int *map_dev_types, const int *map_dev_ids, const mx_uint num_provided_arg_shapes, const char **provided_arg_shape_names, const int *provided_arg_shape_data, const mx_uint *provided_arg_shape_idx, mx_uint *num_in_args, NDArrayHandle **in_args, NDArrayHandle **arg_grads, mx_uint *num_aux_states, NDArrayHandle **aux_states, ExecutorHandle shared_exec, ExecutorHandle *out)</argsstring>
        <name>MXExecutorReshapeEx</name>
        <param>
          <type>int</type>
          <declname>partial_shaping</declname>
        </param>
        <param>
          <type>int</type>
          <declname>allow_up_sizing</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_map_keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>map_keys</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>map_dev_types</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>map_dev_ids</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_provided_arg_shapes</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>provided_arg_shape_names</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>provided_arg_shape_data</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>provided_arg_shape_idx</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_in_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>in_args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>arg_grads</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_aux_states</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> **</type>
          <declname>aux_states</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>shared_exec</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Return a new executor with the same symbol and shared memory, but different input/output shapes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partial_shaping</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to allow changing the shape of unspecified arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allow_up_sizing</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to allow allocating new ndarrays that&apos;s larger than the original. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_type</parametername>
</parameternamelist>
<parameterdescription>
<para>device type of default context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_id</parametername>
</parameternamelist>
<parameterdescription>
<para>device id of default context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_map_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>size of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_keys</parametername>
</parameternamelist>
<parameterdescription>
<para>keys of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_dev_types</parametername>
</parameternamelist>
<parameterdescription>
<para>device type of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map_dev_ids</parametername>
</parameternamelist>
<parameterdescription>
<para>device id of group2ctx map </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_in_args</parametername>
</parameternamelist>
<parameterdescription>
<para>length of in_args </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_args</parametername>
</parameternamelist>
<parameterdescription>
<para>in args array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_grads</parametername>
</parameternamelist>
<parameterdescription>
<para>arg grads handle array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_aux_states</parametername>
</parameternamelist>
<parameterdescription>
<para>length of auxiliary states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux_states</parametername>
</parameternamelist>
<parameterdescription>
<para>auxiliary states array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_exec</parametername>
</parameternamelist>
<parameterdescription>
<para>input executor handle for memory sharing </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output executor handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new executor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2300" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="943" bodyend="1032"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a09458f50f03f34fca008032873a2ae59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorGetOptimizedSymbol</definition>
        <argsstring>(ExecutorHandle handle, SymbolHandle *out)</argsstring>
        <name>MXExecutorGetOptimizedSymbol</name>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>get optimized graph from graph executor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2323" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="1034" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1abae91a5d7847020e14395e078144489a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorSetMonitorCallback</definition>
        <argsstring>(ExecutorHandle handle, ExecutorMonitorCallback callback, void *callback_handle)</argsstring>
        <name>MXExecutorSetMonitorCallback</name>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>ExecutorMonitorCallback</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>callback_handle</declname>
        </param>
        <briefdescription>
<para>set a call back to notify the completion of operation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2328" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="1046" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a992ced6e9b9aacb58b1ce47ecd9fd28f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXExecutorSetMonitorCallbackEX</definition>
        <argsstring>(ExecutorHandle handle, ExecutorMonitorCallback callback, void *callback_handle, bool monitor_all)</argsstring>
        <name>MXExecutorSetMonitorCallbackEX</name>
        <param>
          <type><ref refid="c__api_8h_1a6f224ee35892507405ced8429d874726" kindref="member">ExecutorHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>ExecutorMonitorCallback</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>callback_handle</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>monitor_all</declname>
        </param>
        <briefdescription>
<para>set a call back to notify the completion of operation </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>monitor_all</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, monitor both input and output, otherwise monitor output only. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2336" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_executor.cc" bodystart="1061" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aa13fb35019b0c42dcfee185b2f9e09d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXListDataIters</definition>
        <argsstring>(mx_uint *out_size, DataIterCreator **out_array)</argsstring>
        <name>MXListDataIters</name>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>out_size</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a0b9b13ccb06a6a4f05d211261fa883dd" kindref="member">DataIterCreator</ref> **</type>
          <declname>out_array</declname>
        </param>
        <briefdescription>
<para>List all the available iterator entries. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of returned iterators </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_array</parametername>
</parameternamelist>
<parameterdescription>
<para>the output iteratos entries </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2348" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="825" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a361c4a5360734e430c54a754cc581354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXDataIterCreateIter</definition>
        <argsstring>(DataIterCreator handle, mx_uint num_param, const char **keys, const char **vals, DataIterHandle *out)</argsstring>
        <name>MXDataIterCreateIter</name>
        <param>
          <type><ref refid="c__api_8h_1a0b9b13ccb06a6a4f05d211261fa883dd" kindref="member">DataIterCreator</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_param</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>vals</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1abce84fe05f55709d643bcfd0a4e4620b" kindref="member">DataIterHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Init an iterator, init with parameters the array size of passed in arguments. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>of the iterator creator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_param</parametername>
</parameternamelist>
<parameterdescription>
<para>number of parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>resulting iterator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2360" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="847" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a795614eb68a4fead826202a5b5ba9517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXDataIterGetIterInfo</definition>
        <argsstring>(DataIterCreator creator, const char **name, const char **description, mx_uint *num_args, const char ***arg_names, const char ***arg_type_infos, const char ***arg_descriptions)</argsstring>
        <name>MXDataIterGetIterInfo</name>
        <param>
          <type><ref refid="c__api_8h_1a0b9b13ccb06a6a4f05d211261fa883dd" kindref="member">DataIterCreator</ref></type>
          <declname>creator</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>description</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>arg_names</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>arg_type_infos</declname>
        </param>
        <param>
          <type>const char ***</type>
          <declname>arg_descriptions</declname>
        </param>
        <briefdescription>
<para>Get the detailed information about data iterator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>creator</parametername>
</parameternamelist>
<parameterdescription>
<para>the DataIterCreator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The returned name of the creator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>The returned description of the symbol. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_args</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_names</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_type_infos</parametername>
</parameternamelist>
<parameterdescription>
<para>Type informations about the arguments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_descriptions</parametername>
</parameternamelist>
<parameterdescription>
<para>Description information about the arguments. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2376" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="834" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a29e117922acfbc95828433e736bcc3af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXDataIterFree</definition>
        <argsstring>(DataIterHandle handle)</argsstring>
        <name>MXDataIterFree</name>
        <param>
          <type><ref refid="c__api_8h_1abce84fe05f55709d643bcfd0a4e4620b" kindref="member">DataIterHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Free the handle to the IO module. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle pointer to the data iterator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2388" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="865" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a8be0adeef4b87243a5eda12f17e64e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXDataIterNext</definition>
        <argsstring>(DataIterHandle handle, int *out)</argsstring>
        <name>MXDataIterNext</name>
        <param>
          <type><ref refid="c__api_8h_1abce84fe05f55709d643bcfd0a4e4620b" kindref="member">DataIterHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Move iterator to next position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to iterator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>return value of next </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2395" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="877" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a21df19f3242a68d1c536783fcf35968a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXDataIterBeforeFirst</definition>
        <argsstring>(DataIterHandle handle)</argsstring>
        <name>MXDataIterBeforeFirst</name>
        <param>
          <type><ref refid="c__api_8h_1abce84fe05f55709d643bcfd0a4e4620b" kindref="member">DataIterHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Call iterator.Reset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to iterator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2402" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="871" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a0920d095f423b8bb34095406ea93a697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXDataIterGetData</definition>
        <argsstring>(DataIterHandle handle, NDArrayHandle *out)</argsstring>
        <name>MXDataIterGetData</name>
        <param>
          <type><ref refid="c__api_8h_1abce84fe05f55709d643bcfd0a4e4620b" kindref="member">DataIterHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get the handle to the NDArray of underlying data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle pointer to the data iterator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to underlying data NDArray </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2410" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="907" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1af1b36a78dd74707c10d31c39c4d429b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXDataIterGetIndex</definition>
        <argsstring>(DataIterHandle handle, uint64_t **out_index, uint64_t *out_size)</argsstring>
        <name>MXDataIterGetIndex</name>
        <param>
          <type><ref refid="c__api_8h_1abce84fe05f55709d643bcfd0a4e4620b" kindref="member">DataIterHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint64_t **</type>
          <declname>out_index</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>out_size</declname>
        </param>
        <briefdescription>
<para>Get the image index by array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle pointer to the data iterator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_index</parametername>
</parameternamelist>
<parameterdescription>
<para>output index of the array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_size</parametername>
</parameternamelist>
<parameterdescription>
<para>output size of the array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2419" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="899" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aec6d0d5055719576337687fc3702a899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXDataIterGetPadNum</definition>
        <argsstring>(DataIterHandle handle, int *pad)</argsstring>
        <name>MXDataIterGetPadNum</name>
        <param>
          <type><ref refid="c__api_8h_1abce84fe05f55709d643bcfd0a4e4620b" kindref="member">DataIterHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pad</declname>
        </param>
        <briefdescription>
<para>Get the padding number in current data batch. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle pointer to the data iterator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pad</parametername>
</parameternamelist>
<parameterdescription>
<para>pad number ptr </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2428" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="916" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a0c36af502d2a5746d841f50e1b0e71c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXDataIterGetLabel</definition>
        <argsstring>(DataIterHandle handle, NDArrayHandle *out)</argsstring>
        <name>MXDataIterGetLabel</name>
        <param>
          <type><ref refid="c__api_8h_1abce84fe05f55709d643bcfd0a4e4620b" kindref="member">DataIterHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Get the handle to the NDArray of underlying label. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle pointer to the data iterator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to underlying label NDArray </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2437" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="883" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a5c4a11b4fccf320d1af0f63b40fff58a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXInitPSEnv</definition>
        <argsstring>(mx_uint num_vars, const char **keys, const char **vals)</argsstring>
        <name>MXInitPSEnv</name>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_vars</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Initialized ps-lite environment variables. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_vars</parametername>
</parameternamelist>
<parameterdescription>
<para>number of variables to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>environment keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>environment values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2448" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1186" bodyend="1196"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a2ef1a35e886c0addf294429e27ea9637" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreCreate</definition>
        <argsstring>(const char *type, KVStoreHandle *out)</argsstring>
        <name>MXKVStoreCreate</name>
        <param>
          <type>const char *</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create a kvstore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of KVStore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output type of KVStore </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2459" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="923" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ab9e3c15451a1bc1d89f83773ae1185a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreSetGradientCompression</definition>
        <argsstring>(KVStoreHandle handle, mx_uint num_params, const char **keys, const char **vals)</argsstring>
        <name>MXKVStoreSetGradientCompression</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_params</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Set parameters to use low-bit compressed gradients. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the kvstore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>keys for compression parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>values for compression parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2469" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="930" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a915215184517bf663b0214fed32af6e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreFree</definition>
        <argsstring>(KVStoreHandle handle)</argsstring>
        <name>MXKVStoreFree</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Delete a KVStore handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the kvstore </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2479" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="944" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a475087b5464f9240d940ed4204a219b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreInit</definition>
        <argsstring>(KVStoreHandle handle, mx_uint num, const int *keys, NDArrayHandle *vals)</argsstring>
        <name>MXKVStoreInit</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Init a list of (key,value) pairs in kvstore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the kvstore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of key-value pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2488" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="950" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a4dc86980d7922f52970a8e3978bc87cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreInitEx</definition>
        <argsstring>(KVStoreHandle handle, mx_uint num, const char **keys, NDArrayHandle *vals)</argsstring>
        <name>MXKVStoreInitEx</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Init a list of (key,value) pairs in kvstore, where each key is a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the kvstore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of key-value pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2501" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="965" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a66c990fbb8e4bd320e5ad8d369155ad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStorePush</definition>
        <argsstring>(KVStoreHandle handle, mx_uint num, const int *keys, NDArrayHandle *vals, int priority)</argsstring>
        <name>MXKVStorePush</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>vals</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>Push a list of (key,value) pairs to kvstore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the kvstore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of key-value pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>the priority of the action </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2515" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="980" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aa59b7bf29d1a74fb1d1be6689c31913f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStorePushEx</definition>
        <argsstring>(KVStoreHandle handle, mx_uint num, const char **keys, NDArrayHandle *vals, int priority)</argsstring>
        <name>MXKVStorePushEx</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>vals</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>Push a list of (key,value) pairs to kvstore, where each key is a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the kvstore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of key-value pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>the priority of the action </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2529" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="996" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1abc67e59ae56aa34d7bedb74ce8ac2126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStorePullWithSparse</definition>
        <argsstring>(KVStoreHandle handle, mx_uint num, const int *keys, NDArrayHandle *vals, int priority, bool ignore_sparse)</argsstring>
        <name>MXKVStorePullWithSparse</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>vals</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_sparse</declname>
        </param>
        <briefdescription>
<para>pull a list of (key, value) pairs from the kvstore </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the kvstore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of key-value pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>the priority of the action </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ignore_sparse</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to ignore sparse arrays in the request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2544" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1044" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1af81383386f8ca676fe76546756ab8c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStorePullWithSparseEx</definition>
        <argsstring>(KVStoreHandle handle, mx_uint num, const char **keys, NDArrayHandle *vals, int priority, bool ignore_sparse)</argsstring>
        <name>MXKVStorePullWithSparseEx</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>vals</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_sparse</declname>
        </param>
        <briefdescription>
<para>pull a list of (key, value) pairs from the kvstore, where each key is a string </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the kvstore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of key-value pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>the priority of the action </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ignore_sparse</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to ignore sparse arrays in the request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2560" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1061" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a1230e78ca998f363192dc9b345a2442e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStorePull</definition>
        <argsstring>(KVStoreHandle handle, mx_uint num, const int *keys, NDArrayHandle *vals, int priority)</argsstring>
        <name>MXKVStorePull</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>vals</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>pull a list of (key, value) pairs from the kvstore </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the kvstore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of key-value pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>the priority of the action </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2575" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1012" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a25588eca6c42583151e77bcf71ffc3ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStorePullEx</definition>
        <argsstring>(KVStoreHandle handle, mx_uint num, const char **keys, NDArrayHandle *vals, int priority)</argsstring>
        <name>MXKVStorePullEx</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>vals</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>pull a list of (key, value) pairs from the kvstore, where each key is a string </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the kvstore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of key-value pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>the priority of the action </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2589" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1028" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a11fa0057c57ca3a6b0f6e8ec2660b050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStorePullRowSparse</definition>
        <argsstring>(KVStoreHandle handle, mx_uint num, const int *keys, NDArrayHandle *vals, const NDArrayHandle *row_ids, int priority)</argsstring>
        <name>MXKVStorePullRowSparse</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>vals</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>row_ids</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>pull a list of (key, value) pairs from the kvstore, where each key is an integer. The NDArray pulled back will be in row_sparse storage with only the specified row_ids present based row_ids (others rows are zeros). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the kvstore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of key-value pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row_ids</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of row_id NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>the priority of the action </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2607" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1078" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a39d10b5d3d13635ad94bef1445306f45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStorePullRowSparseEx</definition>
        <argsstring>(KVStoreHandle handle, mx_uint num, const char **keys, NDArrayHandle *vals, const NDArrayHandle *row_ids, int priority)</argsstring>
        <name>MXKVStorePullRowSparseEx</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>vals</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>row_ids</declname>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>pull a list of (key, value) pairs from the kvstore, where each key is a string. The NDArray pulled back will be in row_sparse storage with only the specified row_ids present based row_ids (others rows are zeros). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the kvstore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of key-value pairs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vals</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row_ids</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of row_id NDArrays </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>the priority of the action </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2625" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1096" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1adbdd2035afce961837866c711af4f0ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreSetUpdater</definition>
        <argsstring>(KVStoreHandle handle, MXKVStoreUpdater updater, void *updater_handle)</argsstring>
        <name>MXKVStoreSetUpdater</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a80aad02a0ebd29de5ad0b65b2c8ccdb3" kindref="member">MXKVStoreUpdater</ref></type>
          <declname>updater</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>updater_handle</declname>
        </param>
        <briefdescription>
<para>register a push updater </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the KVStore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updater</parametername>
</parameternamelist>
<parameterdescription>
<para>udpater function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updater_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The additional handle used to invoke the updater </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2663" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1130" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a70e08b32e56ad80a3557f831f6fd3b50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreSetUpdaterEx</definition>
        <argsstring>(KVStoreHandle handle, MXKVStoreUpdater updater, MXKVStoreStrUpdater str_updater, void *updater_handle)</argsstring>
        <name>MXKVStoreSetUpdaterEx</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a80aad02a0ebd29de5ad0b65b2c8ccdb3" kindref="member">MXKVStoreUpdater</ref></type>
          <declname>updater</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1afd75e802653078ab56620f2d17045b4f" kindref="member">MXKVStoreStrUpdater</ref></type>
          <declname>str_updater</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>updater_handle</declname>
        </param>
        <briefdescription>
<para>register a push updater with int keys and one with string keys </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the KVStore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updater</parametername>
</parameternamelist>
<parameterdescription>
<para>updater function with int keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str_updater</parametername>
</parameternamelist>
<parameterdescription>
<para>updater function with string keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updater_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The additional handle used to invoke the updater </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2674" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1138" bodyend="1159"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a9dba9ada3ed98c76fe78221013e37f07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreGetType</definition>
        <argsstring>(KVStoreHandle handle, const char **type)</argsstring>
        <name>MXKVStoreGetType</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get the type of the kvstore </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the KVStore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>a string type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2684" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1238" bodyend="1243"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a1edf063b82bdd94d1f5214056dd55144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreGetRank</definition>
        <argsstring>(KVStoreHandle handle, int *ret)</argsstring>
        <name>MXKVStoreGetRank</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
<para>return The rank of this node in its group, which is in [0, GroupSize). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the KVStore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ret</parametername>
</parameternamelist>
<parameterdescription>
<para>the node rank </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2697" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1161" bodyend="1165"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aac41a2bd1dfcdebb920c97eab40ea07b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreGetGroupSize</definition>
        <argsstring>(KVStoreHandle handle, int *ret)</argsstring>
        <name>MXKVStoreGetGroupSize</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
<para>return The number of nodes in this group, which is </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>number of workers if if <computeroutput>IsWorkerNode() == true</computeroutput>,</para>
</listitem><listitem><para>number of servers if if <computeroutput>IsServerNode() == true</computeroutput>,</para>
</listitem><listitem><para>1 if <computeroutput>IsSchedulerNode() == true</computeroutput>, <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the KVStore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ret</parametername>
</parameternamelist>
<parameterdescription>
<para>the group size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2709" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1167" bodyend="1171"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a67d719a0a5470f6292acb5896fbca4aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreIsWorkerNode</definition>
        <argsstring>(int *ret)</argsstring>
        <name>MXKVStoreIsWorkerNode</name>
        <param>
          <type>int *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
<para>return whether or not this process is a worker node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ret</parametername>
</parameternamelist>
<parameterdescription>
<para>1 for yes, 0 for no </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2717" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1198" bodyend="1202"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a06bf33dff7bc03cdd7474460e515882d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreIsServerNode</definition>
        <argsstring>(int *ret)</argsstring>
        <name>MXKVStoreIsServerNode</name>
        <param>
          <type>int *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
<para>return whether or not this process is a server node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ret</parametername>
</parameternamelist>
<parameterdescription>
<para>1 for yes, 0 for no </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2725" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1204" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aad401ff990cb4142070e024af7ac0781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreIsSchedulerNode</definition>
        <argsstring>(int *ret)</argsstring>
        <name>MXKVStoreIsSchedulerNode</name>
        <param>
          <type>int *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
<para>return whether or not this process is a scheduler node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ret</parametername>
</parameternamelist>
<parameterdescription>
<para>1 for yes, 0 for no </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2733" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1210" bodyend="1214"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a96e8df6a3170c52b369954215dabe71c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreBarrier</definition>
        <argsstring>(KVStoreHandle handle)</argsstring>
        <name>MXKVStoreBarrier</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>global barrier among all worker machines </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the KVStore </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2741" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1173" bodyend="1177"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1add5b8e9bbd098e8fef5deab4c7ab2737" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreSetBarrierBeforeExit</definition>
        <argsstring>(KVStoreHandle handle, const int barrier_before_exit)</argsstring>
        <name>MXKVStoreSetBarrierBeforeExit</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>barrier_before_exit</declname>
        </param>
        <briefdescription>
<para>whether to do barrier when finalize </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the KVStore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>barrier_before_exit</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to do barrier when kvstore finalize </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2750" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1179" bodyend="1184"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a732c3edf14dc24784abb27fe2613a10a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreRunServer</definition>
        <argsstring>(KVStoreHandle handle, MXKVStoreServerController controller, void *controller_handle)</argsstring>
        <name>MXKVStoreRunServer</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a6968ac8b790fb40a674a364a2a74cba6" kindref="member">MXKVStoreServerController</ref></type>
          <declname>controller</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>controller_handle</declname>
        </param>
        <briefdescription>
<para>Run as server (or scheduler) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the KVStore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-defined server controller </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>controller_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>helper handle for implementing controller </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2770" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1216" bodyend="1227"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a5de45491037df7bf6b757b627100acd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreSendCommmandToServers</definition>
        <argsstring>(KVStoreHandle handle, int cmd_id, const char *cmd_body)</argsstring>
        <name>MXKVStoreSendCommmandToServers</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cmd_body</declname>
        </param>
        <briefdescription>
<para>Send a command to all server nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the KVStore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the head of the command </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd_body</parametername>
</parameternamelist>
<parameterdescription>
<para>the body of the command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2781" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1229" bodyend="1236"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac8b5138bcb7959cc831a97a24755e969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXKVStoreGetNumDeadNode</definition>
        <argsstring>(KVStoreHandle handle, const int node_id, int *number, const int timeout_sec DEFAULT(60))</argsstring>
        <name>MXKVStoreGetNumDeadNode</name>
        <param>
          <type><ref refid="c__api_8h_1a0543f53696ffcf5a7a2f0f4403f87623" kindref="member">KVStoreHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>node_id</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>number</declname>
        </param>
        <param>
          <type>const int timeout_sec </type>
          <declname>DEFAULT</declname>
          <array>60</array>
        </param>
        <briefdescription>
<para>Get the number of ps dead node(s) specified by {node_id}. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to the KVStore </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Can be a node group or a single node. kScheduler = 1, kServerGroup = 2, kWorkerGroup = 4 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>number</parametername>
</parameternamelist>
<parameterdescription>
<para>Ouptut number of dead nodes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_sec</parametername>
</parameternamelist>
<parameterdescription>
<para>A node fails to send heartbeart in {timeout_sec} seconds will be presumed as &apos;dead&apos; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2795" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ab2b93d730f48591b4f77f3968f6a1b98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRecordIOWriterCreate</definition>
        <argsstring>(const char *uri, RecordIOHandle *out)</argsstring>
        <name>MXRecordIOWriterCreate</name>
        <param>
          <type>const char *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a4cc6d9b5a408760fc893c0b568d6aeae" kindref="member">RecordIOHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create a RecordIO writer object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>path to file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>handle pointer to the created object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2806" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1261" bodyend="1272"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ab2a55917ffd918e334464f1b8a7a1ab9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRecordIOWriterFree</definition>
        <argsstring>(RecordIOHandle handle)</argsstring>
        <name>MXRecordIOWriterFree</name>
        <param>
          <type><ref refid="c__api_8h_1a4cc6d9b5a408760fc893c0b568d6aeae" kindref="member">RecordIOHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Delete a RecordIO writer object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to RecordIO object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2813" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1274" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a0c380b6aa00446e7cb6021c8e2df75f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRecordIOWriterWriteRecord</definition>
        <argsstring>(RecordIOHandle handle, const char *buf, size_t size)</argsstring>
        <name>MXRecordIOWriterWriteRecord</name>
        <param>
          <type><ref refid="c__api_8h_1a4cc6d9b5a408760fc893c0b568d6aeae" kindref="member">RecordIOHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Write a record to a RecordIO object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to RecordIO object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2822" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1284" bodyend="1291"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a6cc8e9f94ec431edf8d9502f20d7b833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRecordIOWriterTell</definition>
        <argsstring>(RecordIOHandle handle, size_t *pos)</argsstring>
        <name>MXRecordIOWriterTell</name>
        <param>
          <type><ref refid="c__api_8h_1a4cc6d9b5a408760fc893c0b568d6aeae" kindref="member">RecordIOHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Get the current writer pointer position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to RecordIO object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to output position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2831" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1293" bodyend="1299"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a4464ddbe13b8a4542d3f91bf055d50af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRecordIOReaderCreate</definition>
        <argsstring>(const char *uri, RecordIOHandle *out)</argsstring>
        <name>MXRecordIOReaderCreate</name>
        <param>
          <type>const char *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a4cc6d9b5a408760fc893c0b568d6aeae" kindref="member">RecordIOHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create a RecordIO reader object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>path to file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>handle pointer to the created object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2839" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1301" bodyend="1312"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a92736f17a5d9fd58e53e621358e4ef31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRecordIOReaderFree</definition>
        <argsstring>(RecordIOHandle handle)</argsstring>
        <name>MXRecordIOReaderFree</name>
        <param>
          <type><ref refid="c__api_8h_1a4cc6d9b5a408760fc893c0b568d6aeae" kindref="member">RecordIOHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Delete a RecordIO reader object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to RecordIO object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2846" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1314" bodyend="1323"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a38e350f748967e0caa2c781a507667e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRecordIOReaderReadRecord</definition>
        <argsstring>(RecordIOHandle handle, char const **buf, size_t *size)</argsstring>
        <name>MXRecordIOReaderReadRecord</name>
        <param>
          <type><ref refid="c__api_8h_1a4cc6d9b5a408760fc893c0b568d6aeae" kindref="member">RecordIOHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>char const **</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Write a record to a RecordIO object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to RecordIO object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to return buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>point to size of buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2855" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1325" bodyend="1338"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aa992161083826ee6a434ade2790fbb31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRecordIOReaderSeek</definition>
        <argsstring>(RecordIOHandle handle, size_t pos)</argsstring>
        <name>MXRecordIOReaderSeek</name>
        <param>
          <type><ref refid="c__api_8h_1a4cc6d9b5a408760fc893c0b568d6aeae" kindref="member">RecordIOHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Set the current reader pointer position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to RecordIO object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>target position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2864" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1340" bodyend="1346"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a060d9a58a2e692af26fae433cecf7436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRecordIOReaderTell</definition>
        <argsstring>(RecordIOHandle handle, size_t *pos)</argsstring>
        <name>MXRecordIOReaderTell</name>
        <param>
          <type><ref refid="c__api_8h_1a4cc6d9b5a408760fc893c0b568d6aeae" kindref="member">RecordIOHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Get the current writer pointer position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to RecordIO object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to output position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when success, -1 when failure happens </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2872" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1348" bodyend="1354"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a87e98002ae1a925b65a8cf0773f802d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRtcCreate</definition>
        <argsstring>(char *name, mx_uint num_input, mx_uint num_output, char **input_names, char **output_names, NDArrayHandle *inputs, NDArrayHandle *outputs, char *kernel, RtcHandle *out)</argsstring>
        <name>MXRtcCreate</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_input</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_output</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>input_names</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>output_names</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a58a159a7417ad988206970d46c4c7ee8" kindref="member">RtcHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create a MXRtc object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2877" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1356" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a20f72cb4e18d5081eaf40875adcb6e98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRtcPush</definition>
        <argsstring>(RtcHandle handle, mx_uint num_input, mx_uint num_output, NDArrayHandle *inputs, NDArrayHandle *outputs, mx_uint gridDimX, mx_uint gridDimY, mx_uint gridDimZ, mx_uint blockDimX, mx_uint blockDimY, mx_uint blockDimZ)</argsstring>
        <name>MXRtcPush</name>
        <param>
          <type><ref refid="c__api_8h_1a58a159a7417ad988206970d46c4c7ee8" kindref="member">RtcHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_input</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>num_output</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>gridDimX</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>gridDimY</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>gridDimZ</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>blockDimX</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>blockDimY</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>blockDimZ</declname>
        </param>
        <briefdescription>
<para>Run cuda kernel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2885" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1365" bodyend="1376"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a13819b19ab3cdd91566b1d5cf8bc6b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRtcFree</definition>
        <argsstring>(RtcHandle handle)</argsstring>
        <name>MXRtcFree</name>
        <param>
          <type><ref refid="c__api_8h_1a58a159a7417ad988206970d46c4c7ee8" kindref="member">RtcHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Delete a MXRtc object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2897" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1378" bodyend="1382"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a92233cd9477ce12458bbd2b3e628dec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXCustomOpRegister</definition>
        <argsstring>(const char *op_type, CustomOpPropCreator creator)</argsstring>
        <name>MXCustomOpRegister</name>
        <param>
          <type>const char *</type>
          <declname>op_type</declname>
        </param>
        <param>
          <type>CustomOpPropCreator</type>
          <declname>creator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2903" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1384" bodyend="1388"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ae1f7686cd08133d865ed6b9ea23eb31b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXCustomFunctionRecord</definition>
        <argsstring>(int num_inputs, NDArrayHandle *inputs, int num_outputs, NDArrayHandle *outputs, struct MXCallbackList *callbacks)</argsstring>
        <name>MXCustomFunctionRecord</name>
        <param>
          <type>int</type>
          <declname>num_inputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_outputs</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>struct <ref refid="struct_m_x_callback_list" kindref="compound">MXCallbackList</ref> *</type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2912" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_function.cc" bodystart="186" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a19d9053892c51c0b89f0e7698ff9c24c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRtcCudaModuleCreate</definition>
        <argsstring>(const char *source, int num_options, const char **options, int num_exports, const char **exports, CudaModuleHandle *out)</argsstring>
        <name>MXRtcCudaModuleCreate</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_options</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>options</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_exports</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>exports</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1aeef73e8188f1cf7f79a13517f5828693" kindref="member">CudaModuleHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2924" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1391" bodyend="1405"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a1f93e2016c7b3cd869a5741201b5508c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRtcCudaModuleFree</definition>
        <argsstring>(CudaModuleHandle handle)</argsstring>
        <name>MXRtcCudaModuleFree</name>
        <param>
          <type><ref refid="c__api_8h_1aeef73e8188f1cf7f79a13517f5828693" kindref="member">CudaModuleHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2931" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1407" bodyend="1415"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1aa58e90c31701d59826a76bf0efaf4db5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRtcCudaKernelCreate</definition>
        <argsstring>(CudaModuleHandle handle, const char *name, int num_args, int *is_ndarray, int *is_const, int *arg_types, CudaKernelHandle *out)</argsstring>
        <name>MXRtcCudaKernelCreate</name>
        <param>
          <type><ref refid="c__api_8h_1aeef73e8188f1cf7f79a13517f5828693" kindref="member">CudaModuleHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_args</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>is_ndarray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>is_const</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>arg_types</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a879a534941e7727cf9deea865c3144b0" kindref="member">CudaKernelHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2942" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1417" bodyend="1435"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a025928c86657eb708e45103b8e3f02d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRtcCudaKernelFree</definition>
        <argsstring>(CudaKernelHandle handle)</argsstring>
        <name>MXRtcCudaKernelFree</name>
        <param>
          <type><ref refid="c__api_8h_1a879a534941e7727cf9deea865c3144b0" kindref="member">CudaKernelHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2949" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1437" bodyend="1445"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ab538e41bfc6c0ce3185676dd028f8ccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXRtcCudaKernelCall</definition>
        <argsstring>(CudaKernelHandle handle, int dev_id, void **args, mx_uint grid_dim_x, mx_uint grid_dim_y, mx_uint grid_dim_z, mx_uint block_dim_x, mx_uint block_dim_y, mx_uint block_dim_z, mx_uint shared_mem)</argsstring>
        <name>MXRtcCudaKernelCall</name>
        <param>
          <type><ref refid="c__api_8h_1a879a534941e7727cf9deea865c3144b0" kindref="member">CudaKernelHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>grid_dim_x</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>grid_dim_y</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>grid_dim_z</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>block_dim_x</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>block_dim_y</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>block_dim_z</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>shared_mem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2963" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1447" bodyend="1472"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a3958af27157b6bacea10e87440180669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayGetSharedMemHandle</definition>
        <argsstring>(NDArrayHandle handle, int *shared_pid, int *shared_id)</argsstring>
        <name>MXNDArrayGetSharedMemHandle</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>shared_pid</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>shared_id</declname>
        </param>
        <briefdescription>
<para>Get shared memory handle from NDArray. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>NDArray handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_pid</parametername>
</parameternamelist>
<parameterdescription>
<para>output PID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_id</parametername>
</parameternamelist>
<parameterdescription>
<para>output shared memory id. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2974" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1474" bodyend="1492"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a260571f9748de6eb097ea6d0f0a8b915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayCreateFromSharedMem</definition>
        <argsstring>(int shared_pid, int shared_id, const mx_uint *shape, mx_uint ndim, int dtype, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayCreateFromSharedMem</name>
        <param>
          <type>int</type>
          <declname>shared_pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shared_id</declname>
        </param>
        <param>
          <type>const <ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref> *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a3438cf44a22968b254a78032ca0c2c59" kindref="member">mx_uint</ref></type>
          <declname>ndim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>DEPRECATED. Use MXNDArrayCreateFromSharedMemEx instead. Reconstruct NDArray from shared memory handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shared_pid</parametername>
</parameternamelist>
<parameterdescription>
<para>shared PID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_id</parametername>
</parameternamelist>
<parameterdescription>
<para>shared memory id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to NDArray dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>number of NDArray dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>data type of NDArray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>constructed NDArray </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2986" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1494" bodyend="1499"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a9fc1010dc2f1adb36569be3142e2995a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXStorageEmptyCache</definition>
        <argsstring>(int dev_type, int dev_id)</argsstring>
        <name>MXStorageEmptyCache</name>
        <param>
          <type>int</type>
          <declname>dev_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <briefdescription>
<para>Release all unreferenced memory from the devices storage managers memory pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev_type</parametername>
</parameternamelist>
<parameterdescription>
<para>device type, specify device we want to take </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the device id of the specific device </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="2994" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1636" bodyend="1641"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a4b5f30203d907a527443c3348e5a6308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXNDArrayCreateFromSharedMemEx</definition>
        <argsstring>(int shared_pid, int shared_id, const int *shape, int ndim, int dtype, NDArrayHandle *out)</argsstring>
        <name>MXNDArrayCreateFromSharedMemEx</name>
        <param>
          <type>int</type>
          <declname>shared_pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shared_id</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Reconstruct NDArray from shared memory handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shared_pid</parametername>
</parameternamelist>
<parameterdescription>
<para>shared PID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shared_id</parametername>
</parameternamelist>
<parameterdescription>
<para>shared memory id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to NDArray dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndim</parametername>
</parameternamelist>
<parameterdescription>
<para>number of NDArray dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>data type of NDArray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>constructed NDArray </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="3005" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1501" bodyend="1506"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad81c6639bf79c3d76473db6aa61a7f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXEnginePushAsync</definition>
        <argsstring>(EngineAsyncFunc async_func, void *func_param, EngineFuncParamDeleter deleter, ContextHandle ctx_handle, EngineVarHandle const_vars_handle, int num_const_vars, EngineVarHandle mutable_vars_handle, int num_mutable_vars, EngineFnPropertyHandle prop_handle DEFAULT(NULL), int priority DEFAULT(0), const char *opr_name DEFAULT(NULL), bool wait DEFAULT(false))</argsstring>
        <name>MXEnginePushAsync</name>
        <param>
          <type><ref refid="c__api_8h_1a5032518de52253f051cf2836e9e5cd0e" kindref="member">EngineAsyncFunc</ref></type>
          <declname>async_func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>func_param</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a9aae9f5a4da0b568aef0d74c8a1c3d48" kindref="member">EngineFuncParamDeleter</ref></type>
          <declname>deleter</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a202dafc02d455ec60a7442598d76dc6c" kindref="member">ContextHandle</ref></type>
          <declname>ctx_handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1afb510271a7a8d23089e2a43e50fb1029" kindref="member">EngineVarHandle</ref></type>
          <declname>const_vars_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_const_vars</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1afb510271a7a8d23089e2a43e50fb1029" kindref="member">EngineVarHandle</ref></type>
          <declname>mutable_vars_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_mutable_vars</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a1585c296e0195ef7c9524648d0cbb1ed" kindref="member">EngineFnPropertyHandle</ref> prop_handle </type>
          <declname>DEFAULT</declname>
          <array>NULL</array>
        </param>
        <param>
          <type>int priority </type>
          <declname>DEFAULT</declname>
          <array>0</array>
        </param>
        <param>
          <type>const char *opr_name </type>
          <declname>DEFAULT</declname>
          <array>NULL</array>
        </param>
        <param>
          <type>bool wait </type>
          <declname>DEFAULT</declname>
          <array>false</array>
        </param>
        <briefdescription>
<para>Push an asynchronous operation to the engine. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>async_func</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution function whici takes a parameter on_complete that must be called when the execution ompletes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func_param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter set on calling async_func, can be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deleter</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback to free func_param, can be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_vars_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The variables that current operation will use but not mutate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_const_vars</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of const_vars_handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mutable_vars_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The variables that current operation will mutate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_mutable_vars</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of mutable_vars_handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Property of the function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Priority of the action, as hint to the engine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wait</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this is a WaitForVar operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="3025" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad0a3a91057029cb941808ee21b2088ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXEnginePushSync</definition>
        <argsstring>(EngineSyncFunc sync_func, void *func_param, EngineFuncParamDeleter deleter, ContextHandle ctx_handle, EngineVarHandle const_vars_handle, int num_const_vars, EngineVarHandle mutable_vars_handle, int num_mutable_vars, EngineFnPropertyHandle prop_handle DEFAULT(NULL), int priority DEFAULT(0), const char *opr_name DEFAULT(NULL))</argsstring>
        <name>MXEnginePushSync</name>
        <param>
          <type><ref refid="c__api_8h_1a9ed003b17af3cb5927fb2b3f32f1530d" kindref="member">EngineSyncFunc</ref></type>
          <declname>sync_func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>func_param</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a9aae9f5a4da0b568aef0d74c8a1c3d48" kindref="member">EngineFuncParamDeleter</ref></type>
          <declname>deleter</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a202dafc02d455ec60a7442598d76dc6c" kindref="member">ContextHandle</ref></type>
          <declname>ctx_handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1afb510271a7a8d23089e2a43e50fb1029" kindref="member">EngineVarHandle</ref></type>
          <declname>const_vars_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_const_vars</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1afb510271a7a8d23089e2a43e50fb1029" kindref="member">EngineVarHandle</ref></type>
          <declname>mutable_vars_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_mutable_vars</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a1585c296e0195ef7c9524648d0cbb1ed" kindref="member">EngineFnPropertyHandle</ref> prop_handle </type>
          <declname>DEFAULT</declname>
          <array>NULL</array>
        </param>
        <param>
          <type>int priority </type>
          <declname>DEFAULT</declname>
          <array>0</array>
        </param>
        <param>
          <type>const char *opr_name </type>
          <declname>DEFAULT</declname>
          <array>NULL</array>
        </param>
        <briefdescription>
<para>Push a synchronous operation to the engine. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sync_func</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution function that executes the operation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func_param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter set on calling sync_func, can be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deleter</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback to free func_param, can be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_vars_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The variables that current operation will use but not mutate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_const_vars</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of const_vars_handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mutable_vars_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The variables that current operation will mutate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_mutable_vars</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of mutable_vars_handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Property of the function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Priority of the action, as hint to the engine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="3048" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1a84d1c0c089009e915195e109016251ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXShallowCopyNDArray</definition>
        <argsstring>(NDArrayHandle src, NDArrayHandle *out)</argsstring>
        <name>MXShallowCopyNDArray</name>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create an NDArray from source sharing the same data chunk. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source NDArray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>new NDArray sharing the same data chunck with src </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="3059" column="1" bodyfile="incubator-mxnet/src/c_api/c_api.cc" bodystart="1643" bodyend="1650"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac72288f7bc10bbbc2127c2fc7eb4bea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXShallowCopySymbol</definition>
        <argsstring>(SymbolHandle src, SymbolHandle *out)</argsstring>
        <name>MXShallowCopySymbol</name>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a301e9a7722b326126defdd39ccd99b37" kindref="member">SymbolHandle</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Create an Symbol from source sharing the same graph structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source Symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>new Symbol sharing the same graph structure with src </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="3065" column="1" bodyfile="incubator-mxnet/src/c_api/c_api_symbolic.cc" bodystart="1184" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ad2d8fbfa400001a1d8672e9749d56bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXEnginePushAsyncND</definition>
        <argsstring>(EngineAsyncFunc async_func, void *func_param, EngineFuncParamDeleter deleter, ContextHandle ctx_handle, NDArrayHandle *const_nds_handle, int num_const_nds, NDArrayHandle *mutable_nds_handle, int num_mutable_nds, EngineFnPropertyHandle prop_handle DEFAULT(NULL), int priority DEFAULT(0), const char *opr_name DEFAULT(NULL), bool wait DEFAULT(false))</argsstring>
        <name>MXEnginePushAsyncND</name>
        <param>
          <type><ref refid="c__api_8h_1a5032518de52253f051cf2836e9e5cd0e" kindref="member">EngineAsyncFunc</ref></type>
          <declname>async_func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>func_param</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a9aae9f5a4da0b568aef0d74c8a1c3d48" kindref="member">EngineFuncParamDeleter</ref></type>
          <declname>deleter</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a202dafc02d455ec60a7442598d76dc6c" kindref="member">ContextHandle</ref></type>
          <declname>ctx_handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>const_nds_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_const_nds</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>mutable_nds_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_mutable_nds</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a1585c296e0195ef7c9524648d0cbb1ed" kindref="member">EngineFnPropertyHandle</ref> prop_handle </type>
          <declname>DEFAULT</declname>
          <array>NULL</array>
        </param>
        <param>
          <type>int priority </type>
          <declname>DEFAULT</declname>
          <array>0</array>
        </param>
        <param>
          <type>const char *opr_name </type>
          <declname>DEFAULT</declname>
          <array>NULL</array>
        </param>
        <param>
          <type>bool wait </type>
          <declname>DEFAULT</declname>
          <array>false</array>
        </param>
        <briefdescription>
<para>Push an asynchronous operation to the engine. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>async_func</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution function whici takes a parameter on_complete that must be called when the execution ompletes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func_param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter set on calling async_func, can be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deleter</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback to free func_param, can be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_nds_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The NDArrays that current operation will use but not mutate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_const_nds</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of const_nds_handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mutable_nds_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The NDArrays that current operation will mutate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_mutable_nds</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of mutable_nds_handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Property of the function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Priority of the action, as hint to the engine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wait</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this is a WaitForVar operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="3084" column="1"/>
      </memberdef>
      <memberdef kind="function" id="c__api_8h_1ac46a9e128aca55a607d3f3da525cd7de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="c__predict__api_8h_1a5b0e47dde55f9b2f58b99fab92d1e0ac" kindref="member">MXNET_DLL</ref> int</type>
        <definition>MXNET_DLL int MXEnginePushSyncND</definition>
        <argsstring>(EngineSyncFunc sync_func, void *func_param, EngineFuncParamDeleter deleter, ContextHandle ctx_handle, NDArrayHandle *const_nds_handle, int num_const_nds, NDArrayHandle *mutable_nds_handle, int num_mutable_nds, EngineFnPropertyHandle prop_handle DEFAULT(NULL), int priority DEFAULT(0), const char *opr_name DEFAULT(NULL))</argsstring>
        <name>MXEnginePushSyncND</name>
        <param>
          <type><ref refid="c__api_8h_1a9ed003b17af3cb5927fb2b3f32f1530d" kindref="member">EngineSyncFunc</ref></type>
          <declname>sync_func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>func_param</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a9aae9f5a4da0b568aef0d74c8a1c3d48" kindref="member">EngineFuncParamDeleter</ref></type>
          <declname>deleter</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a202dafc02d455ec60a7442598d76dc6c" kindref="member">ContextHandle</ref></type>
          <declname>ctx_handle</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>const_nds_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_const_nds</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a99c2939783499d2a5ce0d76881dce9df" kindref="member">NDArrayHandle</ref> *</type>
          <declname>mutable_nds_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_mutable_nds</declname>
        </param>
        <param>
          <type><ref refid="c__api_8h_1a1585c296e0195ef7c9524648d0cbb1ed" kindref="member">EngineFnPropertyHandle</ref> prop_handle </type>
          <declname>DEFAULT</declname>
          <array>NULL</array>
        </param>
        <param>
          <type>int priority </type>
          <declname>DEFAULT</declname>
          <array>0</array>
        </param>
        <param>
          <type>const char *opr_name </type>
          <declname>DEFAULT</declname>
          <array>NULL</array>
        </param>
        <briefdescription>
<para>Push a synchronous operation to the engine. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sync_func</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution function that executes the operation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func_param</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameter set on calling sync_func, can be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deleter</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback to free func_param, can be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Execution context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_nds_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The NDArrays that current operation will use but not mutate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_const_nds</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of const_nds_handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mutable_nds_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The NDArrays that current operation will mutate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_mutable_nds</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of mutable_nds_handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prop_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Property of the function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Priority of the action, as hint to the engine. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opr_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="incubator-mxnet/include/mxnet/c_api.h" line="3107" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C API of mxnet. </para>
    </briefdescription>
    <detaileddescription>
<para>Copyright (c) 2015 by Contributors </para>
    </detaileddescription>
    <location file="incubator-mxnet/include/mxnet/c_api.h"/>
  </compounddef>
</doxygen>
