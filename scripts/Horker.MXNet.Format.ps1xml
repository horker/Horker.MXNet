<?xml version="1.0" encoding="utf-8" ?>

<Configuration>
    <ViewDefinitions>
        <View>
            <Name>Horker.MXNet.Core.NDArray</Name>
            <ViewSelectedBy>
                <TypeName>Horker.MXNet.Core.NDArray</TypeName>
            </ViewSelectedBy>
            <CustomControl>
                <CustomEntries>
                    <CustomEntry>
                        <CustomItem>
                            <ExpressionBinding>
                                <ScriptBlock>
                                    [Horker.MXNet.Core.NDArrayExtensions]::ToStringInLongFormat($_)
                                </ScriptBlock>
                            </ExpressionBinding>
                        </CustomItem>
                    </CustomEntry>
                </CustomEntries>
            </CustomControl>
        </View>
        <View>
            <Name>Horker.Numerics.DataMaps.Column</Name>
            <ViewSelectedBy>
                <TypeName>Horker.Numerics.DataMaps.Column</TypeName>
            </ViewSelectedBy>
            <TableControl>
                <TableHeaders>
                    <TableColumnHeader>
                        <Label>Name</Label>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>DataType</Label>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>Count</Label>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>Data</Label>
                    </TableColumnHeader>
                </TableHeaders>
                <TableRowEntries>
                    <TableRowEntry>
                        <TableColumnItems>
                            <TableColumnItem>
                                <ScriptBlock>$_.Name</ScriptBlock>
                            </TableColumnItem>
                            <TableColumnItem>
                                <ScriptBlock>$_.DataType</ScriptBlock>
                            </TableColumnItem>
                            <TableColumnItem>
                                <ScriptBlock>$_.Data.Count</ScriptBlock>
                            </TableColumnItem>
                            <TableColumnItem>
                                <ScriptBlock>$_.Data</ScriptBlock>
                            </TableColumnItem>
                        </TableColumnItems>
                    </TableRowEntry>
                 </TableRowEntries>
            </TableControl>
        </View>
        <!--
        <View>
            <Name>Horker.Numerics.DataMaps.DataMap</Name>
            <ViewSelectedBy>
                <TypeName>Horker.Numerics.DataMaps.DataMap</TypeName>
            </ViewSelectedBy>
            <CustomControl>
                <CustomEntries>
                    <CustomEntry>
                        <CustomItem>
                            <ExpressionBinding>
                                <ScriptBlock>
                                    $_.Columns |
                                    Select-Object `
                                        @{ n = "Name"; e = { $_.Name } },
                                        @{ n = "DataType"; e = { $_.Value.DataType } },
                                        @{ n = "Count"; e = { $_.Data.Count } },
                                        @{ n = "Data"; e = { $_.Data } } |
                                    Format-Table | Out-String
                                </ScriptBlock>
                            </ExpressionBinding>
                        </CustomItem>
                    </CustomEntry>
                </CustomEntries>
            </CustomControl>
        </View>
        <View>
            <Name>Accord.Statistics.Analysis.MultinomialLogisticRegressionAnalysis</Name>
            <ViewSelectedBy>
                <TypeName>Accord.Statistics.Analysis.MultinomialLogisticRegressionAnalysis</TypeName>
            </ViewSelectedBy>
            <CustomControl>
                <CustomEntries>
                    <CustomEntry>
                        <CustomItem>
                            <ExpressionBinding>
                                <ScriptBlock>
$tab = New-Object Collections.Generic.List[PSObject]
$tab.Add([PSCustomObject]@{
    Index = 0
    Class = $_.OutputNames[0]
    Feature = "(baseline)"
    Coefficient = [double]::NaN
    Confidence = $null
    "Std.Error" = [double]::NaN
    WaldTest = [double]::NaN
})

for ($i = 0; $i -lt $_.NumberOfOutputs - 1; ++$i) {
    for ($j = 0; $j -lt $_.NumberOfInputs + 1; ++$j) {
        $index = $i * ($_.NumberOfInputs + 1) + $j
        $coef = $_.Coefficients[$index + 1]
        $r = [PSCustomObject]@{
            Index = $j
            Class = $_.OutputNames[$i + 1]
            Feature = (@("Intercept") + $_.InputNames)[$j]
            Coefficient = [Math]::Round($_.CoefficientValues[$i][$j], 5)
            Confidence = "[" + $coef.ConfidenceLower.ToString("g5") + ", " + $coef.ConfidenceUpper.ToString("g5") + "]"
            "Std.Error" = [Math]::Round($_.StandardErrors[$i][$j], 5)
            WaldTest = $_.WaldTests[$i][$j].PValue.ToString("g3")
        }
        $tab.Add($r)
    }
}

$out = @"
$(($tab | Format-Table | Out-String).Trim())

ChiSquare = $($_.ChiSquare.PValue.ToString("g3"))
LogLikelihood = $($_.LogLikelihood.ToString("g3")), Deviance = $($_.Deviance.ToString("g3")), AIC = $((-2 * $_.LogLikelihood + 2 * ($_.Coefficients.Count - 1)).ToString("g3"))
"@
$out
                                </ScriptBlock>
                            </ExpressionBinding>
                        </CustomItem>
                    </CustomEntry>
                </CustomEntries>
            </CustomControl>
        </View>
        -->
    </ViewDefinitions>
</Configuration>
